<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>墨码山河</title>
  
  <subtitle>代码改变世界</subtitle>
  <link href="https://momashanhe.com/atom.xml" rel="self"/>
  
  <link href="https://momashanhe.com/"/>
  <updated>2024-04-07T03:47:51.044Z</updated>
  <id>https://momashanhe.com/</id>
  
  <author>
    <name>墨码山河</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>缩放导致元素尺寸错乱</title>
    <link href="https://momashanhe.com/posts/20240407/114739/"/>
    <id>https://momashanhe.com/posts/20240407/114739/</id>
    <published>2024-04-07T03:47:39.000Z</published>
    <updated>2024-04-07T03:47:51.044Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：</p><span id="more"></span><p><a href="https://blog.csdn.net/O3O_O3O_/article/details/121255024">https://blog.csdn.net/O3O_O3O_/article/details/121255024</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Emmet语法规则</title>
    <link href="https://momashanhe.com/posts/20240407/104745/"/>
    <id>https://momashanhe.com/posts/20240407/104745/</id>
    <published>2024-04-07T02:47:45.000Z</published>
    <updated>2024-04-07T02:47:45.459Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS2进阶</title>
    <link href="https://momashanhe.com/posts/20240405/142436/"/>
    <id>https://momashanhe.com/posts/20240405/142436/</id>
    <published>2024-04-05T06:24:36.000Z</published>
    <updated>2024-04-08T08:00:29.103Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了CSS的盒子模型。</p><span id="more"></span><h2 id="1-长度单位"><a href="#1-长度单位" class="headerlink" title="1 长度单位"></a>1 长度单位</h2><p>CSS中主要有以下几种长度单位：</p><ul><li>px：像素</li><li>em：元素字体大小的倍数</li><li>rem：根元素字体大小的倍数，根元素就是<code>html</code>元素</li><li>%：父元素对应属性的百分比</li></ul><p>CSS中设置长度，必须加单位，否则样式无效。</p><h2 id="2-显示模式"><a href="#2-显示模式" class="headerlink" title="2 显示模式"></a>2 显示模式</h2><h3 id="2-1-分类"><a href="#2-1-分类" class="headerlink" title="2.1 分类"></a>2.1 分类</h3><h4 id="2-1-1-块级元素"><a href="#2-1-1-块级元素" class="headerlink" title="2.1.1 块级元素"></a>2.1.1 块级元素</h4><p>又称为块元素（block）。</p><p>特点：</p><ol><li>在页面中独占一行，不会与任何元素共用一行，从上到下排列。</li><li>默认宽度：撑满父元素。</li><li>默认高度：由内容撑开。</li><li>可以通过CSS设置宽高。</li></ol><p>相关元素：</p><ul><li>主体结构元素：html、body</li><li>排版相关元素：h1~h6、div、hr、p、pre、div</li><li>列表相关元素：ul、ol、li、dl、dt、dd</li><li>表格相关元素：table、tbody、thead、tfoot、caption、tr</li><li>表单相关元素：form、option</li></ul><h4 id="2-1-2-行内元素"><a href="#2-1-2-行内元素" class="headerlink" title="2.1.2 行内元素"></a>2.1.2 行内元素</h4><p>又称为内联元素（inline）。</p><p>特点:</p><ol><li>在页面中不独占一行，一行中不能容纳下的行内元素，会在下一行继续从左到右排列。</li><li>默认宽度：由内容撑开。</li><li>默认高度：由内容撑开。</li><li>无法通过CSS设置宽高。</li></ol><p>相关元素：</p><ul><li>文本：br、span、em、strong、sup、sub、del、ins</li><li>标记：label</li><li>超链接：a</li></ul><h4 id="2-1-3-行内块元素"><a href="#2-1-3-行内块元素" class="headerlink" title="2.1.3 行内块元素"></a>2.1.3 行内块元素</h4><p>又称为内联块元素（inline-block）。</p><p>特点：</p><ol><li>在页面中不独占一行，一行中不能容纳下的行内元素，会在下一行继续从左到右排列。</li><li>默认宽度：由内容撑开。</li><li>默认高度：由内容撑开。</li><li>可以通过CSS设置宽高。</li></ol><p>相关元素：</p><ul><li>图片：img</li><li>表格：th、td</li><li>表单：input、textarea、select、button</li><li>框架：iframe</li></ul><p>如果按照“是否独占一行”进行分类，行内块元素应该算作行内元素。</p><h3 id="2-2-设置显示模式"><a href="#2-2-设置显示模式" class="headerlink" title="2.2 设置显示模式"></a>2.2 设置显示模式</h3><p>控制元素显示模式的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>display</td>      <td>控制元素的显示模式</td>      <td>        none：元素会被隐藏<br>        block：元素将作为块级元素显示<br>        inline：元素将作为内联元素显示<br>        inline-block：元素将作为行内块元素显示<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>: none;</span><br></pre></td></tr></table></figure><h2 id="3-盒子模型"><a href="#3-盒子模型" class="headerlink" title="3 盒子模型"></a>3 盒子模型</h2><h3 id="3-1-概念"><a href="#3-1-概念" class="headerlink" title="3.1 概念"></a>3.1 概念</h3><p>CSS会把所有的HTML元素都看成一个盒子，所有的样式也都是基于这个盒子。</p><p>相关概念：</p><ul><li>content（内容）：盒子内容，也就是元素内容。</li><li>padding（内边距）：盒子内部边距，盒子内容与盒子边框的补白区域。</li><li>border（边框）：盒子边框，分隔盒子的内外区域。</li><li>margin（外边距）：盒子外部边距，盒子边框与其他盒子的间隔区域。</li></ul><p>说明：</p><ol><li>盒子的大小&#x3D;内容的大小+内边距的大小+边框的大小。</li><li>盒子的外边距不受盒子样式的影响，不会影响盒子的大小，只会影响盒子的位置。</li></ol><p>图示如下：<br><img src="/@image/102001/002001-173918.jpg" alt="001-盒子模型"></p><h3 id="3-2-相关属性"><a href="#3-2-相关属性" class="headerlink" title="3.2 相关属性"></a>3.2 相关属性</h3><h4 id="3-2-1-盒子内容相关"><a href="#3-2-1-盒子内容相关" class="headerlink" title="3.2.1 盒子内容相关"></a>3.2.1 盒子内容相关</h4><p>控制盒子内容的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>width</td>      <td>设置内容区域宽度</td>      <td>长度单位</td>    </tr>    <tr>      <td>max-width</td>      <td>设置内容区域的最大宽度，一般不与width一起使用</td>      <td>长度单位</td>    </tr>    <tr>      <td>min-width</td>      <td>设置内容区域的最小宽度，一般不与width一起使用</td>      <td>长度单位</td>    </tr>    <tr>      <td>height</td>      <td>设置内容区域高度</td>      <td>长度单位</td>    </tr>    <tr>      <td>max-height</td>      <td>设置内容区域的最大高度，一般不与height一起使用</td>      <td>长度单位</td>    </tr>    <tr>      <td>min-height</td>      <td>设置内容区域的最小高度，一般不与height一起使用</td>      <td>长度单位</td>    </tr>  </tbody></table><p>如果没有设置宽度和高度：</p><ul><li>总宽度&#x3D;父盒子content-自身左右margin</li><li>内容宽度&#x3D;父盒子content-自身左右margin-自身左右border-自身左右padding</li><li>总高度&#x3D;父盒子content-自身上下margin</li><li>内容高度&#x3D;父盒子content-自身上下margin-自身上下border-自身上下padding</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">500px</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-盒子内边距相关"><a href="#3-2-2-盒子内边距相关" class="headerlink" title="3.2.2 盒子内边距相关"></a>3.2.2 盒子内边距相关</h4><p>控制盒子内边距的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>padding-top</td>      <td>设置上内边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>padding-right</td>      <td>设置右内边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>padding-bottom</td>      <td>设置下内边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>padding-left</td>      <td>设置左内边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>padding</td>      <td>复合属性</td>      <td>        用空格隔开，顺时针设置内边距：<br>        <dl>          <dt>1. 四个方向内边距相同：</dt>          <dd>padding: 长度;</dd>          <dt>2. 上下内边距相同，左右内边距相同：</dt>          <dd>padding: 上下长度 左右长度;</dd>          <dt>3. 上内边距，左右内边距相同，下内边距：</dt>          <dd>padding: 上长度 左右长度 下长度;</dd>          <dt>4. 上内边距，右内边距，下内边距，左内边距：</dt>          <dd>padding: 上长度 右长度 下长度 左长度;</dd>        </dl>      </td>    </tr>  </tbody></table><p>说明：</p><ol><li>值不能为负数。</li><li>行内元素的左右内边距是没问题的，上下内边距不能完美的设置。</li></ol><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-盒子边框相关"><a href="#3-2-3-盒子边框相关" class="headerlink" title="3.2.3 盒子边框相关"></a>3.2.3 盒子边框相关</h4><p>控制盒子边框的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>border-style</td>      <td>设置边框风格，复合四个方向</td>      <td>        none：无（默认值）<br>        solid：实线<br>        dashed：虚线<br>        dotted：点线<br>        double：双实线<br>      </td>    </tr>    <tr>      <td>border-width</td>      <td>设置边框宽度，复合四个方向</td>      <td>长度单位，默认3px</td>    </tr>    <tr>      <td>border-color</td>      <td>设置边框颜色，复合四个方向</td>      <td>颜色代码，默认黑色</td>    </tr>    <tr>      <td>border</td>      <td>设置复合属性</td>      <td>没有数量和顺序要求，同属性后面的会覆盖前面的</td>    </tr>  </tbody></table><p>上述的每个属性都能在四个方向上的边框单独设置。</p><h4 id="3-2-4-盒子外边距相关"><a href="#3-2-4-盒子外边距相关" class="headerlink" title="3.2.4 盒子外边距相关"></a>3.2.4 盒子外边距相关</h4><p>控制盒子外边框的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>margin-top</td>      <td>设置上外边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>margin-right</td>      <td>设置右外边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>margin-bottom</td>      <td>设置下外边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>margin-left</td>      <td>设置左外边距</td>      <td>长度单位</td>    </tr>    <tr>      <td>margin</td>      <td>复合属性</td>      <td>        用空格隔开，顺时针设置外边距：<br>        <dl>          <dt>1. 四个方向外边距相同：</dt>          <dd>margin: 长度;</dd>          <dt>2. 上下外边距相同，左右外边距相同：</dt>          <dd>margin: 上下长度 左右长度;</dd>          <dt>3. 上外边距，左右外边距相同，下外边距：</dt>          <dd>margin: 上长度 左右长度 下长度;</dd>          <dt>4. 上外边距，右外边距，下外边距，左外边距：</dt>          <dd>margin: 上长度 右长度 下长度 左长度;</dd>        </dl>      </td>    </tr>  </tbody></table><p>说明：</p><ol><li>行内元素的左右外边距是没问题的，上下外边距不能设置。</li><li>上左影响自己的位置，下右影响后面兄弟元素的位置。</li><li>值可以为负数，负值允许其他元素进入到元素内部。</li><li>值可以设为auto，给块级元素的左右设为auto会让元素水平居中。</li></ol><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span>;</span><br></pre></td></tr></table></figure><h3 id="3-3-技巧"><a href="#3-3-技巧" class="headerlink" title="3.3 技巧"></a>3.3 技巧</h3><h4 id="3-3-1-外边距问题"><a href="#3-3-1-外边距问题" class="headerlink" title="3.3.1 外边距问题"></a>3.3.1 外边距问题</h4><h5 id="3-3-1-1-margin塌陷"><a href="#3-3-1-1-margin塌陷" class="headerlink" title="3.3.1.1 margin塌陷"></a>3.3.1.1 margin塌陷</h5><p>在设置margin时，第一个子元素的上margin会作用在父元素上，最后一个子元素的下margin会作用在父元素上。</p><p>问题原因：</p><ul><li>历史遗留问题，可以看作早期CSS故意这么处理的。</li></ul><p>解决办法：</p><ol><li>方案一：给父元素padding设为非0的数字。</li><li>方案二：给父元素border设为非0的数字。</li><li>方案三（推荐）：把父元素overflow设为hidden。</li></ol><h5 id="3-3-1-2-margin合并"><a href="#3-3-1-2-margin合并" class="headerlink" title="3.3.1.2 margin合并"></a>3.3.1.2 margin合并</h5><p>上面兄弟元素的下margin和下面兄弟元素的上margin会合并，取一个最大的值，而不是相加。</p><p>这种是正常的，可以把元素margin设为期望的总和。</p><h4 id="3-3-2-内容溢出"><a href="#3-3-2-内容溢出" class="headerlink" title="3.3.2 内容溢出"></a>3.3.2 内容溢出</h4><p>文本内容过长超出父元素设置的高度会产生纵向内容溢出，子元素宽度过长超出父元素设置的宽度会产生横线内容溢出。</p><p>设置溢出属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>overflow</td>      <td>设置内容溢出的处理方式</td>      <td>        visible：显示（默认值）<br>        hidden：隐藏（常用）<br>        scroll：显示滚动条，不论内容是否溢出<br>        auto：自动显示滚动条，内容不溢出不显示（常用）<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: auto;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-隐藏元素"><a href="#3-3-3-隐藏元素" class="headerlink" title="3.3.3 隐藏元素"></a>3.3.3 隐藏元素</h4><p>使用属性隐藏元素：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>visibility</td>      <td>设置元素的可见性</td>      <td>        show：元素会被显示（默认值）<br>        hidden：元素会被隐藏，会保留占位<br>      </td>    </tr>    <tr>      <td>display</td>      <td>控制元素的显示模式</td>      <td>        none：元素会被隐藏，不保留占位<br>        block：元素将作为块级元素显示<br>        inline：元素将作为内联元素显示<br>        inline-block：元素将作为行内块元素显示<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>: none;</span><br></pre></td></tr></table></figure><h4 id="3-3-4-继承样式"><a href="#3-3-4-继承样式" class="headerlink" title="3.3.4 继承样式"></a>3.3.4 继承样式</h4><p>元素会自动拥有祖先元素设置的某些样式，并且关系近的优先级高。</p><p>可以继承的属性，都是不影响布局的，即都是和盒子模型没关系的。</p><h4 id="3-3-5-居中布局"><a href="#3-3-5-居中布局" class="headerlink" title="3.3.5 居中布局"></a>3.3.5 居中布局</h4><p>让子元素在父元素中水平居中：</p><ol><li>子元素为块级元素</li></ol><ul><li>给子元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>: auto;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>子元素为行内元素和行内块元素</li></ol><ul><li>给父元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-align</span>: center;</span><br></pre></td></tr></table></figure></li></ul><p>让子元素在父元素中垂直居中：</p><ol><li>子元素为块元素</li></ol><ul><li>给子元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin-top</span>: (父元素盒子内容高度-子元素盒子高度)/<span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>子元素为行内元素和行内块元素</li></ol><ul><li>给父元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">line-height</span>: 父元素盒子内容高度;</span><br></pre></td></tr></table></figure></li><li>当子元素字体大小不同时，字体小的子元素会靠下，需要让子元素使用中线对齐，给子元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br></pre></td></tr></table></figure></li><li>父元素字体越大子元素越靠下，需要清除父元素字体的影响，给父元素设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-size</span>: <span class="number">0px</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-3-6-消除空白"><a href="#3-3-6-消除空白" class="headerlink" title="3.3.6 消除空白"></a>3.3.6 消除空白</h4><h5 id="3-3-6-1-消除换行空白"><a href="#3-3-6-1-消除换行空白" class="headerlink" title="3.3.6.1 消除换行空白"></a>3.3.6.1 消除换行空白</h5><p>行内元素和行内块元素之间的换行会被浏览器解析为一个空白字符。</p><p>解决办法：</p><ol><li>方案一：去掉换行和空格。</li><li>方案二（推荐）：把父元素字体大小设为0，再给子元素单独设置字体大小。</li></ol><h5 id="3-3-6-2-消除基线空白"><a href="#3-3-6-2-消除基线空白" class="headerlink" title="3.3.6.2 消除基线空白"></a>3.3.6.2 消除基线空白</h5><p>子元素与基线对齐，而基线与盒子底部之间是有一定距离的。</p><p>解决办法：</p><ol><li>方案一（推荐）：把子元素vertical-align设为除了baseline以外的其他值，比如top、middel、bottom均可。</li><li>方案二：若子元素只有一个，设置子元素display为block，将子元素转为块级元素。</li><li>方案三：把父元素字体大小设为0，清除父元素字体的影响，再给子元素单独设置字体大小。</li></ol><h2 id="4-浮动"><a href="#4-浮动" class="headerlink" title="4 浮动"></a>4 浮动</h2><h3 id="4-1-介绍"><a href="#4-1-介绍" class="headerlink" title="4.1 介绍"></a>4.1 介绍</h3><p>浮动最初是用来实现文字环绕图片效果的，现在是主流的页面布局方式之一。</p><p>元素浮动的特点：</p><ol><li>会脱离文档流。</li><li>不管浮动前是什么元素，浮动后默认宽高都是尽可能小的被内容撑开，而且可以设置宽高。</li><li>不会独占一行，可以与其他元素共用一行。</li><li>不会产生外边距问题，能够完美的设置四个方向的外边距和内边距。</li><li>不会有空白问题。</li></ol><h3 id="4-2-影响"><a href="#4-2-影响" class="headerlink" title="4.2 影响"></a>4.2 影响</h3><p>浮动产生的影响：</p><ul><li>对父元素的影响：不能撑起父元素的高度，导致父元素高度塌陷，但是父元素的宽度依然束缚浮动元素。</li><li>对兄弟元素的影响：不浮动的兄弟元素会占据浮动元素之前的位置，而且是在浮动元素的下层。</li></ul><p>解决浮动的影响：</p><ol><li>方案一：给父元素指定高度，不能解决对兄弟元素的影响。</li><li>方案二：给父元素也设置浮动，不能解决对兄弟元素的影响。</li><li>方案三：给父元素overflow设置为hidden，不能解决对兄弟元素的影响。</li><li>方案四（推荐）：如果不是全都浮动，给不浮动的兄弟元素clear设为both，清除浮动效果，解决浮动产生的全部影响。</li><li>方案五：如果全都浮动，在最后添加不浮动的块级元素，给不浮动的块级元素clear设为both，原理与方案四相同。</li><li>方案六（推荐）：如果全都浮动，给父元素设置伪元素，通过伪元素清除浮动，原理与方案四相同：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">父元素<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="4-3-属性"><a href="#4-3-属性" class="headerlink" title="4.3 属性"></a>4.3 属性</h3><p>浮动相关属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>float</td>      <td>设置元素的浮动方式</td>      <td>        left：设置左浮动<br>        right：设置右浮动<br>        none：不浮动（默认值）<br>      </td>    </tr>    <tr>      <td>clear</td>      <td>控制元素的显示模式</td>      <td>        left：清除前面左浮动的影响<br>        right：清除前面右浮动的影响<br>        both：清除前面左右浮动的影响<br>      </td>    </tr>  </tbody></table><h2 id="5-定位"><a href="#5-定位" class="headerlink" title="5 定位"></a>5 定位</h2><h3 id="5-1-属性"><a href="#5-1-属性" class="headerlink" title="5.1 属性"></a>5.1 属性</h3><p>定位相关属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>position</td>      <td>设置元素的定位方式</td>      <td>        static：不开启定位（默认值）<br>        relative：开启相对定位<br>        absolute：开启绝对定位<br>        fixed：开启固定定位<br>        sticky：开启粘性定位<br>      </td>    </tr>  </tbody></table><p>用于调整定位的属性，只有开启定位才有效：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>left</td>      <td>调整到左侧边缘的距离</td>      <td>长度单位</td>    </tr>    <tr>      <td>right</td>      <td>调整到右侧边缘的距离，不能和left同时使用</td>      <td>长度单位</td>    </tr>    <tr>      <td>top</td>      <td>调整到顶部边缘的距离</td>      <td>长度单位</td>    </tr>    <tr>      <td>bottom</td>      <td>调整到底部边缘的距离，不能和top同时使用</td>      <td>长度单位</td>    </tr>  </tbody></table><h3 id="5-2-分类"><a href="#5-2-分类" class="headerlink" title="5.2 分类"></a>5.2 分类</h3><h4 id="5-2-1-相对定位"><a href="#5-2-1-相对定位" class="headerlink" title="5.2.1 相对定位"></a>5.2.1 相对定位</h4><p>参考元素：</p><ul><li>基于原来的位置，即基于正常定位的位置进行调整的。</li></ul><p>效果：</p><ol><li>只设为相对定位，不设置位置，无变化。</li><li>设置位置后，根据层级进行元素覆盖。</li></ol><p>特点：</p><ol><li>不会脱离文档流，元素位置的变化，只是视觉效果上的变化，不会对其他元素产生任何影响。</li><li>不建议和float同时使用。</li><li>不建议和margin同时使用。</li><li>元素（行内元素、行内块元素、块级元素）在设置为相对定位之后，不会变成定位元素（宽度和高度由内容决定，可以自由设置）。</li></ol><h4 id="5-2-2-绝对定位"><a href="#5-2-2-绝对定位" class="headerlink" title="5.2.2 绝对定位"></a>5.2.2 绝对定位</h4><p>参考元素：</p><ul><li>基于包含块。如果没有脱离文档流，包含块就是父元素，如果脱离文档流，包含块就是最近开启任何定位的祖先元素。</li></ul><p>效果：</p><ol><li>只设为绝对定位，不设置位置，元素在绝对定位前的位置浮动，后面的元素占用绝对定位前的位置并且被元素覆盖。</li><li>设置位置后，根据包含块进行元素覆盖。</li></ol><p>特点：</p><ol><li>会脱离文档流，会对后面的兄弟元素有影响，会对父元素有影响。</li><li>不建议和float同时使用，浮动会失效，以绝对定位为主。</li><li>不建议和margin同时使用。</li><li>元素（行内元素、行内块元素、块级元素）在设置为绝对定位之后，都会变成定位元素（宽度和高度由内容决定，可以自由设置）。</li></ol><p>使用规则：</p><ol><li>在父元素上开启相对定位，在对其他元素没有影响的情况下，支持作为子元素的包含块。</li><li>在子元素上开启绝对定位，在包含块为父元素的前提下修改位置。</li></ol><p>和浮动的区别：</p><ol><li>绝对定位的元素内容会被覆盖，不能环绕元素。</li><li>绝对定位的元素会变成定位元素。</li><li>绝对定位的元素一般会配合相对定位的包含块一起使用。</li></ol><h4 id="5-2-3-固定定位"><a href="#5-2-3-固定定位" class="headerlink" title="5.2.3 固定定位"></a>5.2.3 固定定位</h4><p>参考元素：</p><ul><li>基于视口。对于PC浏览器来说，视口就是浏览器展示内容的界面。</li></ul><p>效果：</p><ol><li>只设为固定定位，不设置位置，元素在固定定位前的位置浮动，后面的元素占用固定定位前的位置并且被元素覆盖。</li><li>设置位置后，根据视口进行元素覆盖，并且页面内容滚动时，固定定位固定在视口相对位置，不随页面内容滚动。</li></ol><p>特点：</p><ol><li>会脱离文档流，会对后面的兄弟元素有影响，会对父元素有影响。</li><li>不建议和float同时使用，浮动会失效，以固定定位为主。</li><li>不建议和margin同时使用。</li><li>元素（行内元素、行内块元素、块级元素）在设置为固定定位之后，都会变成定位元素（宽度和高度由内容决定，可以自由设置）。</li></ol><p>和绝对定位的区别：</p><ol><li>固定定位不使用包含块，不需要父元素配合，不需要和相对定位配合。</li><li>固定定位保持在视口显示，不会跟随内容移动而消失。</li></ol><h4 id="5-2-4-粘性定位"><a href="#5-2-4-粘性定位" class="headerlink" title="5.2.4 粘性定位"></a>5.2.4 粘性定位</h4><p>参考元素：</p><ul><li>基于滚动元素。根据关系最近的具有滚动机制的祖先元素，即祖先元素必须有滚动条，最远的是<code>body</code>元素。</li></ul><p>效果：</p><ol><li>只设为粘性定位，不设置位置，无变化。</li><li>设置位置后，根据滚动元素进行元素覆盖，并且页面内容滚动时，粘性定位固定在滚动元素相对位置，不随页面内容滚动。</li><li>当滚动元素和父元素同时在页面显示时，粘性定位显示，否则粘性定位消失，多个粘性定位会进行元素覆盖。</li></ol><p>特点：</p><ol><li>不会脱离文档流，是一种专门用于窗口滚动时的新的定位方式。</li><li>不建议和float同时使用。</li><li>不建议和margin同时使用。</li><li>元素（行内元素、行内块元素、块级元素）在设置为粘性定位之后，不会变成定位元素（宽度和高度由内容决定，可以自由设置）。</li></ol><p>滚动机制：</p><ul><li>设置元素的高度小于元素内容的高度，继续将元素overflow设为scroll或者auto，就能在元素上显示滚动条。</li></ul><h3 id="5-3-层级"><a href="#5-3-层级" class="headerlink" title="5.3 层级"></a>5.3 层级</h3><p>元素的显示层级：</p><ol><li>开启定位的元素的显示层级比普通元素高，无论什么定位，显示层级都是一样的。</li><li>如果位置发生重叠，默认情况下，后面的元素会覆盖前面的元素。</li><li>如果元素被显示层级低的元素覆盖了，可能是因为包含块的显示层级低被其他元素覆盖，导致元素和包含块一起被覆盖。</li></ol><p>用于调整显示层级的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>z-index</td>      <td>调整元素的显示层级，开启定位的元素有效</td>      <td>无单位的数字，值越大显示层级越高</td>    </tr>  </tbody></table><h3 id="5-4-定位元素的特殊应用"><a href="#5-4-定位元素的特殊应用" class="headerlink" title="5.4 定位元素的特殊应用"></a>5.4 定位元素的特殊应用</h3><p>定位元素的宽度和高度由内容决定，不再充满包含块，由此会带来一些问题。</p><p>成为定位元素的两种方式：</p><ol><li>元素使用固定定位成为定位元素。</li><li>父元素使用相对定位，元素使用绝对定位成为定位元素。</li></ol><h4 id="5-4-1-让定位元素充满包含块"><a href="#5-4-1-让定位元素充满包含块" class="headerlink" title="5.4.1 让定位元素充满包含块"></a>5.4.1 让定位元素充满包含块</h4><p>在定位元素没有设置宽度和高度的前提下，让定位元素在包含块居中，有以下两种方案：</p><ol><li>方案一：计算充满所需要的宽度和高度。</li><li>方案二：给定位元素的用于调整定位的属性设置为0（推荐）：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0</span>;</span><br></pre></td></tr></table></figure></li></ol><h4 id="5-4-2-让定位元素在包含块居中"><a href="#5-4-2-让定位元素在包含块居中" class="headerlink" title="5.4.2 让定位元素在包含块居中"></a>5.4.2 让定位元素在包含块居中</h4><p>在定位元素设置宽度和高度的前提下，让定位元素在包含块居中，有以下两种方案：</p><ol><li>方案一：设置左右margin为auto，计算上margin长度。</li><li>方案二：使用折半的方式设置：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: 元素宽度一半的负数;</span><br><span class="line"><span class="attribute">margin-top</span>: 元素高度一半的负数;</span><br></pre></td></tr></table></figure></li><li>方案三：将用于调整定位的属性设置为0，同时设置margin为auto（推荐）：<figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-布局"><a href="#6-布局" class="headerlink" title="6 布局"></a>6 布局</h2><h3 id="6-1-版心"><a href="#6-1-版心" class="headerlink" title="6.1 版心"></a>6.1 版心</h3><p>在PC端网页中，一般都会有一个固定宽度且水平居中的盒子，来显示网页的主要内容，这是网页的版心。</p><p>版心的宽度一般是960像素到1200像素之间。</p><p>版心可以是一个，也可以是多个。</p><h3 id="6-2-布局名词"><a href="#6-2-布局名词" class="headerlink" title="6.2 布局名词"></a>6.2 布局名词</h3><p>常用布局名词：</p><ul><li>版心：container</li><li>顶部导航条：topbar</li><li>页头：header、page-header</li><li>导航：nav、navigator、navbar</li><li>搜索框：search、search-box</li><li>横幅：banner</li><li>主要内容：content、main</li><li>侧边栏：aside、sidebar</li><li>页脚：footer、page-footer</li></ul><h3 id="6-3-重置默认样式"><a href="#6-3-重置默认样式" class="headerlink" title="6.3 重置默认样式"></a>6.3 重置默认样式</h3><p>在早期元素默认样式能够快速的绘制网页，但如今网页的设计越来越复杂，这些默认样式会在绘制页面时带来麻烦，而且这些默认样式在不同的浏览器<br>上呈现出来的效果也不一样，所以需要重置这些默认样式。</p><h4 id="6-3-1-全局选择器"><a href="#6-3-1-全局选择器" class="headerlink" title="6.3.1 全局选择器"></a>6.3.1 全局选择器</h4><p>代码：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此种方法在测试时可以用，但实际开发中不会使用，因为在重置样式时，需要对特定元素进行重做，并不是清除所有样式。</p><h4 id="6-3-2-重置样式文件"><a href="#6-3-2-重置样式文件" class="headerlink" title="6.3.2 重置样式文件"></a>6.3.2 重置样式文件</h4><p>将对默认样式的修改写入单独的<code>reset.css</code>文件，在页面中引入默认的CSS文件。</p><h4 id="6-3-3-Normalize-css"><a href="#6-3-3-Normalize-css" class="headerlink" title="6.3.3 Normalize.css"></a>6.3.3 Normalize.css</h4><p>Normalize.css也是CSS文件，它对默认样式提供了跨浏览器的高度一致性，相比传统的重置样式文件，Normalize.css是一种现代的、为HTML5准备的优质替代方案。</p><p>使用方式和重置样式文件一样，需要先在官网下载最新的CSS文件，在页面中引入即可。</p><p>官网：<br><a href="http://necolas.github.io/normalize.css/">http://necolas.github.io/normalize.css/</a></p><p>相对于重置样式文件来说，Normalize.css有如下优点：</p><ol><li>保护了有价值的默认样式，而不是完全去掉它们。</li><li>为大部分HTML元素提供高度一致的样式。</li><li>新增对HTML5元素的设置。</li><li>对并集选择器的使用比较谨慎，有效避免调试工具杂乱。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了CSS的盒子模型。&lt;/p&gt;</summary>
    
    
    
    <category term="大前端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://momashanhe.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://momashanhe.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS2入门</title>
    <link href="https://momashanhe.com/posts/20240402/144927/"/>
    <id>https://momashanhe.com/posts/20240402/144927/</id>
    <published>2024-04-02T06:49:27.000Z</published>
    <updated>2024-04-08T04:30:21.889Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了CSS的语法规则和选择器，以及CSS常用的一些属性。</p><span id="more"></span><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><p>CSS全称：Cascading Style Sheets（层叠样式表）。</p><p>CSS也是一种标记语言，用于给HTML结构设置样式，比如文字大小、颜色、元素宽高等等。</p><h2 id="2-语法规范"><a href="#2-语法规范" class="headerlink" title="2 语法规范"></a>2 语法规范</h2><h3 id="2-1-基本语法"><a href="#2-1-基本语法" class="headerlink" title="2.1 基本语法"></a>2.1 基本语法</h3><p>CSS的语法为：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">  属性名: 属性值;</span><br><span class="line">  属性名: 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要由两部分组成：</p><ul><li>选择器：匹配要添加样式的元素。</li><li>声明块：给匹配到的元素设置具体的样式，声明块由多个声明组成，并使用<code>&#123;&#125;</code>包裹，声明由属性名和属性值组成。</li></ul><p>说明：</p><ul><li>选择器和声明块之间，声明的属性名和属性值之间，均有一个可以省略的空格，建议不要省略，提高可读性。</li><li>声明使用<code>;</code>分号结尾，最后一个声明可以省略，建议不要省略，提高可读性。</li></ul><h3 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h3><p>CSS中注释的语法为：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 注释内容 */</span></span><br></pre></td></tr></table></figure><h3 id="2-3-代码风格"><a href="#2-3-代码风格" class="headerlink" title="2.3 代码风格"></a>2.3 代码风格</h3><p>展开风格，开发时使用，可读性高：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧凑风格，上线时使用，文件体积小：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure><p>在上线时可以使用工具将展开风格转为紧凑风格。</p><h3 id="2-4-编写位置"><a href="#2-4-编写位置" class="headerlink" title="2.4 编写位置"></a>2.4 编写位置</h3><h4 id="2-4-1-行内样式"><a href="#2-4-1-行内样式" class="headerlink" title="2.4.1 行内样式"></a>2.4.1 行内样式</h4><p>行内样式又称为内联样式，写在元素的<code>style</code>属性中。</p><p>代码：</p><figure class="highlight html"><figcaption><span>hello.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎学习<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">span</span>&gt;</span>知识<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种方式编写的CSS没有和HTML分离，不能体现出结构和样式分离的思想，而且样式不能复用，不建议使用这种方式。</p><h4 id="2-4-2-内部样式"><a href="#2-4-2-内部样式" class="headerlink" title="2.4.2 内部样式"></a>2.4.2 内部样式</h4><p>将CSS提取出来，写在页面内部的<code>style</code>元素中。</p><p>代码：</p><figure class="highlight html"><figcaption><span>hello.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>理论上可以将<code>style</code>元素放在页面的任何位置，建议放到<code>head</code>元素中。</p><p>和行内样式相比，这种方式编写的CSS和HTML分离，样式也能复用，但也没有做到完全分离，并且样式不能在多个页面复用。</p><h4 id="2-4-3-外部样式"><a href="#2-4-3-外部样式" class="headerlink" title="2.4.3 外部样式"></a>2.4.3 外部样式</h4><p>将CSS进一步提取，写在单独的CSS文件中，在HTML页面中使用元素引用外部的CSS文件，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>link</td>      <td>表示引用文件</td>      <td>单标签</td>    </tr>  </tbody></table><p>常用属性如下：</p><ul><li>rel：引用文件和当前文件的关系。</li><li>href：引用文件位置。</li></ul><p>创建CSS文件，后缀为<code>.css</code>格式，代码：</p><figure class="highlight css"><figcaption><span>hello.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在HTML页面引用CSS文件，代码：</p><figure class="highlight html"><figcaption><span>hello.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./hello.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-优先级"><a href="#2-5-优先级" class="headerlink" title="2.5 优先级"></a>2.5 优先级</h3><p>三种方式的优先级：行内样式 &gt; 内部样式 &#x3D; 外部样式</p><p>行内样式的优先级最高，内部样式和外部样式的优先级和位置有关，后面的样式会覆盖前面的样式。</p><p>三种方式比较：</p><table>  <thead>    <tr>      <th>方式</th>      <th>优点</th>      <th>缺点</th>      <th>使用频率</th>      <th>作用范围</th>    </tr>  </thead>  <tbody>    <tr>      <td>行内样式</td>      <td>优先级高</td>      <td>结构和样式未分离<br>样式不能复用</td>      <td>低</td>      <td>当前元素</td>    </tr>    <tr>      <td>内部样式</td>      <td>结构和样式分离<br>样式可以在当前页面复用</td>      <td>结构和样式未彻底分离<br>样式不能在多个页面复用</td>      <td>中</td>      <td>当前页面</td>    </tr>    <tr>      <td>外部样式</td>      <td>结构和样式彻底分离<br>样式可以在多个页面复用<br>能够触发浏览器缓存机制</td>      <td>需要引入才能使用</td>      <td>低</td>      <td>多个页面</td>    </tr>  </tbody></table><h2 id="3-选择器"><a href="#3-选择器" class="headerlink" title="3 选择器"></a>3 选择器</h2><h3 id="3-1-基本选择器"><a href="#3-1-基本选择器" class="headerlink" title="3.1 基本选择器"></a>3.1 基本选择器</h3><p>基本选择器：</p><ul><li>通配选择器</li><li>元素选择器</li><li>属性选择器</li><li>类选择器</li><li>ID选择器</li></ul><p>其他选择器可以参考文档：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">MDN官方CSS文档</a></p><h4 id="3-1-1-通配选择器"><a href="#3-1-1-通配选择器" class="headerlink" title="3.1.1 通配选择器"></a>3.1.1 通配选择器</h4><p>匹配所有元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-2-元素选择器"><a href="#3-1-2-元素选择器" class="headerlink" title="3.1.2 元素选择器"></a>3.1.2 元素选择器</h4><p>匹配元素的标签名和选择器的标签名相同的所有元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-3-类选择器"><a href="#3-1-3-类选择器" class="headerlink" title="3.1.3 类选择器"></a>3.1.3 类选择器</h4><p>匹配元素的<code>class</code>属性值和选择器的类名相同的所有元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>在类名前增加<code>.</code>符号，表示这是类选择器，用来和其他选择器区分。</li><li>一个元素中的<code>class</code>属性最多只有一个，属性值可以有多个，使用空格分隔多个属性值。</li><li><code>class</code>属性值不是唯一的，不同的元素可以有相同的属性值。</li><li><code>class</code>属性值按照标准，建议使用英文和数字的组合，并且使用英文开头，多个单词之间使用<code>-</code>短横线和<code>_</code>下划线连接，注意区分大小写。</li></ul><h4 id="3-1-4-ID选择器"><a href="#3-1-4-ID选择器" class="headerlink" title="3.1.4 ID选择器"></a>3.1.4 ID选择器</h4><p>匹配元素的<code>id</code>属性值和选择器的id值相同的所有元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>值 &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>在id值前增加<code>.</code>符号，表示这是ID选择器，用来和其他选择器区分。</li><li>一个元素中的<code>id</code>属性最多只有一个，属性值只能有一个。</li><li><code>id</code>属性值是唯一的，不同的元素不能有相同的属性值。</li><li><code>id</code>属性值按照标准，建议使用英文和数字的组合，并且使用英文开头，多个单词之间使用<code>-</code>短横线和<code>_</code>下划线连接，注意区分大小写。</li></ul><h4 id="3-1-5-属性选择器"><a href="#3-1-5-属性选择器" class="headerlink" title="3.1.5 属性选择器"></a>3.1.5 属性选择器</h4><p>匹配元素的属性及属性值和选择器指定的属性及属性值相同的所有元素。</p><p>属性选择器可以对元素的所有属性进行匹配，可以实现类选择器和ID选择器的效果。</p><p>属性选择器的语法较为复杂，使用<code>[]</code>包裹来区分其他选择器：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 选择具有指定属性名的元素，对属性值没有要求 */</span></span><br><span class="line"><span class="selector-attr">[属性名]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值是指定属性值的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值是以指定属性值开头的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名^=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值是以指定属性值结尾的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名$=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值包含指定属性值的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名*=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值是用空格分隔的列表，存在指定属性值的列表项的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名~=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择具有指定属性名的元素，并且属性值是指定属性值的元素或者属性值是以指定属性值拼接&quot;-&quot;开头的元素 */</span></span><br><span class="line"><span class="selector-attr">[属性名|=属性值]</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>选择器中的属性名不需要<code>&quot;</code>双引号包裹，但是属性值需要<code>&quot;</code>双引号包裹。</li></ul><h3 id="3-2-复合选择器"><a href="#3-2-复合选择器" class="headerlink" title="3.2 复合选择器"></a>3.2 复合选择器</h3><p>复合选择器建立在基本选择器之上，由多个基础选择器，通过不同的方式组合而成。</p><p>主要有：</p><ul><li>并集选择器</li><li>交集选择器</li><li>后代选择器</li><li>子代选择器</li><li>兄弟选择器</li><li>伪类选择器</li><li>伪元素选择器</li></ul><h4 id="3-2-1-并集选择器"><a href="#3-2-1-并集选择器" class="headerlink" title="3.2.1 并集选择器"></a>3.2.1 并集选择器</h4><p>选择满足任何一个选择器的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span>,</span><br><span class="line">基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器使用<code>,</code>逗号分隔，建议多个选择器换行编写，提高可读性。</li></ul><h4 id="3-2-2-交集选择器"><a href="#3-2-2-交集选择器" class="headerlink" title="3.2.2 交集选择器"></a>3.2.2 交集选择器</h4><p>选择满足所有选择器的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span>基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器相邻，中间不能有任何符号，也不能有空格和换行。</li><li>因为没有任何符号分隔，所以如果有元素选择器的话，需要将其放在首位，否则会被识别为其他选择器的一部分。</li></ul><h4 id="3-2-3-后代选择器"><a href="#3-2-3-后代选择器" class="headerlink" title="3.2.3 后代选择器"></a>3.2.3 后代选择器</h4><p>选择满足后一个选择器是前一个选择器的后代的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span> 基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器使用<code> </code>空格分隔，子代也属于后代。</li></ul><h4 id="3-2-4-子代选择器"><a href="#3-2-4-子代选择器" class="headerlink" title="3.2.4 子代选择器"></a>3.2.4 子代选择器</h4><p>选择满足后一个选择器是前一个选择器的子代的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span>&gt;基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器使用<code>&gt;</code>大于号分隔。</li></ul><h4 id="3-2-5-兄弟选择器"><a href="#3-2-5-兄弟选择器" class="headerlink" title="3.2.5 兄弟选择器"></a>3.2.5 兄弟选择器</h4><h5 id="3-2-5-1-相邻兄弟选择器"><a href="#3-2-5-1-相邻兄弟选择器" class="headerlink" title="3.2.5.1 相邻兄弟选择器"></a>3.2.5.1 相邻兄弟选择器</h5><p>选择满足后一个选择器是前一个选择器下方的相邻兄弟的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span>+基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器使用<code>+</code>加号分隔。</li><li>选择器匹配的元素之间必须是兄弟关系，必须相邻，除了空格和换行，没有其他代码。</li><li>可以匹配到多个元素，每个选择器匹配的元素的相邻兄弟元素只有一个。</li></ul><h5 id="3-2-5-2-通用兄弟选择器"><a href="#3-2-5-2-通用兄弟选择器" class="headerlink" title="3.2.5.2 通用兄弟选择器"></a>3.2.5.2 通用兄弟选择器</h5><p>选择满足后一个选择器是前一个选择器下方的所有兄弟的元素。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基础选择器<span class="number">1</span>~基础选择器<span class="number">2</span> &#123;</span><br><span class="line">  声明块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>不同的选择器使用<code>~</code>加号分隔。</li><li>选择器匹配的元素之间必须是兄弟关系，可以有其他代码。</li><li>可以匹配到多个元素，每个选择器匹配的元素的兄弟元素可以有多个。</li></ul><h4 id="3-2-6-伪类选择器"><a href="#3-2-6-伪类选择器" class="headerlink" title="3.2.6 伪类选择器"></a>3.2.6 伪类选择器</h4><h5 id="3-2-6-1-伪类"><a href="#3-2-6-1-伪类" class="headerlink" title="3.2.6.1 伪类"></a>3.2.6.1 伪类</h5><p>普通的元素，如果处于某种特殊状态下，把这种处于特殊状态下的元素称为伪类。</p><p>伪类选择器固定以<code>:</code>冒号开头。</p><h5 id="3-2-6-2-动态伪类"><a href="#3-2-6-2-动态伪类" class="headerlink" title="3.2.6.2 动态伪类"></a>3.2.6.2 动态伪类</h5><p>匹配需要用户手动操作才会出现的元素：</p><ul><li>使用<code>:link</code>选择未被访问的元素，多用于超链接。</li><li>使用<code>:visited</code>选择被访问后的元素，多用于超链接。</li><li>使用<code>:hover</code>选择被鼠标悬停的元素。</li><li>使用<code>:focus</code>选择获取焦点时的元素，多用于表单元素。</li><li>使用<code>:active</code>选择被鼠标按住的元素。</li></ul><p>说明：</p><ul><li>在使用<code>:link</code>和<code>:visited</code>匹配超链接时，匹配到的是具有<code>href</code>属性的超链接，因为这种超链接才具有<code>访问</code>的功能。</li><li>在使用<code>:focus</code>匹配元素时，需要元素拥有获取焦点的功能，否则无效。</li><li>如果元素同时存在多个伪类选择器那么后面的样式会替换前面的样式，所以需要按照<code>l-v-h-f-a</code>的顺序，将规则宽松的放前面，将规则严格的放后面。</li></ul><h5 id="3-2-6-3-结构伪类"><a href="#3-2-6-3-结构伪类" class="headerlink" title="3.2.6.3 结构伪类"></a>3.2.6.3 结构伪类</h5><p>匹配在页面结构上处于特殊顺序的元素：</p><ul><li>使用<code>:first-child</code>选择元素的父元素的所有子元素中的第一个，即元素的第一个兄弟元素，并且兄弟元素要和元素相同。</li><li>使用<code>:last-child</code>选择元素的父元素的所有子元素中的最后一个，即元素的最后一个兄弟元素，并且兄弟元素要和元素相同。</li><li>使用<code>:nth-child(n)</code>选择元素的父元素的所有子元素中的第<code>n</code>个，即元素的第<code>n</code>个兄弟元素，并且兄弟元素要和元素相同。</li><li>使用<code>:first-of-type</code>选择元素的父元素的和元素相同的子元素中的第一个，即元素的第一个相同的兄弟元素。</li><li>使用<code>:last-of-type</code>选择元素的父元素的和元素相同的子元素中的最后一个，即元素的最后一个相同的兄弟元素。</li><li>使用<code>:nth-of-type(n)</code>选择元素的父元素的和元素相同的子元素中的第<code>n</code>个，即元素的第<code>n</code>个相同的兄弟元素。</li><li>使用<code>:root</code>选择根元素，即<code>html</code>元素。</li><li>使用<code>:empty</code>选择内容为空元素，即双标签中开始标签紧跟结束标签的元素或者单标签的元素，双标签的空格和换行也算内容。</li></ul><p>说明：</p><ul><li>伪类选择器中的<code>n</code>实际上是<code>an+b</code>性质的表达式，<code>a</code>和<code>b</code>都是数字。</li><li><code>0</code>或者<code>小于0</code>都表示不选择任何元素。</li><li><code>n</code>表示<code>n</code>从0到超过元素数量的过程中符合的元素，也就是选择全部元素。</li><li><code>2n</code>表示<code>n</code>从0到超过元素数量的过程中符合的元素，也就是选择偶数元素。</li><li><code>2n+1</code>表示<code>n</code>从0到超过元素数量的过程中符合的元素，也就是选择奇数元素。</li><li><code>-n+5</code>表示<code>n</code>从0到超过元素数量的过程中符合的元素，也就是选择前5个元素。</li></ul><h5 id="3-2-6-4-否定伪类"><a href="#3-2-6-4-否定伪类" class="headerlink" title="3.2.6.4 否定伪类"></a>3.2.6.4 否定伪类</h5><p>匹配不满足指定选择器的元素：</p><ul><li>使用<code>:not(选择器)</code>选择不满足指定选择器的元素。</li></ul><p>说明：</p><ul><li>伪类选择器中指定的<code>选择器</code>可以使用伪类选择器。</li></ul><h5 id="3-2-6-5-界面伪类"><a href="#3-2-6-5-界面伪类" class="headerlink" title="3.2.6.5 界面伪类"></a>3.2.6.5 界面伪类</h5><p>匹配在界面上有特殊效果的元素：</p><ul><li>使用<code>:checked</code>选择被勾选的元素，多用于单选框和复选框。</li><li>使用<code>:enable</code>选择可用的元素，即没有<code>disabled</code>属性的元素，多用于表单元素。</li><li>使用<code>:disabled</code>选择不可用的元素，即有<code>disabled</code>属性的元素，多用于表单元素。</li></ul><h5 id="3-2-6-6-锚点伪类"><a href="#3-2-6-6-锚点伪类" class="headerlink" title="3.2.6.6 锚点伪类"></a>3.2.6.6 锚点伪类</h5><p>匹配被作为锚点跳转的元素：</p><ul><li>使用<code>:target</code>选择锚点指向的元素。</li></ul><h5 id="3-2-6-7-语言伪类"><a href="#3-2-6-7-语言伪类" class="headerlink" title="3.2.6.7 语言伪类"></a>3.2.6.7 语言伪类</h5><p>匹配被作为锚点跳转的元素：</p><ul><li>使用<code>:lang(语言)</code>选择特定语言的元素，即有<code>lang</code>属性并且属性值和伪类选择器中<code>语言</code>相同的元素。</li></ul><p>说明：</p><ul><li>如果在<code>html</code>元素中使用<code>lang</code>属性，那么<code>html</code>的后代元素也默认使用相同的<code>lang</code>属性。</li></ul><h4 id="3-2-7-伪元素选择器"><a href="#3-2-7-伪元素选择器" class="headerlink" title="3.2.7 伪元素选择器"></a>3.2.7 伪元素选择器</h4><p>伪元素指的是元素中的一些特殊位置。</p><p>伪元素选择器固定以<code>::</code>双冒号开头，但为了兼容之前的版本，使用<code>:</code>冒号开头也能被识别。</p><p>常用伪元素选择器：</p><ul><li>使用<code>::first-letter</code>选择元素内容中的第一个文字。</li><li>使用<code>::first-line</code>选择元素内容中的第一行文字。</li><li>使用<code>::selection</code>选择元素内容中被鼠标选中的内容。</li><li>使用<code>::placeholder</code>选择输入框的提示文字，多用于输入框和文本域。</li><li>使用<code>::before</code>在元素的起始位置，创建一个子元素，需要使用<code>content</code>属性指定内容。</li><li>使用<code>::after</code>在元素的结束位置，创建一个子元素，需要使用<code>content</code>属性指定内容。</li></ul><h3 id="3-3-优先级"><a href="#3-3-优先级" class="headerlink" title="3.3 优先级"></a>3.3 优先级</h3><p>使用相同的选择器，选择相同的元素，优先级和位置有关，后面的选择器优先级高。</p><p>使用不同的选择器，选择相同的元素，优先级和权重有关，权重高的选择器优先级高比。</p><h4 id="3-3-1-简单描述"><a href="#3-3-1-简单描述" class="headerlink" title="3.3.1 简单描述"></a>3.3.1 简单描述</h4><p>优先级：</p><ul><li>行内样式 &gt; ID选择器 &gt; 类选择器 &#x3D; 伪类选择器 &#x3D; 属性选择器 &gt; 元素选择器 &#x3D; 伪元素选择器 &gt; 通配选择器</li></ul><h4 id="3-3-2-详细描述"><a href="#3-3-2-详细描述" class="headerlink" title="3.3.2 详细描述"></a>3.3.2 详细描述</h4><p>优先级：</p><ul><li>!important &gt; 行内样式 &gt; 按权重计算选择器 &gt; 通配选择器 &gt; 继承的样式</li></ul><p>权重计算规则：</p><ol><li>每个选择器，都可计算出一组格式为<code>(a,b,c)</code>的权重，说明：</li></ol><ul><li>a：ID选择器的个数。</li><li>b：类选择器、伪类选择器、属性选择器的个数。</li><li>c：元素选择器、伪元素选择器的个数。</li></ul><ol start="2"><li>比较规则：</li></ol><ul><li>按照从左到右的顺序，依次比较大小，当前位胜出后，后面的不再对比。</li></ul><ol start="3"><li>特殊规则：</li></ol><ul><li>并集选择器需要被看作多个选择器，只能计算涉及当前元素的选择器的权重，不能计算整个并集选择器的权重。</li></ul><h2 id="4-三大特性"><a href="#4-三大特性" class="headerlink" title="4 三大特性"></a>4 三大特性</h2><h3 id="4-1-层叠性"><a href="#4-1-层叠性" class="headerlink" title="4.1 层叠性"></a>4.1 层叠性</h3><p>如果发生了样式冲突，会根据选择器优先级进行样式层叠，优先级低的会被优先级高的覆盖。</p><h3 id="4-2-继承性"><a href="#4-2-继承性" class="headerlink" title="4.2 继承性"></a>4.2 继承性</h3><p>元素会自动拥有祖先元素设置的某些样式，继承性也遵循样式优先级，关系近的优先级高。</p><p>常见的可继承样式：</p><ul><li>color font-前缀 text-前缀 line-前缀</li></ul><p>可以在MDN网站查询属性是否可被继承。</p><h3 id="4-3-优先级"><a href="#4-3-优先级" class="headerlink" title="4.3 优先级"></a>4.3 优先级</h3><p>选择器相同：</p><ul><li>!important &gt; 行内样式 &gt; <code>后面的选择器</code> &gt; <code>前面的选择器</code> &gt; 通配选择器 &gt; 默认的样式 &gt; 继承的样式</li></ul><p>选择器不同：</p><ul><li>!important &gt; 行内样式 &gt; <code>按权重计算选择器优先级</code> &gt; 通配选择器 &gt; 默认的样式 &gt; 继承的样式</li></ul><h2 id="5-常用属性"><a href="#5-常用属性" class="headerlink" title="5 常用属性"></a>5 常用属性</h2><h3 id="5-1-像素"><a href="#5-1-像素" class="headerlink" title="5.1 像素"></a>5.1 像素</h3><h4 id="5-1-1-概念"><a href="#5-1-1-概念" class="headerlink" title="5.1.1 概念"></a>5.1.1 概念</h4><p>在涉及电子设备的屏幕时，为了更精确的描述图像的清晰度，创建了像素这个新的长度计量单位，使用<code>px</code>表示。</p><p>像素和毫米的换算和分辨率有关，分辨率不同换算结果也不同。</p><p>像素是图像最小的单位，图像是由多个像素组成的，每个像素内的颜色是相同的，像素越高的图像看起来画质越清晰，占用空间也越大。</p><h4 id="5-1-2-尺寸"><a href="#5-1-2-尺寸" class="headerlink" title="5.1.2 尺寸"></a>5.1.2 尺寸</h4><p>尺寸就是宽度和高度，单位也是像素，指的是图像的宽度和高度占用的像素数量，也称为像素密度。</p><h4 id="5-1-3-分辨率"><a href="#5-1-3-分辨率" class="headerlink" title="5.1.3 分辨率"></a>5.1.3 分辨率</h4><p>分辨率就是单位面积内的像素数量，单位通常是DPI（Dots Per Inch，每英寸的像素数量），如果使用DPI作为单位，那么“单位面积”就是英寸。</p><p>英寸和毫米的换算：</p><ul><li>1in &#x3D; 25.4mm</li></ul><p>如果是DPI为96的图像，像素和毫米的换算：</p><ul><li>1mm ≈ 3.77px</li></ul><p>分辨率有两种，一种是图像的分辨率，一种是屏幕的分辨率：</p><ul><li>如果二者相同，看起来就是正常的。</li><li>如果图像的分辨率大，看起来就像被放大了。</li><li>如果图像的分辨率小，看起来就像被缩小了。</li></ul><h3 id="5-2-颜色"><a href="#5-2-颜色" class="headerlink" title="5.2 颜色"></a>5.2 颜色</h3><h4 id="5-2-1-使用颜色名"><a href="#5-2-1-使用颜色名" class="headerlink" title="5.2.1 使用颜色名"></a>5.2.1 使用颜色名</h4><p>使用颜色名表示颜色。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">颜色名;</span><br></pre></td></tr></table></figure><p>使用颜色名设置颜色为红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: red;</span><br></pre></td></tr></table></figure><p>这种方式比较简单，但是颜色名有限，不常见的颜色没有颜色名，可用颜色名参考文档：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/named-color">MDN具名颜色</a></p><h4 id="5-2-2-使用RGB或RGBA"><a href="#5-2-2-使用RGB或RGBA" class="headerlink" title="5.2.2 使用RGB或RGBA"></a>5.2.2 使用RGB或RGBA</h4><p>RGB指的是光的红（Red）绿（Green）蓝（Blue）三原色，RGBA多了一个透明度（Alpha）。</p><p>三原色的可选范围是0到255，透明度的可选范围是0到1，0表示全透明，1表示不透明。</p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rgb(红色,绿色,蓝色);</span><br></pre></td></tr></table></figure><p>使用RGB设置颜色为红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>使用RGBA设置颜色为半透明红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><h4 id="5-2-3-使用HEX或HEXA"><a href="#5-2-3-使用HEX或HEXA" class="headerlink" title="5.2.3 使用HEX或HEXA"></a>5.2.3 使用HEX或HEXA</h4><p>HEX或HEXA是一种使用RGB或RGBA的十六进制表示的一种方式。</p><p>三原色和透明度都使用两位十六进制表示，范围是00到FF，对应数字0到255。</p><p>说明：</p><ul><li>如果HEX或HEXA表示的颜色，每组两位十六进制都相同，可以简写为一位十六进制。</li><li>颜色字母大小写不敏感。</li><li>IE浏览器不支持HEXA，只支持HEX。</li></ul><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#红色绿色蓝色;</span><br></pre></td></tr></table></figure><p>使用HEX设置颜色为红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="number">#ff0000</span>;</span><br></pre></td></tr></table></figure><p>使用HEXA设置颜色为半透明红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="number">#ff000088</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-4-使用HSL或HSLA"><a href="#5-2-4-使用HSL或HSLA" class="headerlink" title="5.2.4 使用HSL或HSLA"></a>5.2.4 使用HSL或HSLA</h4><p>HSL指的是色相（Hue）、饱和度（Saturation）、亮度（Lightness），HSLA多了一个透明度（Alpha）。</p><p>概念：</p><ul><li>色相：取值范围是0度到360度，表示颜色的角度。</li><li>饱和度：取值范围是0%到100%，表示向色相中对应颜色中添加灰色，0%表示黑白，100%表示彩色。</li><li>亮度：取值范围是0%到100%，表色颜色的明亮程度，0%表示没有亮度的黑色，100%表示最高亮度的白色。</li></ul><p>色相的度数对应的颜色如下图：<br><img src="/@image/102001/001001-143349.jpg" alt="001-色相"></p><p>语法：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hsl(色相,饱和度,亮度);</span><br></pre></td></tr></table></figure><p>使用HSL设置颜色为红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="built_in">hsl</span>(<span class="number">0</span>,<span class="number">100%</span>,<span class="number">50%</span>);</span><br></pre></td></tr></table></figure><p>使用HSLA设置颜色为半透明红色：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="built_in">hsl</span>(<span class="number">0</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">50%</span>);</span><br></pre></td></tr></table></figure><h3 id="5-3-字体"><a href="#5-3-字体" class="headerlink" title="5.3 字体"></a>5.3 字体</h3><h4 id="5-3-1-字体大小"><a href="#5-3-1-字体大小" class="headerlink" title="5.3.1 字体大小"></a>5.3.1 字体大小</h4><p>控制字体大小的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>font-size</td>      <td>控制文本字体的大小</td>      <td>长度单位</td>    </tr>  </tbody></table><p>说明：</p><ul><li>设置为0会让文本消失。</li><li>浏览器有默认字体，不同浏览器默认字体可能不一样大，为了显示统一，建议设置明确大小。</li><li>因为CSS的继承性，只需要给<code>body</code>元素设置字体大小，后代元素默认继承祖先元素的字体大小。不建议使用通配选择器，否则会导致在给某个元素的父元素的字体设置大小后，因为通配选择器优先级高于继承，元素优先使用通配选择器设置的大小，并没有使用继承父元素设置的大小。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br></pre></td></tr></table></figure><h4 id="5-3-2-字体族"><a href="#5-3-2-字体族" class="headerlink" title="5.3.2 字体族"></a>5.3.2 字体族</h4><p>控制字体字型的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>font-family</td>      <td>控制文本字体的字型</td>      <td>字体名称，多个使用<code>,</code>分隔分隔</td>    </tr>  </tbody></table><p>分类：</p><ul><li>衬线字体：字体线条粗细不一，类似毛笔和钢笔的字体。使用<code>serif</code>表示选择系统可用的衬线字体。</li><li>非衬线字体：字体线条宽度一致。使用<code>sans-serif</code>表示选择系统可用的非衬线字体。</li></ul><p>说明：</p><ul><li>支持使用中文，但有的字体没有提供中文名称，建议使用英文，如果存在空格，需要使用<code>&quot;</code>双引号包裹。</li><li>多个字体使用时按照从左到右的顺序查找，系统存在就使用，系统不存在就查找下一个。</li><li>如果都不能匹配，会使用操作系统默认字体，不同的操作系统能够使用的字体不同。在<code>Windows</code>系统下使用<code>微软雅黑</code>作为默认字体。</li><li>为了保证显示效果统一，通常多个字体都是衬线字体或者非衬线字体，并且可以使用<code>serif</code>或者<code>sans-serif</code>兜底，当前面的字体在系统中不存在时，强制使用系统可用的衬线字体或者非衬线字体进行渲染。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;Microsoft YaHei&quot;</span>,sans-serif;</span><br></pre></td></tr></table></figure><h4 id="5-3-3-字体风格"><a href="#5-3-3-字体风格" class="headerlink" title="5.3.3 字体风格"></a>5.3.3 字体风格</h4><p>控制字体风格的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>font-style</td>      <td>控制文本字体的风格（是否斜体）</td>      <td>        normal：正常（默认字体）<br>        italic：斜体（先使用斜体字体，如果不存在，才会强制字体倾斜，推荐）<br>        oblique：斜体（不使用斜体字体，直接强制字体倾斜）<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-style</span>: italic;</span><br></pre></td></tr></table></figure><h4 id="5-3-4-字体粗细"><a href="#5-3-4-字体粗细" class="headerlink" title="5.3.4 字体粗细"></a>5.3.4 字体粗细</h4><p>控制字体粗细的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>font-weight</td>      <td>控制文本字体的粗细</td>      <td>        有两种方式：<br>        <dl>          <dt>1. 使用名称设置粗细：</dt>          <dd>lighter：细</dd>          <dd>normal：正常</dd>          <dd>bold：粗</dd>          <dd>bolder：很粗（多数字体不支持，效果同bold）</dd>          <dt>2. 使用数值设置粗细：</dt>          <dd>数值的范围是从100到1000，一般来说数值越大字体越粗，具体要看字体设计</dd>          <dd>100~300等同于lighter</dd>          <dd>400~500等同于normal</dd>          <dd>600及以上等同于bold</dd>        </dl>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font-weight</span>: <span class="number">200</span>;</span><br></pre></td></tr></table></figure><h4 id="5-3-5-复合写法"><a href="#5-3-5-复合写法" class="headerlink" title="5.3.5 复合写法"></a>5.3.5 复合写法</h4><p>控制字体的多个属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>font</td>      <td>控制文本字体的多个属性的复合写法</td>      <td>        用空格隔开：<br>        <dl>          <dt>1. 字体族必须存在并且是最后一位：</dt>          <dd>字体族同font-family属性</dd>          <dt>2. 字体大小必须存在并且是倒数第二位：</dt>          <dd>字体大小同font-size属性</dd>          <dt>3. 其他属性：</dt>          <dd>同其他字体属性</dd>        </dl>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font</span>: normal <span class="number">200</span> <span class="number">40px</span> <span class="string">&quot;Microsoft YaHei&quot;</span>,sans-serif;</span><br></pre></td></tr></table></figure><h3 id="5-4-文本"><a href="#5-4-文本" class="headerlink" title="5.4 文本"></a>5.4 文本</h3><h4 id="5-4-1-文本颜色"><a href="#5-4-1-文本颜色" class="headerlink" title="5.4.1 文本颜色"></a>5.4.1 文本颜色</h4><p>控制文本颜色的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>color</td>      <td>控制文本的颜色</td>      <td>        颜色名<br>        RGB或RGBA（常用）<br>        HEX或HEXA（常用）<br>        HSL或HSLA<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">color</span>: <span class="number">#ff0000</span>;</span><br></pre></td></tr></table></figure><h4 id="5-4-2-文本划线"><a href="#5-4-2-文本划线" class="headerlink" title="5.4.2 文本划线"></a>5.4.2 文本划线</h4><p>控制文本划线样式的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>text-decoration</td>      <td>控制文本的各种装饰线</td>      <td>        用空格隔开，支持三种维度设置：<br>        <dl>          <dt>1. 装饰线类型：</dt>          <dd>none：无装饰线（常用）</dd>          <dd>line-through：删除线（常用）</dd>          <dd>underline：下划线（常用）</dd>          <dd>overline：上划线</dd>          <dt>2. 装饰线样式：</dt>          <dd>dotted：虚线</dd>          <dd>wavy：波浪线</dd>          <dt>3. 装饰线颜色：</dt>          <dd>颜色代码</dd>        </dl>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-decoration</span>: line-through dotted <span class="number">#ff0000</span>;</span><br></pre></td></tr></table></figure><h4 id="5-4-3-文本缩进"><a href="#5-4-3-文本缩进" class="headerlink" title="5.4.3 文本缩进"></a>5.4.3 文本缩进</h4><p>控制文本缩进的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>text-indent</td>      <td>控制文本的缩进</td>      <td>长度单位</td>    </tr>  </tbody></table><p>说明：</p><ul><li>正值让文本右移，负值让文本左移。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-indent</span>: <span class="number">5px</span>;</span><br></pre></td></tr></table></figure><h4 id="5-4-4-文本间距"><a href="#5-4-4-文本间距" class="headerlink" title="5.4.4 文本间距"></a>5.4.4 文本间距</h4><p>控制文本间距的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>letter-spacing</td>      <td>控制字符之间的距离，包括汉字和标点符号，也包括空格</td>      <td>长度单位</td>    </tr>    <tr>      <td>word-spacing</td>      <td>控制空格分隔的词语之间的距离，实际控制的是空格占用的距离</td>      <td>长度单位</td>    </tr>  </tbody></table><p>说明：</p><ul><li>正值让间距增大，负值让间距缩小。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">letter-spacing</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">word-spacing</span>: <span class="number">5px</span>;</span><br></pre></td></tr></table></figure><h4 id="5-4-5-文本水平对齐"><a href="#5-4-5-文本水平对齐" class="headerlink" title="5.4.5 文本水平对齐"></a>5.4.5 文本水平对齐</h4><p>控制文本水平对齐的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>text-align</td>      <td>控制块级元素内容或者单元格元素内容的水平对齐</td>      <td>        left：左对齐（默认值）<br>        right：右对齐<br>        center：居中对齐<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-align</span>: center;</span><br></pre></td></tr></table></figure><h4 id="5-4-6-文本字体"><a href="#5-4-6-文本字体" class="headerlink" title="5.4.6 文本字体"></a>5.4.6 文本字体</h4><p>字体设计用到的参考线：<br><img src="/@image/102001/001002-151334.jpg" alt="002-字体设计参考线"></p><p>概念：</p><blockquote><p>baseline：基线，以英文字符<code>x</code>下边缘为参考的横线，字符默认是以基线对齐的。<br>middle：中线，以英文字符<code>x</code>上边缘为参考的横线。<br>top：顶线，字符的上边缘，所有字符均不会超过上边缘，包括中文。<br>bottom：底线，字符的下边缘，所有字符均不会超过下边缘，包括中文。<br>line-height：行高，文字的高度，实际是上下两行基线之间的高度。</p></blockquote><p>说明：</p><blockquote><p>即使可以通过<code>font-size</code>给不同的字体设置统一的大小，不同的字体在页面上显示的大小还是有细微的区别。<br>不同的字体对相同的字符在垂直方向上的处理也是不同的，有的可能贴近底线，有的可能贴近顶线。</p></blockquote><h4 id="5-4-7-行高"><a href="#5-4-7-行高" class="headerlink" title="5.4.7 行高"></a>5.4.7 行高</h4><p>控制行高的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>line-height</td>      <td>控制元素内容一行内容的高度</td>      <td>        normal：由浏览器根据文字大小决定的默认值<br>        像素：使用像素`px`作为单位设置行高<br>        数字倍数：使用`font-size`的数字倍数设置行高（很常用）<br>        百分比倍数：使用`font-size`的百分比倍数设置行高<br>      </td>    </tr>  </tbody></table><p>说明：</p><ul><li>如果设置行高为负数，效果等同设置行高为normal的效果。</li><li>如果设置行高为最小值0，效果和字体设计以及元素区块有关。</li><li>如果设置行高为字体大小，会因为字体设计的问题，导致相邻两行发生重叠。</li><li>建议设置行高为字体的1.5倍，不会发生重叠，也不会间隔太长。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">line-height</span>: normal;</span><br></pre></td></tr></table></figure><h4 id="5-4-8-文本垂直对齐"><a href="#5-4-8-文本垂直对齐" class="headerlink" title="5.4.8 文本垂直对齐"></a>5.4.8 文本垂直对齐</h4><p>控制文本垂直对齐的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>vertical-align</td>      <td>控制行内元素内容或者单元格元素内容的垂直对齐</td>      <td>        baseline：使元素的基线与父元素的基线对齐（默认值）<br>        middle：使元素的中线与父元素的中线对齐<br>        top：使元素的顶线与其所在行的顶线对齐<br>        bottom：使元素的底线与其所在行的底线对齐<br>      </td>    </tr>  </tbody></table><p>说明：</p><ul><li>只能用于控制行内元素在父元素一行中的垂直对齐，不能控制行内元素在父元素整个元素中的垂直对齐。</li></ul><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br></pre></td></tr></table></figure><h3 id="5-5-列表"><a href="#5-5-列表" class="headerlink" title="5.5 列表"></a>5.5 列表</h3><p>控制列表的属性，可以作用在<code>ul</code>、<code>ol</code>、<code>li</code>元素上：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>list-style-type</td>      <td>设置列表符号</td>      <td>        none：不显示前面的标识（很常用）<br>        square：实心方块<br>        disc：圆形<br>        decimal：数字<br>        lower-roman：小写罗马字<br>        upper-roman：大写罗马字<br>        lower-alpha：小写字母<br>        upper-alpha：大写字母<br>      </td>    </tr>    <tr>      <td>list-style-position</td>      <td>设置列表符号的位置</td>      <td>        inside：在`li`的里面<br>        outside：在`li`的外边<br>      </td>    </tr>    <tr>      <td>list-style-image</td>      <td>自定义列表符号</td>      <td>url(图片地址)</td>    </tr>    <tr>      <td>list-style</td>      <td>设置复合属性</td>      <td>没有数量和顺序要求，同属性后面的会覆盖前面的</td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">list-style</span>: decimal;</span><br></pre></td></tr></table></figure><h3 id="5-6-表格"><a href="#5-6-表格" class="headerlink" title="5.6 表格"></a>5.6 表格</h3><h4 id="5-6-1-边框"><a href="#5-6-1-边框" class="headerlink" title="5.6.1 边框"></a>5.6.1 边框</h4><p>控制边框的属性，可以作用在其他元素上，不仅仅是表格元素：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>border-style</td>      <td>设置边框风格</td>      <td>        none：默认值<br>        solid：实线<br>        dashed：虚线<br>        dotted：点线<br>        double：双实线<br>      </td>    </tr>    <tr>      <td>border-width</td>      <td>设置边框宽度</td>      <td>长度单位</td>    </tr>    <tr>      <td>border-color</td>      <td>设置边框颜色</td>      <td>颜色代码</td>    </tr>    <tr>      <td>border</td>      <td>设置复合属性</td>      <td>没有数量和顺序要求，同属性后面的会覆盖前面的</td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: none;</span><br></pre></td></tr></table></figure><h4 id="5-6-2-表格独有"><a href="#5-6-2-表格独有" class="headerlink" title="5.6.2 表格独有"></a>5.6.2 表格独有</h4><p>表格独有属性，只能作用在<code>table</code>元素上：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>table-layout</td>      <td>设置列宽度</td>      <td>        auto：自动，列宽根据内容计算（默认值）<br>        fixed：固定列宽，平均分<br>      </td>    </tr>    <tr>      <td>border-collapse</td>      <td>合并单元格边框</td>      <td>        collapse：合并<br>        separate：不合并（默认值）<br>      </td>    </tr>    <tr>      <td>border-spacing</td>      <td>设置单元格间距，这个属性生效的前提是单元格边框不能合并</td>      <td>长度单位</td>    </tr>    <tr>      <td>empty-cells</td>      <td>隐藏没有内容的单元格，这个属性生效的前提是单元格边框不能合并</td>      <td>        show：显示（默认值）<br>        hide：隐藏<br>      </td>    </tr>    <tr>      <td>caption-side</td>      <td>设置表格标题位置</td>      <td>        top：在表格上面（默认值）<br>        bottom：在表格下面<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>: separate;</span><br></pre></td></tr></table></figure><h3 id="5-7-背景"><a href="#5-7-背景" class="headerlink" title="5.7 背景"></a>5.7 背景</h3><p>控制元素背景的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>background-color</td>      <td>设置背景颜色</td>      <td>默认是transparent</td>    </tr>    <tr>      <td>background-image</td>      <td>设置背景图片</td>      <td>url(图片地址)</td>    </tr>    <tr>      <td>background-repeat</td>      <td>设置背景重复方式</td>      <td>        repeat：重复，铺满整个元素（默认值）<br>        repeat-x：只在水平方向重复<br>        repeat-y：只在垂直方向重复<br>        no-repeat：不重复<br>      </td>    </tr>    <tr>      <td>background-position</td>      <td>设置背景图位置</td>      <td>        用空格隔开，使用两个维度定位，有两种方式：<br>        <dl>          <dt>1. 使用关键字<code>(水平 垂直)</code>设置位置：</dt>          <dd>水平：left、center、right</dd>          <dd>垂直：top、center、bottom</dd>          <dd>如果只写一个值，另一个方向的值取center</dd>          <dt>2. 使用坐标<code>(x y)</code>设置图片左上角的位置，以元素左上角为坐标原点：</dt>          <dd>如果只写一个值，会被当做x坐标，y坐标取center</dd>        </dl>      </td>    </tr>    <tr>      <td>background</td>      <td>设置复合属性</td>      <td>没有数量和顺序要求，同属性后面的会覆盖前面的</td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: transparent;</span><br></pre></td></tr></table></figure><h3 id="5-8-鼠标"><a href="#5-8-鼠标" class="headerlink" title="5.8 鼠标"></a>5.8 鼠标</h3><p>控制鼠标样式的属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>作用</th>      <th>取值</th>    </tr>  </thead>  <tbody>    <tr>      <td>cursor</td>      <td>设置鼠标光标的样式，也可以自定义鼠标图标</td>      <td>        pointer：小手<br>        move：移动图标<br>        text：文字选择器<br>        crosshair：十字架<br>        wait：等待<br>        help：帮助<br>        url(图片地址)：自定义图标<br>      </td>    </tr>  </tbody></table><p>示例：</p><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cursor</span>: pointer;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了CSS的语法规则和选择器，以及CSS常用的一些属性。&lt;/p&gt;</summary>
    
    
    
    <category term="大前端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://momashanhe.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://momashanhe.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML4进阶</title>
    <link href="https://momashanhe.com/posts/20240314/163125/"/>
    <id>https://momashanhe.com/posts/20240314/163125/</id>
    <published>2024-03-14T08:31:25.000Z</published>
    <updated>2024-04-08T00:44:17.671Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了HTML常见的元素及其特点。</p><span id="more"></span><h2 id="1-文本元素"><a href="#1-文本元素" class="headerlink" title="1 文本元素"></a>1 文本元素</h2><p>和排版元素相比，文本元素侧重词汇和短语并且一般是行内元素，排版元素侧重文章和段落并且一般是块级元素，而且文本元素通常写在排版元素中。</p><p>常用的文本元素如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>em</td>      <td>表示需要注意的内容</td>      <td>双标签</td>    </tr>    <tr>      <td>strong</td>      <td>表示十分重要的内容，语气比<code>em</code>元素更重</td>      <td>双标签</td>    </tr>  </tbody></table><p>不太常用的文本元素如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>cite</td>      <td>表示作品标题</td>      <td>双标签</td>    </tr>    <tr>      <td>dfn</td>      <td>表示特殊术语或者专属名词</td>      <td>双标签</td>    </tr>    <tr>      <td>del</td>      <td>表示想要删除的文本</td>      <td>双标签</td>    </tr>    <tr>      <td>ins</td>      <td>表示想要插入的文本</td>      <td>双标签</td>    </tr>    <tr>      <td>sub</td>      <td>表示下标</td>      <td>双标签</td>    </tr>    <tr>      <td>sup</td>      <td>表示上标</td>      <td>双标签</td>    </tr>    <tr>      <td>code</td>      <td>表示代码</td>      <td>双标签</td>    </tr>    <tr>      <td>i</td>      <td>表示具有特定含义的文本，多用于呈现字体图标</td>      <td>双标签</td>    </tr>  </tbody></table><p>省略了一些语义不强、较少使用、能被替代的元素，可以在官方网站上查看全部元素。</p><h2 id="2-图片元素"><a href="#2-图片元素" class="headerlink" title="2 图片元素"></a>2 图片元素</h2><h3 id="2-1-基本结构"><a href="#2-1-基本结构" class="headerlink" title="2.1 基本结构"></a>2.1 基本结构</h3><p>图片元素用于定义图片资源的位置，以及图片的一些属性，属于行内元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>img</td>      <td>表示图片</td>      <td>单标签</td>    </tr>  </tbody></table><p>常用属性如下：</p><ul><li>src：图片路径。</li><li>alt：图片描述。</li><li>width：图片宽度，默认使用图片本身的宽度，单位是像素。</li><li>height：图片高度，默认使用图片本身的高度， 单位是像素。</li></ul><h3 id="2-2-路径"><a href="#2-2-路径" class="headerlink" title="2.2 路径"></a>2.2 路径</h3><p>图片路径也称为图片地址，分为相对路径和绝对路径，以及网络地址：</p><ul><li>相对路径：从当前页面文件所在的位置开始，能够访问图片资源的路径。</li><li>绝对路径：从当前页面文件所在的磁盘的根目录开始，能够访问图片资源的路径。</li><li>网络地址：相对路径和绝对路径都是本地图片，如果是网络图片则需要使用图片的网络地址进行访问。</li></ul><p>如果是本地图片，需要注意图片被移动会导致路径失效，如果是网络图片，需要注意在开启防盗链后会导致图片不可访问。</p><h3 id="2-3-图片格式"><a href="#2-3-图片格式" class="headerlink" title="2.3 图片格式"></a>2.3 图片格式</h3><h4 id="2-3-1-jpg"><a href="#2-3-1-jpg" class="headerlink" title="2.3.1 jpg"></a>2.3.1 jpg</h4><p>说明：扩展名为<code>jpg</code>和<code>jpeg</code>，有损压缩，丢弃了肉眼观察不到的细节。</p><p>特点：占用空间较小，不支持透明背景，不支持动态图片。</p><p>场景：对图片质量没有极高的要求，适合绝大多数场景。</p><h4 id="2-3-2-png"><a href="#2-3-2-png" class="headerlink" title="2.3.2 png"></a>2.3.2 png</h4><p>说明：扩展名为<code>png</code>，无损压缩，支持图片高质量的保存。</p><p>特点：占用空间较大，支持透明背景，不支持动态图片。</p><p>场景：对图片质量有一定的要求，或者需要使用有透明背景的图片。</p><h4 id="2-3-3-bmp"><a href="#2-3-3-bmp" class="headerlink" title="2.3.3 bmp"></a>2.3.3 bmp</h4><p>说明：扩展名为<code>bmp</code>，不进行压缩，最大程度保留了图片细节。</p><p>特点：占用空间极大，不支持透明背景，不支持动态图片。</p><p>场景：对图片细节要求极高的场景，页面中很少使用。</p><h4 id="2-3-4-gif"><a href="#2-3-4-gif" class="headerlink" title="2.3.4 gif"></a>2.3.4 gif</h4><p>说明：扩展名为<code>gif</code>，有损压缩，仅支持256种颜色。</p><p>特点：占用空间较小，支持颜色较少，支持透明背景，支持动态图片。</p><p>场景：页面中的动态图片。</p><h4 id="2-3-5-webp"><a href="#2-3-5-webp" class="headerlink" title="2.3.5 webp"></a>2.3.5 webp</h4><p>说明：扩展名为<code>webp</code>，同时支持无损压缩和有损压缩，谷歌推出的图片格式，专用于处理页面图片。</p><p>特点：占用空间较小，支持透明背景，支持动态图片，需要注意兼容性问题。</p><p>场景：页面中的图片，在和<code>jpg</code>在同等大小的情况下能保留更多细节。</p><h4 id="2-3-6-base64"><a href="#2-3-6-base64" class="headerlink" title="2.3.6 base64"></a>2.3.6 base64</h4><p>说明：将图片转换得到的一串特殊的文本，支持通过浏览器打开，但某些看图应用无法打开。</p><p>特点：字符串会特别长，并且会占用和图片大小相同的空间。</p><p>场景：一些较小的图片，或者需要同页面一起加载的图片。</p><h2 id="3-超链接"><a href="#3-超链接" class="headerlink" title="3 超链接"></a>3 超链接</h2><h3 id="3-1-基本结构"><a href="#3-1-基本结构" class="headerlink" title="3.1 基本结构"></a>3.1 基本结构</h3><p>用于从当前页面进行跳转，超链接本身属于行内元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>a</td>      <td>表示超链接</td>      <td>双标签</td>    </tr>  </tbody></table><p>常用属性如下：</p><ul><li>href：指定要跳转到的具体目标。</li><li>target：控制跳转时如何打开页面。</li></ul><p>需要注意的是，虽然<code>a</code>元素是行内元素，但是可以包裹<code>a</code>元素之外的其他元素，包括块级元素和行内元素。</p><h3 id="3-2-跳转方式"><a href="#3-2-跳转方式" class="headerlink" title="3.2 跳转方式"></a>3.2 跳转方式</h3><h4 id="3-2-1-跳转到页面"><a href="#3-2-1-跳转到页面" class="headerlink" title="3.2.1 跳转到页面"></a>3.2.1 跳转到页面</h4><p>使用<code>href</code>属性指定页面，那么点击超链接会跳转到指定的页面。</p><p>使用<code>target</code>属性指定打开目标页面的方式：</p><ul><li>_self：在当前标签页打开，即替换当前页面的地址为目标地址并访问。</li><li>_blank：在新建标签页打开，当前标签页保留。</li></ul><h4 id="3-2-2-跳转到文件"><a href="#3-2-2-跳转到文件" class="headerlink" title="3.2.2 跳转到文件"></a>3.2.2 跳转到文件</h4><p>使用<code>href</code>属性指定文件，那么点击超链接会跳转到指定的文件。</p><p>如果浏览器能打开指定的文件就在浏览器展示，比如图片文件，如果浏览器不能打开指定的文件就引导用户下载，比如压缩文件。</p><h4 id="3-2-3-跳转到锚点"><a href="#3-2-3-跳转到锚点" class="headerlink" title="3.2.3 跳转到锚点"></a>3.2.3 跳转到锚点</h4><p>使用<code>href</code>属性指定锚点，那么点击超链接会跳转到指定的锚点。</p><p>锚点是<code>#</code>符号和在其他元素中<code>id</code>属性值拼接得到的，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#test&quot;</span>&gt;</span>点击前往测试内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其他内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以跳转到页面顶部：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>点击前往页面顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果<code>href</code>属性空白，页面上不会有超链接样式，可以使用<code>#</code>符号占位，点击会跳转到当前页：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>占位链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-跳转到应用"><a href="#3-2-4-跳转到应用" class="headerlink" title="3.2.4 跳转到应用"></a>3.2.4 跳转到应用</h4><p>使用<code>href</code>属性指定应用，那么点击超链接会跳转到指定的应用，需要应用支持，比如邮箱等。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:momashanhe@163.com&quot;</span>&gt;</span>点击发送邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-列表"><a href="#4-列表" class="headerlink" title="4 列表"></a>4 列表</h2><h3 id="4-1-有序列表"><a href="#4-1-有序列表" class="headerlink" title="4.1 有序列表"></a>4.1 有序列表</h3><p>有顺序或侧重顺序的列表，属于块级元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>ol</td>      <td>表示有序列表的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>li</td>      <td>表示列表的一列</td>      <td>双标签</td>    </tr>  </tbody></table><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>要把大象放冰箱总共分几步<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>把冰箱门打开<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>把大象放进去<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>把冰箱门关上<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-无序列表"><a href="#4-2-无序列表" class="headerlink" title="4.2 无序列表"></a>4.2 无序列表</h3><p>无顺序或不侧重顺序的列表，属于块级元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>ul</td>      <td>表示无序列表的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>li</td>      <td>表示列表的一列</td>      <td>双标签</td>    </tr>  </tbody></table><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我想去的几个城市<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>西安<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-嵌套列表"><a href="#4-3-嵌套列表" class="headerlink" title="4.3 嵌套列表"></a>4.3 嵌套列表</h3><p>有序列表和无序列表支持嵌套列表。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我想去的几个城市<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>外滩<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>杜莎夫人蜡像馆<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.opg.cn/&quot;</span>&gt;</span>东方明珠<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪士尼乐园<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>西安<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>武汉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-自定义列表"><a href="#4-4-自定义列表" class="headerlink" title="4.4 自定义列表"></a>4.4 自定义列表</h3><p>包含术语名称以及术语描述的列表，属于块级元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>dl</td>      <td>表示自定义列表的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>dt</td>      <td>表示术语名称</td>      <td>双标签</td>    </tr>    <tr>      <td>dd</td>      <td>表示术语描述</td>      <td>双标签</td>    </tr>  </tbody></table><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如何高效的学习<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>做好笔记<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>笔记是我们以后复习的一个抓手<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>笔记可以是电子版，也可以是纸质版<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>多加练习<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>只有敲出来的代码，才是自己的<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>别怕出错<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>错很正常，改正后并记住，就是经验<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-表格"><a href="#5-表格" class="headerlink" title="5 表格"></a>5 表格</h2><h3 id="5-1-基本结构"><a href="#5-1-基本结构" class="headerlink" title="5.1 基本结构"></a>5.1 基本结构</h3><p>一个完整的表格由四部分组成：表格标题、表格头部、表格主体、表格脚注。</p><p>表格的某些部分可以省略，各个部分都属于块级元素。</p><p>表格结构如图：<br><img src="/@image/101001/002001-155240.jpg" alt="001-表格结构"></p><p>表格涉及到的元素：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>table</td>      <td>表示表格的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>caption</td>      <td>表示表格的标题行</td>      <td>双标签</td>    </tr>    <tr>      <td>thead</td>      <td>表示表格头部的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>tbody</td>      <td>表示表格主体的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>tfoot</td>      <td>表示表格脚注的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>tr</td>      <td>表示表格一行的范围，可以用在<code>thead</code>元素、<code>tbody</code>元素、<code>tfoot</code>元素</td>      <td>双标签</td>    </tr>    <tr>      <td>th</td>      <td>表示表格头部一格的范围，可以用在<code>thead</code>元素</td>      <td>双标签</td>    </tr>    <tr>      <td>td</td>      <td>表示表格主体一格的范围，可以用在<code>tbody</code>元素、<code>tfoot</code>元素</td>      <td>双标签</td>    </tr>  </tbody></table><p>表格详细结构如图：<br><img src="/@image/101001/002002-163046.jpg" alt="002-表格头部"><br><img src="/@image/101001/002003-163104.jpg" alt="003-表格主体"><br><img src="/@image/101001/002004-163215.jpg" alt="004-表格脚注"></p><p>表格详细结构代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 表格标题 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 表格头部 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>民族<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>政治面貌<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 表格主体 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>汉族<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>团员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>满族<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>群众<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>男<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>回族<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>党员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>赵六<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>21<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>壮族<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>团员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 表格脚注 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>共计：4人<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-常用属性"><a href="#5-2-常用属性" class="headerlink" title="5.2 常用属性"></a>5.2 常用属性</h3><p><code>table</code>元素常用属性：</p><ul><li>width：设置表格宽度。</li><li>height：设置表格最小高度，表格最终高度可能比设置的值大。</li><li>border：设置表格边框宽度。</li><li>cellspacing：设置单元格之间的间距。</li></ul><p><code>thead</code>元素常用属性：</p><ul><li>height：设置表格头部高度。</li><li>align：设置单元格的水平对齐方式。</li><li>valign：设置单元格的垂直对齐方式。</li></ul><p><code>thead</code>元素中的<code>align</code>属性可选值如下：</p><ul><li>left：左边对齐。</li><li>center：中间对齐。</li><li>right：右边对齐。</li></ul><p><code>thead</code>元素中的<code>valign</code>属性可选值如下：</p><ul><li>top：顶部对齐。</li><li>middle：中间对齐。</li><li>bottom：底部对齐。</li></ul><p><code>tbody</code>元素常用属性与<code>thead</code>元素常用属性相同。</p><p><code>tfoot</code>元素常用属性与<code>thead</code>元素常用属性相同。</p><p><code>tr</code>元素常用属性与<code>thead</code>元素常用属性相同。</p><p><code>th</code>元素常用属性：</p><ul><li>width：设置单元格的宽度，同列所有单元格全都受影响。</li><li>heigth：设置单元格的高度，同行所有单元格全都受影响。</li><li>align：设置单元格的水平对齐方式。</li><li>valign：设置单元格的垂直对齐方式。</li><li>rowspan：指定要跨的行数。</li><li>colspan：指定要跨的列数。</li></ul><p><code>td</code>元素常用属性与<code>th</code>元素常用属性相同。</p><h3 id="5-3-跨行跨列"><a href="#5-3-跨行跨列" class="headerlink" title="5.3 跨行跨列"></a>5.3 跨行跨列</h3><p>涉及属性：</p><ul><li>rowspan：指定要跨的行数。</li><li>colspan：指定要跨的列数。</li></ul><p>使用属性实现跨行跨列：</p><div class="tabs" id="tab-tab-id-3"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-3-1">原始表格</a></li><li class="tab"><a class="#tab-id-3-2">使用colspan跨行</a></li><li class="tab"><a class="#tab-id-3-3">使用rowspan跨列</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-3-1"><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-3-2"><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;td&gt;2-1&lt;/td&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-3-3"><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;middle&quot;</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;td&gt;1-2&lt;/td&gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div><h2 id="6-表单"><a href="#6-表单" class="headerlink" title="6 表单"></a>6 表单</h2><h3 id="6-1-基本元素"><a href="#6-1-基本元素" class="headerlink" title="6.1 基本元素"></a>6.1 基本元素</h3><p>表单是一个包含交互的区域，用于收集用户提供的数据，整个表单属于块级元素，表单中的控件一般属于行内元素。</p><p>表单中常见的元素：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>form</td>      <td>表示表单的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>input</td>      <td>表示表单中的控件，存在多种控件类型</td>      <td>单标签</td>    </tr>    <tr>      <td>button</td>      <td>表示表单中的按钮，点击可以触发处理表单数据的操作</td>      <td>双标签</td>    </tr>    <tr>      <td>textarea</td>      <td>表示文本域，可以存储多行文本</td>      <td>双标签</td>    </tr>    <tr>      <td>select</td>      <td>表示下拉框的范围，点击展示下拉框选项</td>      <td>双标签</td>    </tr>    <tr>      <td>option</td>      <td>表示下拉框的选项</td>      <td>双标签</td>    </tr>    <tr>      <td>label</td>      <td>和表单控件关联，点击元素可使表单控件获得焦点</td>      <td>双标签</td>    </tr>    <tr>      <td>fieldset</td>      <td>表示表单元素分组的范围</td>      <td>双标签</td>    </tr>    <tr>      <td>legend</td>      <td>表示表单元素分组的标题</td>      <td>双标签</td>    </tr>  </tbody></table><p><code>form</code>元素常用属性：</p><ul><li>action：表单提交的地址，需要和后端沟通确定。</li><li>target：表单提交后，页面的打开方式，同<code>a</code>元素中的<code>target</code>属性。</li><li>method：表单提交的请求方式，比如<code>get</code>和<code>post</code>等。</li></ul><p><code>input</code>元素常用属性：</p><ul><li>type：设置控件的类型，比如<code>text</code>表示普通文本。</li><li>name：设置控件的数据名称，需要和后端沟通确定。</li><li>value：获取控件的数据，不同的表单控件有不同的获取方式。</li><li>disabled：设置控件不可用。</li></ul><p><code>button</code>元素常用属性：</p><ul><li>disabled：设置按钮不可用。</li><li>type：设置按钮的类型，不同的类型对表单数据的处理方式不同，比如<code>submit</code>会提交表单。</li></ul><p><code>textarea</code>元素常用属性：</p><ul><li>name：设置文本域的数据名称。</li><li>rows：设置文本域默认显示的行数，影响文本域的高度。</li><li>cols：设置文本域默认显示的列数，影响文本域的宽度。</li><li>disabled：设置文本域不可用。</li></ul><p><code>select</code>元素常用属性：</p><ul><li>name：设置下拉框的数据名称。</li><li>disabled：设置下拉框不可用。</li></ul><p><code>option</code>元素常用属性：</p><ul><li>disabled：设置下拉选项不可用。</li><li>value：设置下拉选项的数据，在省略的情况下，会使用下拉选项的元素内容作为数据。</li><li>selected：设置下拉选项在加载后默认选中。</li></ul><p><code>label</code>元素常用属性：</p><ul><li>for：属性值与表单控件的<code>id</code>属性值相同。</li></ul><h3 id="6-2-常用控件"><a href="#6-2-常用控件" class="headerlink" title="6.2 常用控件"></a>6.2 常用控件</h3><h4 id="6-2-1-文本输入框"><a href="#6-2-1-文本输入框" class="headerlink" title="6.2.1 文本输入框"></a>6.2.1 文本输入框</h4><p>最常用的表单控件，支持输入一行文本。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入文本：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><ul><li>name：设置输入框的数据名称。</li><li>value：设置输入框的默认值。</li><li>maxlength：设置输入框最大可输入长度。</li></ul><h4 id="6-2-2-密码输入框"><a href="#6-2-2-密码输入框" class="headerlink" title="6.2.2 密码输入框"></a>6.2.2 密码输入框</h4><p>和文本输入框类似，但是输入的内容会显示为<code>*</code>号，避免密码泄露。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><ul><li>name：设置输入框的数据名称。</li><li>value：设置输入框的默认值，作为密码时无意义，可以省略。</li><li>maxlength：设置输入框最大可输入长度。</li></ul><h4 id="6-2-3-单选框"><a href="#6-2-3-单选框" class="headerlink" title="6.2.3 单选框"></a>6.2.3 单选框</h4><p>支持单选的控件。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请选择性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男</span><br></pre></td></tr></table></figure><p>属性：</p><ul><li>name：设置单选框的数据名称，同组控件的<code>name</code>属性值要保持一致。</li><li>value：设置单选框提交的数据值，会提交被选中的控件的<code>value</code>属性。</li><li>checked：设置单选框在加载后默认选中。</li></ul><h4 id="6-2-4-多选框"><a href="#6-2-4-多选框" class="headerlink" title="6.2.4 多选框"></a>6.2.4 多选框</h4><p>多选框也称为复选框，支持多选的控件。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请选择爱好：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;smoke&quot;</span>&gt;</span>抽烟</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;drink&quot;</span>&gt;</span>喝酒</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;perm&quot;</span>&gt;</span>烫头</span><br></pre></td></tr></table></figure><p>属性：</p><ul><li>name：设置多选框的数据名称，同组控件的<code>name</code>属性值要保持一致。</li><li>value：设置多选框提交的数据值，会提交被选中的控件的<code>value</code>属性，多个值会组成数组。</li><li>checked：设置多选框在加载后默认选中。</li></ul><h4 id="6-2-5-隐藏域"><a href="#6-2-5-隐藏域" class="headerlink" title="6.2.5 隐藏域"></a>6.2.5 隐藏域</h4><p>不会让用户看到的特殊控件，可以在<code>检查</code>后看到，通常用于提交特殊数据。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><ul><li>name：设置隐藏域的数据名称。</li><li>value：设置隐藏域提交的数据值，通常由操作自动存储，不需要用户处理。</li></ul><h4 id="6-2-6-提交按钮"><a href="#6-2-6-提交按钮" class="headerlink" title="6.2.6 提交按钮"></a>6.2.6 提交按钮</h4><p>用于将表单数据提交到指定地址。</p><p>使用<code>input</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交表单&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>input</code>元素涉及的属性：</p><ul><li>name：设置按钮的数据名称，作为按钮时无意义，可以省略。</li><li>value：设置按钮要显示的内容。</li></ul><p>也可以使用<code>button</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交表单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>button</code>元素时可以省略<code>type</code>属性，默认就是<code>submit</code>类型。</p><h4 id="6-2-7-重置按钮"><a href="#6-2-7-重置按钮" class="headerlink" title="6.2.7 重置按钮"></a>6.2.7 重置按钮</h4><p>用于将表单数据清空，恢复到页面加载后的状态。</p><p>使用<code>input</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置表单&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>input</code>元素涉及的属性：</p><ul><li>name：设置按钮的数据名称，作为按钮时无意义，可以省略。</li><li>value：设置按钮要显示的内容。</li></ul><p>也可以使用<code>button</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置表单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-2-8-普通按钮"><a href="#6-2-8-普通按钮" class="headerlink" title="6.2.8 普通按钮"></a>6.2.8 普通按钮</h4><p>用于触发特定操作。</p><p>使用<code>input</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通按钮&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>input</code>元素涉及的属性：</p><ul><li>name：设置按钮的数据名称，作为按钮时无意义，可以省略。</li><li>value：设置按钮要显示的内容。</li></ul><p>也可以使用<code>button</code>元素，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-2-9-文本域"><a href="#6-2-9-文本域" class="headerlink" title="6.2.9 文本域"></a>6.2.9 文本域</h4><p>用于存储多行文本。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入多行文本：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;3&quot;</span>&gt;</span>我是文本域<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>textarea</code>元素时不需要使用<code>type</code>属性，其他和<code>input</code>元素的文本输入框一致。</p><h4 id="6-2-10-下拉框"><a href="#6-2-10-下拉框" class="headerlink" title="6.2.10 下拉框"></a>6.2.10 下拉框</h4><p>用于选择下拉选项。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请选择省份：</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;from&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;黑&quot;</span>&gt;</span>黑龙江<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;辽&quot;</span>&gt;</span>辽宁<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;吉&quot;</span>&gt;</span>吉林<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;粤&quot;</span> <span class="attr">selected</span>&gt;</span>广东<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<code>option</code>元素时如果没有设置<code>value</code>属性，会将元素内容作为数据提交。</p><h4 id="6-2-11-标记"><a href="#6-2-11-标记" class="headerlink" title="6.2.11 标记"></a>6.2.11 标记</h4><p>和表单控件关联，点击元素可使表单控件获得焦点。</p><p>需要配合表单控件使用，代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>请输入密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-2-12-分组"><a href="#6-2-12-分组" class="headerlink" title="6.2.12 分组"></a>6.2.12 分组</h4><p>用于对表单元素进行分组，和其他控件不同，分组元素属于块级元素。</p><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>主要信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>账户：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;6&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  性别：</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-框架"><a href="#7-框架" class="headerlink" title="7 框架"></a>7 框架</h2><p>用于在当前页面加载其他内容，属于行内元素，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>iframe</td>      <td>框架，允许在框架里展示其他内容</td>      <td>双标签</td>    </tr>  </tbody></table><p>常用属性如下：</p><ul><li>name：框架名字，可以与其他元素的<code>target</code>属性配合，实现在框架中展示页面的效果。</li><li>src：框架内容，可以是网址，也可以是资源文件地址。</li><li>width：框架宽度。</li><li>height：框架高度。</li><li>frameborder：是否显示边框，取值0否1是。</li></ul><p>代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://momashanhe.com&quot;</span>&gt;</span>查看博客<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-全局属性"><a href="#8-全局属性" class="headerlink" title="8 全局属性"></a>8 全局属性</h2><p>常用的全局属性：</p><table>  <thead>    <tr>      <th>属性名</th>      <th>含义</th>    </tr>  </thead>  <tbody>    <tr>      <td>id</td>      <td>元素唯一标识，一个页面中的id属性值不能重复。可以配合CSS和JS使用，也可以在其他元素中使用</td>    </tr>    <tr>      <td>class</td>      <td>元素类名，可以配合CSS和JS使用</td>    </tr>    <tr>      <td>style</td>      <td>元素样式，给元素设置CSS样式</td>    </tr>    <tr>      <td>title</td>      <td>元素提示，一般超链接和图片用得比较多</td>    </tr>    <tr>      <td>lang</td>      <td>元素语言，给元素指定语言，很少使用</td>    </tr>  </tbody></table><p>一般来说，在<code>html</code>元素中设置<code>lang</code>属性设置语言即可，很少会在其他元素中使用<code>lang</code>属性，除非想要使用其他语言显示某个元素。</p><p>虽然这些属性是全局属性，但是在一些特殊元素上使用是没有意义的，不建议使用，也没有必要使用，比如<code>html</code>元素，以及<code>head</code>元素及其内部元素，等一些其他特殊元素。</p><p>完整的全局属性可以参考文档：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes">MDN全局属性</a></p><h2 id="9-元数据"><a href="#9-元数据" class="headerlink" title="9 元数据"></a>9 元数据</h2><h3 id="9-1-基本结构"><a href="#9-1-基本结构" class="headerlink" title="9.1 基本结构"></a>9.1 基本结构</h3><p>元数据就是描述数据的数据，对于HTML而言，元数据就是描述HTML页面的数据。</p><p>元数据的具体使用方式是在<code>head</code>元素中使用<code>meta</code>元素：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>meta</td>      <td>表示元数据</td>      <td>单标签</td>    </tr>  </tbody></table><h3 id="9-2-使用示例"><a href="#9-2-使用示例" class="headerlink" title="9.2 使用示例"></a>9.2 使用示例</h3><p>配置字符编码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置网页自动刷新：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;10;url=https://momashanhe.com&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>刷新说明：</p><ol><li>数字表示秒数，非负整数有效。</li><li>url表示地址，省略或地址无效会刷新当前页面。</li></ol><p>针对IE浏览器的兼容性配置：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;x-ua-compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>针对移动端的兼容性配置：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置网页关键字：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;英文逗号隔开的一组词语&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置网页描述信息：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;80字以内的一段话，与网站内容相关&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>针对搜索引擎爬虫配置：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;可选值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可选值如下：</p><table>  <thead>    <tr>      <th>值</th>      <th>描述</th>    </tr>  </thead>  <tbody>    <tr>      <td>index</td>      <td>要求搜索爬虫索引此页面</td>    </tr>    <tr>      <td>noindex</td>      <td>要求搜索爬虫不索引此页面</td>    </tr>    <tr>      <td>follow</td>      <td>要求搜索爬虫跟随此页面上的链接</td>    </tr>    <tr>      <td>nofollow</td>      <td>要求搜索爬虫不跟随此页面上的链接</td>    </tr>    <tr>      <td>all</td>      <td>和设置index, follow相同</td>    </tr>    <tr>      <td>none</td>      <td>和设置noindex, nofollow相同</td>    </tr>    <tr>      <td>noarchive</td>      <td>要求搜索引擎不缓存页面内容</td>    </tr>    <tr>      <td>nocache</td>      <td>是noarchive的代名词</td>    </tr>  </tbody></table><p>配置网页作者：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;momashanhe&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置网页生成工具：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;generator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Visual Studio Code&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置网页版权信息：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;2020-2050©版权所有&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整的网页元数据可以参考文档：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta">MDN元数据</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了HTML常见的元素及其特点。&lt;/p&gt;</summary>
    
    
    
    <category term="大前端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://momashanhe.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://momashanhe.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>博客文章加密</title>
    <link href="https://momashanhe.com/posts/20240314/144908/"/>
    <id>https://momashanhe.com/posts/20240314/144908/</id>
    <published>2024-03-14T06:49:08.000Z</published>
    <updated>2024-03-17T03:22:46.544Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了如何对博客文章进行加密。</p><span id="more"></span><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>插件源码地址：<br><a href="https://github.com/D0n9X1n/hexo-blog-encrypt">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p><p>安装插件：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-blog-encrypt --save</span><br></pre></td></tr></table></figure><p>然后需要经过配置，并且最好修改下页面样式，以后再说吧。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了如何对博客文章进行加密。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>HTML4入门</title>
    <link href="https://momashanhe.com/posts/20240314/143553/"/>
    <id>https://momashanhe.com/posts/20240314/143553/</id>
    <published>2024-03-14T06:35:53.000Z</published>
    <updated>2024-04-08T00:43:50.021Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了HTML相关的一些概念。</p><span id="more"></span><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h3><h4 id="1-1-1-什么是网站"><a href="#1-1-1-什么是网站" class="headerlink" title="1.1.1 什么是网站"></a>1.1.1 什么是网站</h4><p>网站是指在因特网上根据一定的规则，使用HTML等制作的用于展示特定内容相关的网页集合。</p><h4 id="1-1-2-什么是网页"><a href="#1-1-2-什么是网页" class="headerlink" title="1.1.2 什么是网页"></a>1.1.2 什么是网页</h4><p>网页是网站中的一“页”，通常是HTML格式的文件，它要通过浏览器来阅读。</p><p>网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成。通常我们看到的网页，常见以<code>.htm</code>或<code>.html</code>后缀结尾的文件，因此将其俗称为HTML文件。</p><h4 id="1-1-3-什么是HTML"><a href="#1-1-3-什么是HTML" class="headerlink" title="1.1.3 什么是HTML"></a>1.1.3 什么是HTML</h4><p>HTML全称：HyperText Markup Language（超文本标记语言），含义如下：</p><ul><li>HyperText（超文本）：指可以加入图片、声音、动画、多媒体等内容，超越了文本限制，也指可以从一个文件跳转到另一个文件，与世界各地主机的文件连接。</li><li>Markup（标记）：文本要变成超文本，就需要用到各种标记符号，包括各种元素。</li><li>Language（语言）：每一个标记的写法、读音、使用规则，组成了一个标记语言。</li></ul><p>HTML不是一种编程语言，而是一种标记语言（Markup Language），标记语言是一套标记标签（Markup Tag）。</p><h3 id="1-2-浏览器"><a href="#1-2-浏览器" class="headerlink" title="1.2 浏览器"></a>1.2 浏览器</h3><p>浏览器是网页显示、运行的平台。常用的浏览器有IE、Firefox、Chrome、Safari和Opera等，称为五大浏览器。</p><p>浏览器内核是将文件展示成网页的渲染引擎，负责读取网页内容、整理讯息、计算网页的显示方式并显示页面。</p><h3 id="1-3-国际组织"><a href="#1-3-国际组织" class="headerlink" title="1.3 国际组织"></a>1.3 国际组织</h3><h4 id="1-3-1-IETF"><a href="#1-3-1-IETF" class="headerlink" title="1.3.1 IETF"></a>1.3.1 IETF</h4><p>全称：Internet Engineering Task Force（国际互联网工程任务组），成立于1985年底，是一个权威的互联网技术标准化组织，主要负责互联网相关技术规范的研发和制定，当前绝大多数国际互联网技术标准均出自IETF。</p><p>官网：<br><a href="https://www.ietf.org/">https://www.ietf.org</a></p><h4 id="1-3-2-W3C"><a href="#1-3-2-W3C" class="headerlink" title="1.3.2 W3C"></a>1.3.2 W3C</h4><p>全称：World Wide Web Consortium（万维网联盟），创建于1994年，是目前Web技术领域，最具影<br>响力的技术标准机构。共计发布了200多项技术标准和实施指南，对互联网技术的发展和应用起到<br>了基础性和根本性的支撑作用。</p><p>官网：<br><a href="https://www.w3.org/">https://www.w3.org</a></p><h4 id="1-3-3-WHATWF"><a href="#1-3-3-WHATWF" class="headerlink" title="1.3.3 WHATWF"></a>1.3.3 WHATWF</h4><p>全称：Web Hypertext Application Technology Working Group（网页超文本应用技术工作小组），成立<br>于2004年，是一个以推动网络HTML5标准为目的而成立的组织。由Opera、Mozilla基金会、苹果，<br>等这些浏览器厂商组成。</p><p>官网：<br><a href="https://whatwg.org/">https://whatwg.org</a></p><h3 id="1-4-发展历史"><a href="#1-4-发展历史" class="headerlink" title="1.4 发展历史"></a>1.4 发展历史</h3><p>从HTML1.0开始发展，期间经历了很多版本，目前HTML的最新标准是HMTL5，具体发展史如图：<br><img src="/@image/101001/001001-114913.jpg" alt="001-发展历史"></p><h3 id="1-5-Web标准"><a href="#1-5-Web标准" class="headerlink" title="1.5 Web标准"></a>1.5 Web标准</h3><p>Web标准是由W3C组织和其他标准化组织制定的一系列标准的集合。</p><p>遵循Web标准除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点：</p><ol><li>让Web的发展前景更广阔。</li><li>内容能被更广泛的设备访问。</li><li>更容易被搜寻引擎搜索。</li><li>降低网站流量费用。</li><li>使网站更易于维护。</li><li>提高页面浏览速度。</li></ol><p>Web标准主要包括三个方面：<br>结构（Structure）用于对网页元素进行整理和分类，主要指的是HTML。<br>表现（Presentation）用于设置网页元素的版式、颜色、大小等外观样式，主要指的是CSS。<br>行为（Behavior）用于定义网页模型及编写网页交互，主要指的是JavaScript。</p><p>Web标准提出的最佳体验方案是结构、样式、行为互相分离，即结构写到HTML文件中、表现写到CSS文件中、行为写到JavaScript文件中。</p><h3 id="1-6-官方文档"><a href="#1-6-官方文档" class="headerlink" title="1.6 官方文档"></a>1.6 官方文档</h3><p>W3C官网：<br><a href="https://www.w3.org/">https://www.w3.org/</a></p><p>W3School：<br><a href="https://www.w3school.com.cn/">https://www.w3school.com.cn</a></p><p>MDN：<br><a href="https://developer.mozilla.org/">https://developer.mozilla.org</a></p><p>推荐使用MDN官方文档。</p><h2 id="2-概念"><a href="#2-概念" class="headerlink" title="2 概念"></a>2 概念</h2><h3 id="2-1-标签"><a href="#2-1-标签" class="headerlink" title="2.1 标签"></a>2.1 标签</h3><h4 id="2-1-1-定义"><a href="#2-1-1-定义" class="headerlink" title="2.1.1 定义"></a>2.1.1 定义</h4><p>标签又称元素，是HTML的基本组成单位。</p><p>标签名不区分大小写，但推荐小写，因为小写更规范。</p><p>元素分为双标签和单标签，绝大多数都是双标签：</p><div class="tabs" id="tab-tab-id-1"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-1-1">双标签</a></li><li class="tab"><a class="#tab-id-1-2">单标签</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-1-1"><p>前面的是开始标签，两个标签中间的是元素内容，后面的是结束标签，结束标签多了一个<code>/</code>符号且不可省略：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-1-2"><p>只有一个标签，不存在元素内容：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>标签后面的空格和<code>/</code>符号可以省略：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div><h4 id="2-1-2-尝试"><a href="#2-1-2-尝试" class="headerlink" title="2.1.2 尝试"></a>2.1.2 尝试</h4><p>使用鼠标右键新建文本文档，输入以下内容：</p><figure class="highlight html"><figcaption><span>hello.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello HTML<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将文本文档重命名为<code>hello.html</code>后，双击打开，即可看到创建的页面。</p><h4 id="2-1-3-基本结构"><a href="#2-1-3-基本结构" class="headerlink" title="2.1.3 基本结构"></a>2.1.3 基本结构</h4><p>一般情况下，在网页中右键，在菜单的底部可以看到<code>查看页面源代码</code>和<code>检查</code>这两个选项：</p><ul><li>查看页面源代码：可以看到程序员编写的页面源码。</li><li>检查：浏览器对页面源码经过格式化等处理后的代码。</li></ul><p>选择<code>检查</code>后，可以看到页面的基本结构：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基本结构包含的元素：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>html</td>      <td>页面中最大的元素，称为根元素</td>      <td>双标签</td>    </tr>    <tr>      <td>head</td>      <td>用于定义页面的特性，不会展示在页面上</td>      <td>双标签</td>    </tr>    <tr>      <td>title</td>      <td>用于定义页面的标题，嵌套在<code>head</code>元素中</td>      <td>双标签</td>    </tr>    <tr>      <td>body</td>      <td>用于定义页面的内容，会展示在页面上</td>      <td>双标签</td>    </tr>  </tbody></table><p>使用VSCode工具快速生成页面结构：</p><ol><li>第一步：双击打开软件。</li><li>第二步：新建文件并保存为<code>.html</code>文件。</li><li>第三步：输入<code>!</code>符号并根据提示按下<code>Tab</code>键，会自动生成基本结构。</li></ol><p>生成的页面结构如下：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此外，如果想配置网站图标，可以在存放页面的根目录中，使用<code>favicon.ico</code>图片作为网站图标。</p><h4 id="2-1-4-关系"><a href="#2-1-4-关系" class="headerlink" title="2.1.4 关系"></a>2.1.4 关系</h4><p>元素的关系可以分为两类：嵌套和并列。</p><p>嵌套指的是不同层次的元素之间的关系，将被嵌套的元素置于嵌套元素之中，要求嵌套元素必须有双标签。比如：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>嵌套的元素之间存在父子关系：</p><ul><li>父亲元素：对于<code>title</code>元素来说，<code>head</code>元素是其父亲元素。对于<code>head</code>元素来说，<code>html</code>元素是其父亲元素。</li><li>儿子元素：对于<code>head</code>元素来说，<code>title</code>元素是其儿子元素。对于<code>html</code>元素来说，<code>head</code>元素是其儿子元素。</li><li>祖先元素：对于<code>title</code>元素来说，<code>head</code>元素和<code>html</code>元素都是其祖先元素。父亲元素也是祖先元素的一种。</li><li>后代元素：对于<code>html</code>元素来说，<code>head</code>元素和<code>title</code>元素都是其后代元素。儿子元素也是后代元素的一种。</li></ul><p>并列指的是相同层次的元素之间的关系，对元素的标签无要求。比如：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并列的元素之间存在兄弟关系：</p><ul><li>兄弟元素：对于<code>body</code>元素来说，<code>head</code>元素是其兄弟元素。对于<code>head</code>元素来说，<code>body</code>元素是其兄弟元素。</li></ul><h3 id="2-2-声明"><a href="#2-2-声明" class="headerlink" title="2.2 声明"></a>2.2 声明</h3><h4 id="2-2-1-说明"><a href="#2-2-1-说明" class="headerlink" title="2.2.1 说明"></a>2.2.1 说明</h4><p>用于告知浏览器当前页面的版本。</p><p>页面的声明必须写在第一行，并且要写在<code>html</code>元素外面，即和<code>html</code>元素同级且在<code>html</code>元素上面。</p><p>格式：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE&gt;</span></span><br></pre></td></tr></table></figure><p>DOCTYPE是Document Type Declaration（文档类型声明）的缩写。</p><p>声明不是HTML标签，既不是单标签也不是双标签。</p><p>声明不区分大小写，可以按照个人习惯选择。</p><h4 id="2-2-2-HTML4"><a href="#2-2-2-HTML4" class="headerlink" title="2.2.2 HTML4"></a>2.2.2 HTML4</h4><p>在HTML4中，确切的说是在HTML4.01及之前版本中，因为基于SGML（Standard Generalized Markup Language，标准通用标记语言），声明可能会指向DTD（Document Type Definition，文档类型定义）文件，这个文件定义了文档的结构和元素规则。</p><p>HTML4.01规定了三种不同的声明：</p><ol><li>Strict：最严格，包含所有元素和属性，<code>不包括</code>表象或过时的元素，框架集<code>frameset</code>是<code>不允许</code>使用的。代码：<figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Transitional：较严格，包含所有元素和属性，<code>包括</code>表象或过时的元素，框架集<code>frameset</code>是<code>不允许</code>使用的。代码：<figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Frameset：最宽松，包含所有元素和属性，<code>包括</code>表象或过时的元素，框架集<code>frameset</code>是<code>允许</code>使用的。代码：<figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/frameset.dtd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-3-HTML5"><a href="#2-2-3-HTML5" class="headerlink" title="2.2.3 HTML5"></a>2.2.3 HTML5</h4><p>在HTML5中不再基于SGML，因此不再依赖DTD文件，而是使用更简单的声明。代码：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为声明是向下兼容的，因此可以在HTML5的声明中编写HTML4的代码，但是不能在HTML4的声明中编写HTML5的代码。</p><h3 id="2-3-属性"><a href="#2-3-属性" class="headerlink" title="2.3 属性"></a>2.3 属性</h3><p>属性用于给元素提供附加信息，在双标签中可以将属性写在开始标签中，在单标签中可以将属性写在<code>/</code>符号前。</p><p>属性一般由属性名和属性值组成，某些特殊属性也可以只有属性名，其属性值可以省略：</p><div class="tabs" id="tab-tab-id-2"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-2-1">指定属性值</a></li><li class="tab"><a class="#tab-id-2-2">省略属性值</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-2-1"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-2-2"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">disable</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div><p>注意：</p><ol><li>不同的元素有不同的属性，存在适用所有元素的通用属性，比如<code>id</code>属性用于在页面上作为元素的唯一标识。</li><li>属性名和属性值都是W3C规定好的，不能乱写。</li><li>属性名和属性值不区分大小写，推荐使用小写。</li><li>属性值的双引号也可以写成单引号，如果没有空格等特殊字符也可以不写，推荐使用双引号。</li><li>元素中如果出现同名属性，后面的属性会失效。</li></ol><h3 id="2-4-语言"><a href="#2-4-语言" class="headerlink" title="2.4 语言"></a>2.4 语言</h3><p>设置页面语言可以让浏览器显示对应的翻译提示，也可以方便搜索引擎的优化。</p><p>语言可以在<code>html</code>元素中使用<code>lang</code>属性设置，写法如下：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他语言的设置：</p><ul><li>zh-CN：中文-中国大陆（简体中文）</li><li>zh-TW：中文-中国台湾（繁体中文）</li><li>zh：中文</li><li>en-US：英语-美国</li><li>en-GB：英语-英国</li></ul><h3 id="2-5-字符集"><a href="#2-5-字符集" class="headerlink" title="2.5 字符集"></a>2.5 字符集</h3><p>计算机本身是二进制的，为了方便使用，在写入时会对输入的数据进行编码，在读取时会对输出的数据进行解码。</p><p>在编码和解码时，需要使用字符集进行规范，解码需要使用和编码相同的字符集，否则会导致最终读取出来的内容产生乱码。</p><p>常见的字符集如下：</p><ul><li>ASCII：大写字母、小写字母、数字、一些符号，共计128个。</li><li>ISO 8859-1：在ASCII基础上，扩充了一些希腊字符等，共计是256个。</li><li>GB2312：继续扩充，收录了6763个常用汉字和682个字符。</li><li>GBK：收录了的汉字和符号达到20000多个，支持繁体中文。</li><li>UTF-8：包含世界上所有的文字与符号。建议使用。</li></ul><p>可以在<code>head</code>元素中通过<code>meta</code>元素配合<code>charset</code>属性指定页面的字符集，让浏览器使用这种字符集对页面内容进行解析：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-6-注释"><a href="#2-6-注释" class="headerlink" title="2.6 注释"></a>2.6 注释</h3><p>使用注释可以对页面源码进行解释和说明，并且注释在展示的时候会被过滤掉，但是查看源码是可以看到的。</p><p>格式：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释内容，在页面上不可见 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-基础"><a href="#3-基础" class="headerlink" title="3 基础"></a>3 基础</h2><h3 id="3-1-排版元素"><a href="#3-1-排版元素" class="headerlink" title="3.1 排版元素"></a>3.1 排版元素</h3><p>排版元素用于规范页面内容的显示，如下：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>h1~h6</td>      <td>用于标识页面内容的6个标题级别，从h1到h6级别越来越低，元素里不能嵌套其他排版元素</td>      <td>双标签</td>    </tr>    <tr>      <td>p</td>      <td>用于表示页面内容的段落，元素里不能嵌套其他排版元素</td>      <td>双标签</td>    </tr>    <tr>      <td>div</td>      <td>无特殊含义，用于整体布局，元素里可以嵌套其他元素，包括排版元素</td>      <td>双标签</td>    </tr>    <tr>      <td>span</td>      <td>无特殊含义，用于局部修饰，元素里不能嵌套其他排版元素</td>      <td>双标签</td>    </tr>  </tbody></table><h3 id="3-2-语义化"><a href="#3-2-语义化" class="headerlink" title="3.2 语义化"></a>3.2 语义化</h3><p>语义指的是元素的含义，某些元素是有特定含义的，比如<code>p</code>元素的含义是表示段落，某些元素是没有特定含义的，比如<code>span</code>元素。</p><p>语义化元素指的是具有特定含义的元素，这种元素有一定的优势：</p><ol><li>代码结构清晰，方便阅读，有利于团队合作开发。</li><li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以语义的方式来渲染网页。</li><li>有利于搜索引擎优化（SEO）。</li></ol><p>在使用语义化元素时，应该关注元素特定含义，不应该关注元素样式，因为样式可以通过CSS进行调整。</p><p>常用的语义化元素：</p><table>  <thead>    <tr>      <th>标签名</th>      <th>说明</th>      <th>单双</th>    </tr>  </thead>  <tbody>    <tr>      <td>br</td>      <td>换行，如果只想增加段落间隔，建议使用CSS实现</td>      <td>单标签</td>    </tr>    <tr>      <td>hr</td>      <td>分隔，如果只想使用水平线，建议使用CSS实现</td>      <td>单标签</td>    </tr>    <tr>      <td>pre</td>      <td>按原文显示，一般用于在页面中嵌入大段代码</td>      <td>双标签</td>    </tr>  </tbody></table><h3 id="3-3-元素区块"><a href="#3-3-元素区块" class="headerlink" title="3.3 元素区块"></a>3.3 元素区块</h3><p>在页面上只能独占一行的元素被称为块级元素，比如<code>div</code>元素，在页面上不需要独占一行的元素被称为行内元素，比如<code>span</code>元素。</p><p>排版元素属于块级元素，是独占一行的。</p><p>一般情况下，在块级元素中可以嵌套块级元素和行内元素，在行内元素中只能嵌套行内元素，但某些特殊的块级元素不能嵌套：</p><ol><li>标题元素<code>h1~h6</code>中不支持互相嵌套，也不建议在标题中嵌套其他块级元素。</li><li>段落元素<code>p</code>中不支持其他块级元素，建议分段并在段落中使用其他块级元素。</li></ol><h3 id="3-4-实体"><a href="#3-4-实体" class="headerlink" title="3.4 实体"></a>3.4 实体</h3><h4 id="3-4-1-介绍"><a href="#3-4-1-介绍" class="headerlink" title="3.4.1 介绍"></a>3.4.1 介绍</h4><p>在HTML中存在一些预留字符，比如标签的<code>&lt;</code>字符和<code>&gt;</code>字符。</p><p>浏览器默认会将预留字符识别为标签，如果想要在页面内容里使用预留字符，就需要用特殊形式的内容来表示这些预留字符，这种特殊形式的内容称为实体。</p><p>比如想要在页面中显示这句话：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我记得<span class="tag">&lt;<span class="name">div</span>&gt;</span>是块级元素</span><br></pre></td></tr></table></figure><p>如果在代码中直接写的话，会导致页面将<code>&lt;div&gt;</code>解析为标签，而不是文本内容，解决办法就是使用实体替换预留字符。</p><p>再比如想要在页面中显示多个空格：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里有   三个空格</span><br></pre></td></tr></table></figure><p>但是页面实际上会将多个空格合并为一个空格，想要强制显示多个空格，就需要使用实体。</p><h4 id="3-4-2-规则"><a href="#3-4-2-规则" class="headerlink" title="3.4.2 规则"></a>3.4.2 规则</h4><p>实体的规则：</p><ol><li>以<code>&amp;</code>符号开始。</li><li>以<code>;</code>符号结束。</li><li>如果使用实体名称，格式为<code>&amp;实体名称;</code>，如果使用实体编号，格式为<code>&amp;#实体编号;</code>。</li></ol><p>实体名称更方便记忆，能使用实体名称就尽量使用实体名称，但是需要注意：</p><ol><li>实体名称对大小写敏感。</li><li>并不是所有的预留字符都有实体名称。</li><li>部分浏览器可能不支持某些实体名称。</li></ol><h4 id="3-4-3-常见"><a href="#3-4-3-常见" class="headerlink" title="3.4.3 常见"></a>3.4.3 常见</h4><p>常见的预留字符对应的实体名称和实体编号如下：</p><table>  <thead>    <tr>      <th>预留字符</th>      <th>描述</th>      <th>实体名称</th>      <th>实体编号</th>    </tr>  </thead>  <tbody>    <tr>      <td>&#38;</td>      <td>和</td>      <td>amp</td>      <td>38</td>    </tr>    <tr>      <td>&#60;</td>      <td>小于号</td>      <td>lt</td>      <td>60</td>    </tr>    <tr>      <td>&#62;</td>      <td>大于号</td>      <td>gt</td>      <td>62</td>    </tr>    <tr>      <td>&#160;</td>      <td>空格</td>      <td>nbsp</td>      <td>160</td>    </tr>    <tr>      <td>&#165;</td>      <td>元</td>      <td>yen</td>      <td>165</td>    </tr>    <tr>      <td>&#169;</td>      <td>版权</td>      <td>copy</td>      <td>169</td>    </tr>    <tr>      <td>&#174;</td>      <td>商标</td>      <td>reg</td>      <td>174</td>    </tr>    <tr>      <td>&#215;</td>      <td>乘号</td>      <td>times</td>      <td>215</td>    </tr>    <tr>      <td>&#247;</td>      <td>除号</td>      <td>divide</td>      <td>247</td>    </tr>    <tr>      <td>&#34;</td>      <td>双引号</td>      <td>quot</td>      <td>34</td>    </tr>    <tr>      <td>&#39;</td>      <td>单引号</td>      <td>无</td>      <td>39</td>    </tr>    <tr>      <td>&#96;</td>      <td>反引号</td>      <td>无</td>      <td>96</td>    </tr>  </tbody></table><p>更多的对应关系可以参考文档：<br><a href="https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references">WHATWG实体</a></p><h4 id="3-4-4-解决"><a href="#3-4-4-解决" class="headerlink" title="3.4.4 解决"></a>3.4.4 解决</h4><p>回到之前的问题，可以使用下面的代码实现：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我记得<span class="symbol">&amp;lt;</span>div<span class="symbol">&amp;gt;</span>是块级元素</span><br><span class="line">这里有<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>三个空格</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了HTML相关的一些概念。&lt;/p&gt;</summary>
    
    
    
    <category term="大前端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://momashanhe.com/tags/HTML/"/>
    
    <category term="CSS" scheme="https://momashanhe.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub图床存放博客静态资源</title>
    <link href="https://momashanhe.com/posts/20240310/141520/"/>
    <id>https://momashanhe.com/posts/20240310/141520/</id>
    <published>2024-03-10T06:15:20.000Z</published>
    <updated>2024-04-03T03:10:22.910Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了如何使用GitHub图床存放静态资源，并对静态资源的获取进行加速。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><p>博客暂时还没有服务器进行备案，也不想使用别人的图床，就只能自己打一个比较简陋的了。</p><p>使用GitHub作为图床，但是需要注意不要超过1G容量，超过1G的时候需要想办法进行拆分。</p><p>使用NPM加速访问，实现CDN的效果。</p><h2 id="2-GitHub"><a href="#2-GitHub" class="headerlink" title="2 GitHub"></a>2 GitHub</h2><p>GitHub官网：<br><a href="https://github.com/">https://github.com/</a></p><p>如果没有注册过GitHub的话，需要注册一个账号。</p><p>创建一个用于存储静态资源的仓库。</p><p>点击右上角个人头像，在下拉列表中点击<code>Settings</code>进入设置界面。</p><p>点击左侧菜单栏底部的<code>Developer Settings</code>进入开发者界面。</p><p>点击<code>Personal access tokens</code>选项，然后点击<code>Tokens (classic)</code>菜单，并在右侧点击<code>Generate new token</code>下拉列表中的<code>Generate new token (classic)</code>按钮：<br><img src="/@image/001002/007001-132103.jpg" alt="001-创建Token"></p><p>在<code>Note</code>中输入对Token使用的描述，把<code>Expiration</code>设置为<code>No expiration</code>永不过期，然后给下面的<code>Select scopes</code>勾选<code>repo</code>选框：<br><img src="/@image/001002/007002-135621.jpg" alt="002-勾选作用域"></p><p>最后点击底部的<code>Generate token</code>创建Token，并将页面上展示的Token进行复制保存，这个Token只会出现这一次，忘记只能重新生成。</p><p>这个Token后面会在PicGo里配置。</p><p>将静态资源文件上传到仓库里。</p><h2 id="3-NPM"><a href="#3-NPM" class="headerlink" title="3 NPM"></a>3 NPM</h2><h3 id="3-1-注册"><a href="#3-1-注册" class="headerlink" title="3.1 注册"></a>3.1 注册</h3><p>NPM官网：<br><a href="https://www.npmjs.com/">https://www.npmjs.com/</a></p><p>注册NPM账号：<br><img src="/@image/001002/007003-140338.jpg" alt="003-注册NPM"></p><p>新账号注册后需要配置2FA认证：</p><figure class="highlight txt"><figcaption><span>txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You don’t have two-factor authentication (2FA) enabled on your account. Configure 2FA or visit our docs to learn more.</span><br></pre></td></tr></table></figure><p>点击2FA认证链接，选择使用<code>Authenticator app</code>的方式认证：<br><img src="/@image/001002/007004-141025.jpg" alt="004-2FA认证"></p><p>在手机上下载<code>Authenticator</code>并安装，打开后选择<code>扫描QR码</code>然后扫描网页上的二维码，将生成的一次性密码代码输入底部的密码框中。</p><p>保存好生成的恢复代码，这里只出现一次，忘记需要重新生成。</p><h3 id="3-2-本地仓库"><a href="#3-2-本地仓库" class="headerlink" title="3.2 本地仓库"></a>3.2 本地仓库</h3><p>进入静态资源的本地仓库，执行以下命名切换回原生源：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><p>如果是第一次使用，需要执行命令添加本地NPM用户配置，输入账户和密码以及邮箱即可：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser</span><br></pre></td></tr></table></figure><p>如果不是第一次使用，执行登录命令，输入账户和密码以及邮箱即可：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><p>如果命令行提示需要登录，在下面的网址里完成登录即可：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create your account at:</span><br></pre></td></tr></table></figure><p>在打包前准备好包名，需要事先确认包名没有重复，可以在NPM官网搜索相应包名，搜不到就说明还没被占用。</p><p>执行初始化命令，将仓库打包，按照指示进行配置：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>根据实际情况填写，红框内的使用默认就好：<br><img src="/@image/001002/007005-141236.jpg" alt="005-包初始化"></p><p>注意名称不要使用带有年月日的数字，不然会被认为垃圾名称发布失败，尽量是用<code>-</code>短横线分隔。</p><p>最后输入<code>yes</code>即可。</p><p>打包以后就可以发布了，执行命令：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --otp=123456</span><br></pre></td></tr></table></figure><p>命令说明：</p><blockquote><p>otp：需要输入Authenticator生成的一次性密码。</p></blockquote><p>发布成功提示：<br><img src="/@image/001002/007006-141308.jpg" alt="006-发布成功"></p><p>发布成功后，可以寻找NPM的节点使用，比如可以按照下面的方式使用：</p><figure class="highlight plaintext"><figcaption><span>url</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://unpkg.com/:package@:version/:file</span><br></pre></td></tr></table></figure><h3 id="3-3-升级仓库"><a href="#3-3-升级仓库" class="headerlink" title="3.3 升级仓库"></a>3.3 升级仓库</h3><p>以后使用静态资源的时候，现在本地试用，然后将静态资源同步到GitHub上，再发布NPM升级包。</p><p>使用命令增加NPM版本，版本由3位组成，从左到右分别是：</p><blockquote><p>major：主要版本，左边首位，不会向后兼容的重大改动。<br>minor：次要版本，中间位，向后兼容的新增功能。<br>patch：补丁版本，右边首位，向后兼容的缺陷修复。</p></blockquote><p>如果需要更新补丁版本，执行如下命令即可，会自动给版本的<code>patch</code>部分加一：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm version patch</span><br></pre></td></tr></table></figure><p>然后执行发布命令：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --otp=123456</span><br></pre></td></tr></table></figure><p>发布成功后修改使用的版本就可以了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了如何使用GitHub图床存放静态资源，并对静态资源的获取进行加速。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://momashanhe.com/tags/GitHub/"/>
    
    <category term="NPM" scheme="https://momashanhe.com/tags/NPM/"/>
    
    <category term="PicGo" scheme="https://momashanhe.com/tags/PicGo/"/>
    
  </entry>
  
  <entry>
    <title>博客图床对比</title>
    <link href="https://momashanhe.com/posts/20240310/113145/"/>
    <id>https://momashanhe.com/posts/20240310/113145/</id>
    <published>2024-03-10T03:31:45.000Z</published>
    <updated>2024-03-17T03:22:39.835Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了不同图床之间的区别。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-对比"><a href="#1-对比" class="headerlink" title="1 对比"></a>1 对比</h2><p>图床一般用来加速对博客图片的访问，实际上是一种专门存储图片的服务器，大致分为：个人图床，平台图床。</p><h3 id="1-1-个人图床"><a href="#1-1-个人图床" class="headerlink" title="1.1 个人图床"></a>1.1 个人图床</h3><p>由个人搭建的图床，搭建之后将其公开，允许公众使用的图床。</p><p>代表：<br><a href="https://sm.ms/">SM.MS图床</a>：土豪兽兽建的图床，2015年开始正式运营，烧风自建的CDN，支持HTTPS地址。<br><a href="https://imgse.com/">路过图床</a>：老牌图床，2011年开放，提供全球CDN，支持HTTPS地址。<br><a href="https://7bu.top/login">去不图床</a>：杜老师创建的图床，部署在腾讯云上，需要搭配CDN。</p><h3 id="1-2-平台图床"><a href="#1-2-平台图床" class="headerlink" title="1.2 平台图床"></a>1.2 平台图床</h3><p>由大型服务商搭建的图床，安全性要比个人图床好，但也更贵一些，可能会有一些限制。</p><p>代表：<br><a href="https://github.com/">GitHub</a>：支持存储1G以内图片，稳定可靠，需要额外配置CDN。<br><a href="https://cloud.tencent.com/">腾讯云</a>：稳定可靠，就是贵。<br><a href="https://cn.aliyun.com/">阿里云</a>：稳定可靠，就是贵。<br><a href="https://www.upyun.com/">又拍云</a>：需要在网站底部添加LOGO和官网链接，每月10G免费空间，每月10G免费CDN。<br><a href="https://www.qiniu.com/">七牛云</a>：免费流量不支持HTTPS地址，每月10G免费空间，每月15G免费CDN。<br><a href="https://www.dogecloud.com/">多吉云</a>：域名需要在服务器进行ICP备案，每月10G免费空间，每月20G免费CDN。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了不同图床之间的区别。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>给博客加装Waline评论</title>
    <link href="https://momashanhe.com/posts/20240309/100821/"/>
    <id>https://momashanhe.com/posts/20240309/100821/</id>
    <published>2024-03-09T02:08:21.000Z</published>
    <updated>2024-03-18T00:36:11.868Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了通过使用LeanCloud数据库和Vercel服务器将Waline评论部署到Hexo博客。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-Waline评论"><a href="#1-Waline评论" class="headerlink" title="1 Waline评论"></a>1 Waline评论</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>详情查看官方文档：<br><a href="https://waline.js.org/guide/get-started/">Waline官方文档 - 快速上手</a></p><h2 id="2-使用LeanCloud"><a href="#2-使用LeanCloud" class="headerlink" title="2 使用LeanCloud"></a>2 使用LeanCloud</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><p>LeanCloud是针对移动应用的一站式云端服务，专注于为应用开发者提供工具和平台。提供包括LeanStorage数据存储、LeanMessage通信服务、LeanAnalytics统计分析、LeanModules拓展模块等四大类型的后端云服务，加速应用开发。</p><p>加装Waline评论主要使用LeanCloud的LeanStorage数据存储功能。</p><p>LeanCloud的中文官网：<br><a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></p><h3 id="2-2-注册账号并创建应用"><a href="#2-2-注册账号并创建应用" class="headerlink" title="2.2 注册账号并创建应用"></a>2.2 注册账号并创建应用</h3><p>注册LeanCloud账号，分为中国大陆版和国际版，区别是中国大陆版需要绑定手机、实名认证、备案域名，国际版不需要，这里注册国际版就能满足要求。</p><p>国际版注册链接：<br><a href="https://console.leancloud.app/register">https://console.leancloud.app/register</a></p><p>输入注册信息，然后在邮箱中验证邮件完成注册。</p><p>点击<code>创建应用</code>并选择免费的开发版，创建用于Waline的应用：<br><img src="/@image/001002/005001-082344.jpg" alt="001-创建应用"></p><p>进入应用，在左侧的导航栏内进入<code>设置</code>下的<code>应用凭证</code>界面，记录认证信息以便后续使用：<br><img src="/@image/001002/005002-083612.jpg" alt="002-应用凭证"></p><h2 id="3-使用Vercel"><a href="#3-使用Vercel" class="headerlink" title="3 使用Vercel"></a>3 使用Vercel</h2><h3 id="3-1-创建项目"><a href="#3-1-创建项目" class="headerlink" title="3.1 创建项目"></a>3.1 创建项目</h3><p>创建账户并登录到Vercel，在Waline提供的文档里找到快速创建Vercel项目的链接：<br><a href="https://vercel.com/new/clone?repository-url=https://github.com/walinejs/waline/tree/main/example">部署Waline到Vercel</a></p><p>输入GitHub项目名称后会自动在GitHub上创建项目，然后会在Vercel上自动部署，首次部署后需要设置环境变量。</p><h3 id="3-2-配置项目"><a href="#3-2-配置项目" class="headerlink" title="3.2 配置项目"></a>3.2 配置项目</h3><p>进入刚刚创建的项目界面，切换到<code>Settings</code>标签。</p><p>在左侧导航栏点击<code>Environment Variables</code>设置，配置<code>LEAN_ID</code>、<code>LEAN_KEY</code>、<code>LEAN_MASTER_KEY</code>三个环境变量，值为上面LeanCloud里的应用凭证里的认证信息：<br><img src="/@image/001002/005003-083853.jpg" alt="003-设置环境变量"></p><blockquote><p>如果使用LeanCloud国内版，需要额外配置<code>LEAN_SERVER</code>环境变量，值为绑定的域名。</p></blockquote><p>切换到<code>Deployments</code>标签，点击任意一项后面的<code>...</code>并在下拉选项中选择<code>Redeploy</code>，点击弹出界面下方的<code>Redeploy</code>重新部署。</p><p>在<code>Domains</code>中的<code>https://xxx.vercel.app</code>地址即为环境ID。</p><h2 id="4-前端部署"><a href="#4-前端部署" class="headerlink" title="4 前端部署"></a>4 前端部署</h2><h3 id="4-1-选择评论系统"><a href="#4-1-选择评论系统" class="headerlink" title="4.1 选择评论系统"></a>4.1 选择评论系统</h3><p>在主题的配置文件中选择Waline作为评论系统。</p><p>特殊配置参考官方文档即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了通过使用LeanCloud数据库和Vercel服务器将Waline评论部署到Hexo博客。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="Vercel" scheme="https://momashanhe.com/tags/Vercel/"/>
    
    <category term="LeanCloud" scheme="https://momashanhe.com/tags/LeanCloud/"/>
    
    <category term="Waline" scheme="https://momashanhe.com/tags/Waline/"/>
    
  </entry>
  
  <entry>
    <title>给博客加装Twikoo评论</title>
    <link href="https://momashanhe.com/posts/20240303/152102/"/>
    <id>https://momashanhe.com/posts/20240303/152102/</id>
    <published>2024-03-03T07:21:02.000Z</published>
    <updated>2024-03-18T00:36:11.868Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了通过使用MongoDB数据库和Vercel服务器将Twikoo评论部署到Hexo博客。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-Twikoo评论"><a href="#1-Twikoo评论" class="headerlink" title="1 Twikoo评论"></a>1 Twikoo评论</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>详情查看官方文档：<br><a href="https://twikoo.js.org/quick-start.html">Twikoo官方文档 - 快速上手</a></p><h2 id="2-使用MongoDB"><a href="#2-使用MongoDB" class="headerlink" title="2 使用MongoDB"></a>2 使用MongoDB</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><p>MongoDB是一款流行的开源文档型数据库，用于存储文档类型的数据，比如博客产生的评论。</p><p>MongoDB的中文官网：<br><a href="https://www.mongodb.com/zh-cn/">https://www.mongodb.com/zh-cn/</a></p><p>如果有云服务器，可以在服务器上使用MongoDB本地数据库，如果没有云服务器，可以使用MongoDB Atlas云数据库。</p><h3 id="2-2-注册账号并创建集群"><a href="#2-2-注册账号并创建集群" class="headerlink" title="2.2 注册账号并创建集群"></a>2.2 注册账号并创建集群</h3><p>注册MongoDB账号，然后在邮箱中验证邮件完成注册。</p><p>在<code>Overview</code>界面中可以设置组织名和项目名，然后创建一个集群：<br><img src="/@image/001002/004001-141923.jpg" alt="001-创建集群"></p><p>在区域选择界面，选择免费的，提供商Provider选择<code>AWS</code>亚马逊即可，区域Region选择<code>N. Virginia (us-east-1)</code>弗吉尼亚州，也可以选择其他的。</p><p>继续设置Name集群名称，默认使用<code>Cluster0</code>作为集群名称，可以自定义，一旦设定不可修改。</p><p>继续设置Tag标签，这是可选的。</p><p>点击页面下方的<code>Create</code>创建免费集群。</p><h3 id="2-3-创建用户"><a href="#2-3-创建用户" class="headerlink" title="2.3 创建用户"></a>2.3 创建用户</h3><p>进入<code>Database Access</code>界面，创建用户。</p><p>选择<code>Password</code>作为认证方式，输入用户和密码，这个用户是用来登录云数据库的，因此密码尽量设置的难一些：<br><img src="/@image/001002/004002-142832.jpg" alt="002-创建用户"></p><p>继续设置用户权限，点击<code>Add Built In Role</code>并选择<code>Atlas Admin</code>选项：<br><img src="/@image/001002/004003-143613.jpg" alt="003-设置用户角色"></p><p>点击页面下方的<code>Add User</code>创建用户。</p><h3 id="2-4-设置IP地址"><a href="#2-4-设置IP地址" class="headerlink" title="2.4 设置IP地址"></a>2.4 设置IP地址</h3><p>进入<code>Network Access</code>界面，添加能访问云数据库的IP地址。</p><p>点击<code>Allow Access from Anywhere</code>或者在<code>Access List Entry</code>输入<code>0.0.0.0/0</code>表示允许所有IP地址的连接，点击<code>Confirm</code>保存设置：<br><img src="/@image/001002/004004-143955.jpg" alt="004-添加IP地址"></p><h3 id="2-5-查看如何连接"><a href="#2-5-查看如何连接" class="headerlink" title="2.5 查看如何连接"></a>2.5 查看如何连接</h3><p>进入<code>Database</code>界面，点击集群后面的<code>Connect</code>建立连接，连接方式选择<code>Drivers</code>使用驱动连接：<br><img src="/@image/001002/004005-144127.jpg" alt="005-创建连接"></p><p>使用Driver默认的<code>Node.js</code>作为驱动，使用Version默认的<code>5.5 or later</code>作为版本：<br><img src="/@image/001002/004006-144638.jpg" alt="006-配置连接"></p><p>复制下方<code>mongodb+srv</code>开头的字符串，并将<code>&lt;password&gt;</code>修改为创建用户时设置的密码，将这个数据库连接字符串复制并保存，后面需要用到。</p><p>点击页面下方的<code>Close</code>关闭退出即可。</p><h2 id="3-使用Vercel"><a href="#3-使用Vercel" class="headerlink" title="3 使用Vercel"></a>3 使用Vercel</h2><h3 id="3-1-创建项目"><a href="#3-1-创建项目" class="headerlink" title="3.1 创建项目"></a>3.1 创建项目</h3><p>创建账户并登录到Vercel，在Twikoo提供的文档里找到快速创建Vercel项目的链接：<br><a href="https://vercel.com/import/project?template=https://github.com/twikoojs/twikoo/tree/main/src/server/vercel-min">部署Twikoo到Vercel</a></p><p>输入GitHub项目名称后会自动在GitHub上创建项目，然后会在Vercel上自动部署，首次部署后会提示需要设置<code>MONGODB_URI</code>环境变量。</p><h3 id="3-2-配置项目"><a href="#3-2-配置项目" class="headerlink" title="3.2 配置项目"></a>3.2 配置项目</h3><p>进入刚刚创建的项目界面，切换到<code>Settings</code>标签。</p><p>在左侧导航栏点击<code>Environment Variables</code>设置，在Key中输入<code>MONGODB_URI</code>，在Value中输入前面设置MongoDB保存的数据库连接字符串，点击<code>Save</code>保存：<br><img src="/@image/001002/004007-145352.jpg" alt="007-设置环境变量"></p><p>在左侧导航栏点击<code>Environment Variables</code>设置，将<code>Vercel Authentication</code>设置为<code>Disable</code>，点击<code>Save</code>保存，这是关闭对项目的登录保护，支持任何人访问项目：<br><img src="/@image/001002/004008-150308.jpg" alt="008-关闭登录保护"></p><p>切换到<code>Deployments</code>标签，点击任意一项后面的<code>...</code>并在下拉选项中选择<code>Redeploy</code>，点击弹出界面下方的<code>Redeploy</code>重新部署，如果环境配置正确，可以看到提示：<br><img src="/@image/001002/004009-151026.jpg" alt="009-部署成功"></p><p>在<code>Domains</code>中的<code>https://xxx.vercel.app</code>地址即为环境ID。</p><h2 id="4-前端部署"><a href="#4-前端部署" class="headerlink" title="4 前端部署"></a>4 前端部署</h2><h3 id="4-1-选择评论系统"><a href="#4-1-选择评论系统" class="headerlink" title="4.1 选择评论系统"></a>4.1 选择评论系统</h3><p>在主题的配置文件中选择Twikoo作为评论系统。</p><p>特殊配置参考官方文档即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了通过使用MongoDB数据库和Vercel服务器将Twikoo评论部署到Hexo博客。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="Vercel" scheme="https://momashanhe.com/tags/Vercel/"/>
    
    <category term="MongoDB" scheme="https://momashanhe.com/tags/MongoDB/"/>
    
    <category term="Twikoo" scheme="https://momashanhe.com/tags/Twikoo/"/>
    
  </entry>
  
  <entry>
    <title>博客评论系统对比</title>
    <link href="https://momashanhe.com/posts/20240303/131251/"/>
    <id>https://momashanhe.com/posts/20240303/131251/</id>
    <published>2024-03-03T05:12:51.000Z</published>
    <updated>2024-03-31T10:13:06.203Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了不同评论系统之间的区别。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-对比"><a href="#1-对比" class="headerlink" title="1 对比"></a>1 对比</h2><p>Hexo支持的评论系统有很多，大致分为：GitHub系列，Vercel系列，云服务器系列。</p><h3 id="1-1-GitHub系列"><a href="#1-1-GitHub系列" class="headerlink" title="1.1 GitHub系列"></a>1.1 GitHub系列</h3><p>这种方式基于GitHub，使用Discussions功能或者Issue功能实现评论。</p><p>代表：<br><a href="https://giscus.app/zh-CN">Giscus</a>：基于GitHub的Discussions功能。<br><a href="https://gitalk.github.io/">Gitalk</a>：基于GitHub的Issue功能。<br><a href="https://beaudar.lipk.org/">Beaudar</a>：基于GitHub的Issue功能。<br><a href="https://utteranc.es/">Utterances</a>：基于GitHub的Issue功能。</p><p>优点是使用简单，不用注册额外数据库和服务器。</p><p>缺点是数据管理不方便，不能通过数据库维护评论。</p><p>出于数据管理方面的考虑，不太推荐这种方式。</p><h3 id="1-2-Vercel系列"><a href="#1-2-Vercel系列" class="headerlink" title="1.2 Vercel系列"></a>1.2 Vercel系列</h3><p>这种方式基于Vercel服务器，借助免费版的Vercel服务器，以及免费版的云数据库，将评论系统部署到Vercel服务器，将评论存储到数据库中。</p><p>代表：<br><a href="https://twikoo.js.org/">Twikoo</a>：支持多种部署方式，支持自动填写浏览数，支持获取评论数。<br><a href="https://waline.js.org/">Waline</a>：支持多种部署方式，支持自动填写浏览数和评论数。</p><p>优点是免费，免费版的资源足够个人使用了，而且有一些额外功能，比如统计浏览数和评论数。</p><p>缺点是需要注册相关账户，使用额外功能需要进行额外配置。</p><p>在不考虑购买服务器的情况下，推荐这种方式。</p><h3 id="1-3-云服务器系列"><a href="#1-3-云服务器系列" class="headerlink" title="1.3 云服务器系列"></a>1.3 云服务器系列</h3><p>这种方式基于云服务器，需要购买云服务器资源，然后在云服务器上安装数据库，将评论系统部署到云服务器，将评论存储到数据库中。</p><p>代表：<br><a href="https://artalk.js.org/">Artalk</a>：部署在服务器上，功能强大的评论系统。</p><p>优点是安全，评论系统提供的功能更为强大。</p><p>缺点是需要购买云服务器资源，有一定的开销，并且需要对数据库和服务器有一定的了解。</p><p>不差钱的情况下，推荐这种方式。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了不同评论系统之间的区别。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用Vercel托管博客</title>
    <link href="https://momashanhe.com/posts/20240303/112321/"/>
    <id>https://momashanhe.com/posts/20240303/112321/</id>
    <published>2024-03-03T03:23:21.000Z</published>
    <updated>2024-03-18T00:36:11.867Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了如何将博客托管到Vercel云平台。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-使用Vercel"><a href="#1-使用Vercel" class="headerlink" title="1 使用Vercel"></a>1 使用Vercel</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>Vercel是一个云服务平台，可以用于部署静态网站，也用于部署一些没有接口数据交互的动态网站。</p><p>对于个人博客，在Vercel上部署类似于在GitHub Pages上进行部署，但是Vercel的访问速度要比GitHub Pages好太多，因此许多博主都将博客部署在Vercel上。</p><p>Vercel的官网：<br><a href="https://vercel.com/">https://vercel.com/</a></p><h3 id="1-2-注册"><a href="#1-2-注册" class="headerlink" title="1.2 注册"></a>1.2 注册</h3><p>在注册时选择私人目的，不要选择商业目的：<br><img src="/@image/001002/002001-101536.jpg" alt="001-注册Vercel"></p><p>选择邮箱注册，在邮箱收到链接后验证完成注册。</p><h3 id="1-3-部署"><a href="#1-3-部署" class="headerlink" title="1.3 部署"></a>1.3 部署</h3><div class="tabs" id="tab-tab-id-1"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-1-1">1. 通过本地手动部署</a></li><li class="tab"><a class="#tab-id-1-2">2. 通过GitHub Pages博客项目自动部署</a></li><li class="tab"><a class="#tab-id-1-3">3. 通过GitHub博客源码项目自动部署</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-1-1"><p>这种方式不需要访问GitHub，是通过本地命令的方式进行部署的。</p><p>类似于将本地博客部署到GitHub Pages需要安装插件，将本地博客部署到Vercel也需要安装插件。</p><p>在博客目录打开bash命令行，安装Vercel插件，需要进行全局安装：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vercel -g</span><br></pre></td></tr></table></figure><p>执行命令将博客部署到平台，首次执行会登录Vercel平台，然后进行一些设置，可以直接回车使用默认设置：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vercel</span><br></pre></td></tr></table></figure><p>部署完成后会提示生成的链接，通过链接可以访问博客。</p><p>还有一些常用命令，可以在官网学习。</p><p>推荐方式之一，从本地可以直接部署到Vercel平台，简单快速。</p></div><div class="tab-pane" id="tab-id-1-2"><p>进入Vercel项目管理界面，打开<code>Overview</code>并在右侧点击<code>Add New...</code>下拉列表中的<code>Project</code>选项：<br><img src="/@image/001002/002002-102813.jpg" alt="002-添加项目"></p><p>在导入项目管理界面点击<code>Continue with GitHub</code>并在弹出的界面上完成GitHub授权：<br><img src="/@image/001002/002003-103618.jpg" alt="003-导入GitHub项目"></p><p>在导入项目管理界面可以看到刚刚导入的项目，点击项目后面的<code>Install</code>并在弹出的界面上选择<code>Only select repositories</code>选项，在<code>Select repositories</code>下拉列表中选择GitHub Pages博客项目，点击<code>Install</code>执行安装，输入GitHub密码将项目从GitHub复制到Vercel上。</p><p>在导入项目管理界面点击项目右侧的<code>Import</code>，进入设置和部署界面：<br><img src="/@image/001002/002004-104528.jpg" alt="004-部署项目"></p><ol><li>设置Vercel中的项目名，可以使用默认的。</li><li>设置框架，自动识别为Other框架，可以使用默认的，因为项目中只有静态文件，不需要使用框架部署。</li><li>检查并设置部署命令，可以使用默认配置，点击<code>Deploy</code>在Vercel上进行部署。</li></ol><p>等到部署结束，会跳转到祝贺页面，能够看到博客的缩略图，点击即可通过Vercel提供的链接访问博客。</p><p>当对GitHub Pages博客项目进行推送时，会触发Vercel的自动部署。</p><p>推荐方式之一，不需要对现有流程进行更改，不需要考虑在Vercel上部署带来的一系列问题。</p></div><div class="tab-pane" id="tab-id-1-3"><p>进入Vercel项目管理界面，打开<code>Overview</code>并在右侧点击<code>Add New...</code>下拉列表中的<code>Project</code>选项：<br><img src="/@image/001002/002002-102813.jpg" alt="002-添加项目"></p><p>在导入项目管理界面点击<code>Continue with GitHub</code>并在弹出的界面上完成GitHub授权：<br><img src="/@image/001002/002003-103618.jpg" alt="003-导入GitHub项目"></p><p>在导入项目管理界面可以看到刚刚导入的项目，点击项目后面的<code>Install</code>并在弹出的界面上选择<code>Only select repositories</code>选项，在<code>Select repositories</code>下拉列表中选择GitHub博客源码项目，点击<code>Install</code>执行安装，输入GitHub密码将项目从GitHub复制到Vercel上。</p><p>在导入项目管理界面点击项目右侧的<code>Import</code>，进入设置和部署界面：<br><img src="/@image/001002/002005-105633.jpg" alt="005-部署项目"></p><ol><li>设置Vercel中的项目名，可以使用默认的。</li><li>设置框架，支持自动识别比如Hexo框架，如果不对可以修改。</li><li>检查并设置部署命令，可以使用默认配置，点击<code>Deploy</code>在Vercel上进行部署。</li></ol><p>等到部署结束，会跳转到祝贺页面，能够看到博客的缩略图，点击即可通过Vercel提供的链接访问博客。</p><p>当对GitHub博客源码项目进行推送时，会触发Vercel的自动部署。</p><p>不推荐这种方式，在某些情况下会出现问题，将主题项目作为子模块或者子项目，会导致部署后进入博客白屏。</p></div></div></div><h3 id="1-4-设置域名"><a href="#1-4-设置域名" class="headerlink" title="1.4 设置域名"></a>1.4 设置域名</h3><p>进入Vercel项目管理界面，点击创建的博客项目进入项目界面，切换到<code>Settings</code>标签，在左侧导航栏点击<code>Domains</code>设置：<br><img src="/@image/001002/002006-112512.jpg" alt="006-设置域名"></p><p>在输入框中输入购买的域名，点击<code>Add</code>添加。</p><p>根据提示去域名服务商配置域名解析，将指向GitHub Pages改为指向Vercel。</p><p>之后等待域名生效即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了如何将博客托管到Vercel云平台。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="Vercel" scheme="https://momashanhe.com/tags/Vercel/"/>
    
  </entry>
  
  <entry>
    <title>给博客添加徽标</title>
    <link href="https://momashanhe.com/posts/20240303/102543/"/>
    <id>https://momashanhe.com/posts/20240303/102543/</id>
    <published>2024-03-03T02:25:43.000Z</published>
    <updated>2024-03-17T03:22:42.702Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍了如何给博客添加自定义徽标。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-静态徽标"><a href="#1-静态徽标" class="headerlink" title="1 静态徽标"></a>1 静态徽标</h2><h3 id="1-1-语法"><a href="#1-1-语法" class="headerlink" title="1.1 语法"></a>1.1 语法</h3><p>徽标生成网站：<br><a href="https://shields.io/">https://shields.io/</a></p><p>通过访问特定链接就能生成自定义徽标，特定链接的语法：</p><figure class="highlight plaintext"><figcaption><span>url</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://img.shields.io/badge/前缀-后缀-颜色?参数</span><br></pre></td></tr></table></figure><p>特定链接使用<code>-</code>短横线分隔，如果用到了特殊字符需要转义：</p><blockquote><p>需要<code> </code>空格，则使用<code>_</code>下划线或者<code>%20</code>表示。<br>需要<code>_</code>下划线，则使用<code>__</code>双下划线表示。<br>需要<code>-</code>短横线，则使用<code>--</code>双短横线表示。</p></blockquote><p>颜色支持十六进制、RGB、RGBA、HSL、HSLA和CSS进行表达。</p><p>样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue"></a></p><p>可以使用<code>img</code>标签引用，也可以使用<code>object</code>标签引用：</p><div class="tabs" id="tab-tab-id-1"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-1-1">1. img</a></li><li class="tab"><a class="#tab-id-1-2">2. object</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-1-1"><p>不支持点击徽标跳转链接，需要包装跳转链接。</p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-1-2"><p>支持点击徽标跳转链接。</p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div><h3 id="1-2-参数"><a href="#1-2-参数" class="headerlink" title="1.2 参数"></a>1.2 参数</h3><h4 id="1-2-1-类型"><a href="#1-2-1-类型" class="headerlink" title="1.2.1 类型"></a>1.2.1 类型</h4><p>类型参数名为<code>style</code>，类型参数值支持多种。</p><div class="tabs" id="tab-tab-id-2"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-2-1">1. flat</a></li><li class="tab"><a class="#tab-id-2-2">2. flat-square</a></li><li class="tab"><a class="#tab-id-2-3">3. plastic</a></li><li class="tab"><a class="#tab-id-2-4">4. for-the-badge</a></li><li class="tab"><a class="#tab-id-2-5">5. social</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-2-1"><p>扁平，默认，样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue?style=flat"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue?style=flat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-2-2"><p>方角扁平，样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue?style=flat-square"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue?style=flat-square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-2-3"><p>塑料质感，样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue?style=plastic"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue?style=plastic&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-2-4"><p>放大版，同时字母大写，样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue?style=for-the-badge"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue?style=for-the-badge&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-id-2-5"><p>后缀改为聊天气泡，样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-blue?style=social"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-blue?style=social&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div><h4 id="1-2-2-标签"><a href="#1-2-2-标签" class="headerlink" title="1.2.2 标签"></a>1.2.2 标签</h4><p>左侧标签参数名为<code>label</code>，左侧标签颜色参数名为<code>labelColor</code>，右侧标签颜色参数名为<code>color</code>，支持重写左侧标签和自定义两侧标签颜色。</p><p>样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-90EE90?label=edit&labelColor=A9A9A9&color=FF0000"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-90EE90?label=edit&amp;labelColor=A9A9A9&amp;color=FF0000&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-3-链接"><a href="#1-2-3-链接" class="headerlink" title="1.2.3 链接"></a>1.2.3 链接</h4><p>链接参数名为<code>link</code>，链接参数值支持自定义链接，用于点击徽标进行跳转。</p><p>只有使用<code>object</code>标签才支持跳转，使用<code>img</code>标签需要包装跳转链接。</p><p>样式：<br><a href="https://shields.io/" title="shields"><img src="https://img.shields.io/badge/left-right-90EE90"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://shields.io/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-90EE90&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-4-LOGO"><a href="#1-2-4-LOGO" class="headerlink" title="1.2.4 LOGO"></a>1.2.4 LOGO</h4><p>LOGO参数名为<code>logo</code>，LOGO颜色参数名为<code>logoColor</code>，参数值支持从网站获取：<br><a href="https://simpleicons.org/">https://simpleicons.org/</a></p><p>在上述网站中可以找到支持的LOGO名称和颜色，也可以复制下载SVG格式的图标。</p><p>样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/left-right-90EE90?logo=hexo&logoColor=0E83CD"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/left-right-90EE90?logo=hexo&amp;logoColor=0E83CD&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-动态徽标"><a href="#2-动态徽标" class="headerlink" title="2 动态徽标"></a>2 动态徽标</h2><h3 id="2-1-通过URL获取的文件内容"><a href="#2-1-通过URL获取的文件内容" class="headerlink" title="2.1 通过URL获取的文件内容"></a>2.1 通过URL获取的文件内容</h3><p>语法：</p><figure class="highlight plaintext"><figcaption><span>url</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://img.shields.io/badge/dynamic/类型?参数</span><br></pre></td></tr></table></figure><p>支持的文件类型有：</p><blockquote><p>json<br>toml<br>xml<br>yaml</p></blockquote><p>参数沿用静态徽标的参数，并且新增了<code>url</code>参数和<code>query</code>参数，用于指定文件地址和属性名，属性名前使用<code>$.</code>作为前缀。</p><p>样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/badge/dynamic/json?url=https://github.com/badges/shields/raw/master/package.json&query=$.name"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/dynamic/json?url=https://github.com/badges/shields/raw/master/package.json&amp;query=$.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-通过URL获取的响应内容"><a href="#2-2-通过URL获取的响应内容" class="headerlink" title="2.2 通过URL获取的响应内容"></a>2.2 通过URL获取的响应内容</h3><p>语法：</p><figure class="highlight plaintext"><figcaption><span>url</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://img.shields.io/endpoint?参数</span><br></pre></td></tr></table></figure><p>参数沿用静态徽标的参数，并且新增了<code>url</code>参数，用于请求地址。</p><p>请求地址需要响应的内容：</p><blockquote><p>schemaVersion：版本，必填，总是设置为1。<br>style：类型，非必填，默认是<code>flat</code>。<br>label：左侧标签内容，可以设置为空字符串，必填。<br>message：右侧标签内容，不能设置为空字符串，必填。<br>labelColor：左侧标签颜色，非必填，默认是<code>grey</code>。<br>color：右侧标签颜色，非必填，默认是<code>lightgrey</code>。<br>namedLogo：LOGO对应名字，非必填，默认不传。<br>logoSvg：LOGO对应的SVG字符串，非必填，默认不传。<br>logoColor：LOGO颜色，非必填，默认不传。<br>isError：非必填，默认否，</p></blockquote><p>请求url得到的响应内容：</p><figure class="highlight json"><figcaption><span>json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;schemaVersion&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;is it monday&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;no&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;orange&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>样式：<br><a href="javascript:void(0);" title="shields"><img src="https://img.shields.io/endpoint?url=https://shields.redsparr0w.com/2473/monday"></a></p><p>写法：</p><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">title</span>=<span class="string">&quot;shields&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/endpoint?url=https://shields.redsparr0w.com/2473/monday&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍了如何给博客添加自定义徽标。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>设置博客主题</title>
    <link href="https://momashanhe.com/posts/20240226/223923/"/>
    <id>https://momashanhe.com/posts/20240226/223923/</id>
    <published>2024-02-26T14:39:23.000Z</published>
    <updated>2024-03-17T03:22:43.215Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何设置博客主题。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-设置主题"><a href="#1-设置主题" class="headerlink" title="1 设置主题"></a>1 设置主题</h2><p>对于在GitHub上的主题，有四种方式进行设置，四种方式各有优缺点。</p><div class="tabs" id="tab-tab-id-1"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-1-1">1. 下载并解压</a></li><li class="tab"><a class="#tab-id-1-2">2. 安装</a></li><li class="tab"><a class="#tab-id-1-3">3. 克隆主题作为子模块</a></li><li class="tab"><a class="#tab-id-1-4">4. 克隆主题作为子项目</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-1-1"><p>下载并解压主题到博客目录的<code>themes</code>目录中。</p><p>最简单的方式，特点如下：<br>是否支持通过命令更新主题：否，需要重新下载。<br>本地是否存储主题代码：是，可以修改主题。<br>远程是否存储主题代码：是，保留主题代码。</p><p>适用场景：<br>是否需要使用新版主题：否。<br>是否会对主题进行更改：是。</p></div><div class="tab-pane" id="tab-id-1-2"><p>安装主题到博客：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-themename</span><br></pre></td></tr></table></figure><p>最节省空间的方式，特点如下：<br>是否支持通过命令更新主题：是，支持通过<code>npm install</code>命令更新主题，更新前需要在<code>package.json</code>中将版本号改为<code>*</code>。<br>本地是否存储主题代码：否，不可以修改主题。<br>远程是否存储主题代码：否，不保留主题代码。</p><p>适用场景：<br>是否需要使用新版主题：是。<br>是否会对主题进行更改：否。</p></div><div class="tab-pane" id="tab-id-1-3"><p>通过<code>git submodule add</code>命令将GitHub上的主题项目克隆到本地，作为博客项目的子模块：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add git@github.com:username/hexo-theme-themename.git themes/themename</span><br></pre></td></tr></table></figure><p>较为兼容的方式，特点如下：<br>是否支持通过命令更新主题：是，支持通过<code>git pull</code>命令更新主题。<br>本地是否存储主题代码：是，可以修改主题。<br>远程是否存储主题代码：否，不保留主题代码，但是会保留主题子模块链接。</p><p>适用场景：<br>是否需要使用新版主题：是。<br>是否会对主题进行更改：是。</p></div><div class="tab-pane" id="tab-id-1-4"><p>通过<code>git clone</code>命令将GitHub上的主题项目克隆到本地，作为博客项目的子项目：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/hexo-theme-themename.git themes/themename</span><br></pre></td></tr></table></figure><p>建议使用这种方式，特点如下：<br>是否支持通过命令更新主题：是，支持通过<code>git pull</code>命令更新主题。<br>本地是否存储主题代码：是，可以修改主题。<br>远程是否存储主题代码：否，不保留主题代码。</p><p>适用场景：<br>是否需要使用新版主题：是。<br>是否会对主题进行更改：是。</p></div></div></div><p>打开<code>_config.yml</code>配置文件，设置<code>theme</code>的值为主题中指定的名字。</p><p>根据主题说明文件，创建<code>_config.themename.yml</code>主题专用配置文件，按照主题说明文档修改配置即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何设置博客主题。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>在文章中插入本地图片</title>
    <link href="https://momashanhe.com/posts/20240226/211523/"/>
    <id>https://momashanhe.com/posts/20240226/211523/</id>
    <published>2024-02-26T13:15:23.000Z</published>
    <updated>2024-03-17T03:22:43.784Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何在文章中插入本地图片。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-插入图片"><a href="#1-插入图片" class="headerlink" title="1 插入图片"></a>1 插入图片</h2><p>进入博客目录，修改<code>_config.yml</code>配置文件，启动资源目录：</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在博客目录打开bash命令行，安装插件：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure><p>每次创建博客时，都会创建同名目录，通过相对路径引用同名目录里的图片即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何在文章中插入本地图片。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>给文章设置模板和永久链接</title>
    <link href="https://momashanhe.com/posts/20240226/201352/"/>
    <id>https://momashanhe.com/posts/20240226/201352/</id>
    <published>2024-02-26T12:13:52.000Z</published>
    <updated>2024-03-17T03:22:44.358Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何给文章设置模板和永久链接。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-模板"><a href="#1-模板" class="headerlink" title="1 模板"></a>1 模板</h2><p>进入博客目录，打开<code>scaffolds</code>目录，修改<code>post.md</code>模板，这是默认模板：</p><figure class="highlight txt"><figcaption><span>post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要：</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>进入博客目录，打开<code>scaffolds</code>目录，修改<code>draft.md</code>模板：</p><figure class="highlight txt"><figcaption><span>draft.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="2-永久链接"><a href="#2-永久链接" class="headerlink" title="2 永久链接"></a>2 永久链接</h2><p>修改博客目录下的<code>_config.yml</code>配置文件：</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://username.com/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:year:month:day/:hour:minute:second/</span></span><br></pre></td></tr></table></figure><p>把<code>url</code>改为自己的域名即可，这种永久链接的好处是采用文章创建时间里的元素作为永久链接，即使文章路径或者文章标题发生改动，也不会对已生成的链接产生影响。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何给文章设置模板和永久链接。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>将博客源码上传到GitHub</title>
    <link href="https://momashanhe.com/posts/20240226/172637/"/>
    <id>https://momashanhe.com/posts/20240226/172637/</id>
    <published>2024-02-26T09:26:37.000Z</published>
    <updated>2024-03-18T00:36:11.863Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何将博客源码上传到GitHub。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-创建私有源码仓库"><a href="#1-创建私有源码仓库" class="headerlink" title="1 创建私有源码仓库"></a>1 创建私有源码仓库</h2><p>登录GitHub，创建一个名称为<code>username.source</code>的公共仓库，把<code>username</code>改为GitHub的用户名，下同。</p><h2 id="2-创建说明文档和许可证明"><a href="#2-创建说明文档和许可证明" class="headerlink" title="2 创建说明文档和许可证明"></a>2 创建说明文档和许可证明</h2><p>进入博客目录，创建<code>README.md</code>说明文档，输入对项目的简单介绍，创建<code>LICENSE</code>许可证明，并设置许可类型。</p><h2 id="3-同步源码"><a href="#3-同步源码" class="headerlink" title="3 同步源码"></a>3 同步源码</h2><p>进入博客目录，右键进入bash命令行，执行命令初始化为Git仓库：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="/@image/001001/003001-153238.jpg" alt="001-初始化目录"></p><p>因为GitHub新的仓库默认分支已经改成了main，但本地还是master，所以执行命令将本地分支改为main：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M main</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="/@image/001001/003002-155621.jpg" alt="002-默认分支"></p><p>修改<code>.gitignore</code>配置文件：</p><figure class="highlight txt"><figcaption><span>.gitignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">_multiconfig.yml</span><br><span class="line">.github*/</span><br></pre></td></tr></table></figure><p>右键进入bash命令行，设置当前目录用户名和邮箱：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name username</span><br><span class="line">git config --<span class="built_in">local</span> user.email username@163.com</span><br></pre></td></tr></table></figure><p>添加至暂存：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>提交更改并注释：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;init(博客): 初始化博客&quot;</span></span><br></pre></td></tr></table></figure><p>添加远程仓库：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:username/username.source.git</span><br></pre></td></tr></table></figure><p>推送到远程仓库：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何将博客源码上传到GitHub。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://momashanhe.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>将博客部署到GitHub</title>
    <link href="https://momashanhe.com/posts/20240226/153429/"/>
    <id>https://momashanhe.com/posts/20240226/153429/</id>
    <published>2024-02-26T07:34:29.000Z</published>
    <updated>2024-03-18T00:36:11.863Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何将博客部署到GitHub。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-配置GitHub"><a href="#1-配置GitHub" class="headerlink" title="1 配置GitHub"></a>1 配置GitHub</h2><h3 id="1-1-登录"><a href="#1-1-登录" class="headerlink" title="1.1 登录"></a>1.1 登录</h3><p>注册并登录GitHub。</p><h3 id="1-2-生成SSH公钥"><a href="#1-2-生成SSH公钥" class="headerlink" title="1.2 生成SSH公钥"></a>1.2 生成SSH公钥</h3><p>打开资源管理器，在地址栏输入<code>C:\Users\登录用户\.ssh</code>并回车进入，查看登录用户目录里有没有<code>.ssh</code>目录：<br><img src="/@image/001001/002001-121336.jpg" alt="001-SSH目录"></p><p>如果目录存在，说明以前设置过<code>.ssh</code>目录，如果没用了就删掉，如果还有用就需要参考SSH配置多用户，在此先不做介绍了。<br>如果目录不存在，进入上级<code>C:\Users\登录用户</code>目录，右键进入bash命令行，执行命令生成SSH秘钥和公钥：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C 个人邮箱</span><br></pre></td></tr></table></figure><p>命令说明：</p><blockquote><p>-t：指定密钥类型，默认是rsa，可以省略。<br>-C：设置注释文字，一般会设置为个人邮箱。</p></blockquote><p>执行命令后，会提示置生成的秘钥和公钥名称，默认是<code>id_rsa</code>作为名称，回车使用默认名称。<br>继续执行，还会提示设置密码和确认密码，回车设置为空。<br>命令最终执行如下：<br><img src="/@image/001001/002002-121548.jpg" alt="002-SSH生成"><br>此时会在登录用户目录里生成<code>.ssh</code>目录，打开<code>id_rsa.pub</code>公钥文件并复制内容。</p><h3 id="1-3-配置SSH公钥"><a href="#1-3-配置SSH公钥" class="headerlink" title="1.3 配置SSH公钥"></a>1.3 配置SSH公钥</h3><p>进入GitHub点击个人头像，选择<code>Settings</code>进入设置页面，在左侧找到<code>SSH and GPG keys</code>设置，在顶部的<code>SSH keys</code>模块中，点击右侧的<code>New SSH key</code>按钮新增配置：<br><img src="/@image/001001/002003-122513.jpg" alt="003-SSH配置"><br>在添加配置的页面中，设置<code>Title</code>的配置名称，然后设置<code>Key</code>中的公钥，粘贴刚刚复制的公钥文件内容，然后点击底部的<code>Add SSH key</code>按钮保存配置。</p><p>使用<code>ssh -T git@github.com</code>命令测试通过SSH能否连接到GitHub：<br><img src="/@image/001001/002004-123612.jpg" alt="004-SSH测试"><br>如果提示确认输入，就按照提示输入<code>yes</code>然后回车即可连接成功，下次在测试就没有这个提示了，同时在<code>.ssh</code>目录中会增加<code>known_hosts</code>的配置文件。</p><h2 id="2-部署GitHub"><a href="#2-部署GitHub" class="headerlink" title="2 部署GitHub"></a>2 部署GitHub</h2><h3 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1 创建仓库"></a>2.1 创建仓库</h3><p>登录GitHub，创建一个名称为<code>username.github.io</code>的公共仓库，把<code>username</code>改为GitHub的用户名，下同。</p><p>这种仓库是GitHub Pages仓库，一个用户只能创建一个这种仓库，创建后允许用户将仓库发布为一个静态网站，网址就是<code>username.github.io</code>仓库名称。</p><h3 id="2-2-安装插件"><a href="#2-2-安装插件" class="headerlink" title="2.2 安装插件"></a>2.2 安装插件</h3><p>进入博客目录，右键进入bash命令行，安装部署到GitHub上的插件：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改博客目录下的<code>_config.yml</code>配置文件，修改底部的<code>deploy</code>配置项，如果没有找到则自己添加：</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">git@github.com:username/username.github.io.git</span></span><br><span class="line">      <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><h3 id="2-3-发布"><a href="#2-3-发布" class="headerlink" title="2.3 发布"></a>2.3 发布</h3><p>进入博客目录，右键进入bash命令行，执行命令清理博客、生成博客、发布博客：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>发布后如果提示未知身份：<br><img src="/@image/001001/002005-124513.jpg" alt="005-未知身份"><br>说明需要设置用户名和邮箱。</p><p>可以按照提示设置全局用户名和邮箱：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name username</span><br><span class="line">git config --global user.email username@163.com</span><br></pre></td></tr></table></figure><p>然后重新发布。</p><p>也可以进入博客目录下的<code>.deploy_git</code>发布目录，右键进入bash命令行，设置发布目录的用户名和邮箱：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="built_in">local</span> user.name username</span><br><span class="line">git config --<span class="built_in">local</span> user.email username@163.com</span><br></pre></td></tr></table></figure><p>返回上级博客目录，然后重新发布。</p><p>通过GitHub访问博客：<br><a href="https://username.github.io/">https://username.github.io</a></p><h2 id="3-域名解析"><a href="#3-域名解析" class="headerlink" title="3 域名解析"></a>3 域名解析</h2><h3 id="3-1-域名"><a href="#3-1-域名" class="headerlink" title="3.1 域名"></a>3.1 域名</h3><p>通过阿里云或者腾讯云，或者其他服务商，都可以购买域名。</p><h3 id="3-2-解析"><a href="#3-2-解析" class="headerlink" title="3.2 解析"></a>3.2 解析</h3><p>打开cmd命令行，输入命令查询IP地址：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> username.github.io</span><br></pre></td></tr></table></figure><p>进入域名解析页面，配置域名解析。<br>新增记录，主机记录为<code>@</code>，记录类型为<code>A</code>，记录值为上面查到的<code>IP地址</code>，TTL使用默认的600即可。<br>新增记录，主机记录为<code>www</code>，记录类型为<code>CNAME</code>，记录值为GitHub访问博客的地址，TTL使用默认的600即可。</p><h3 id="3-3-配置"><a href="#3-3-配置" class="headerlink" title="3.3 配置"></a>3.3 配置</h3><p>进入博客目录下的<code>source</code>目录，新建<code>CNAME</code>文件，注意不要有后缀名，打开后添加域名并保存。</p><p>进入仓库页面，点击仓库页面右上角的<code>Settings</code>标签，在左侧菜单栏中找到<code>Pages</code>配置页，找到<code>Custom domain</code>填入域名并保存。<br>将博客重新发布后就可以通过域名访问了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何将博客部署到GitHub。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://momashanhe.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>本地安装Hexo博客</title>
    <link href="https://momashanhe.com/posts/20240226/111354/"/>
    <id>https://momashanhe.com/posts/20240226/111354/</id>
    <published>2024-02-26T03:13:54.000Z</published>
    <updated>2024-03-18T00:36:11.863Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文主要介绍如何下载和安装Hexo。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Node 18.14.0<br>NPM 9.3.1<br>Git 2.37.3<br>Hexo 4.3.1</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><p>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>官网：<br><a href="https://hexo.io/zh-cn">https://hexo.io/zh-cn</a></p><h2 id="2-环境"><a href="#2-环境" class="headerlink" title="2 环境"></a>2 环境</h2><h3 id="2-1-安装Git"><a href="#2-1-安装Git" class="headerlink" title="2.1 安装Git"></a>2.1 安装Git</h3><p>由于初始化博客目录需要Git支持，并且Hexo的某些命令需要在bash命令行中执行，因此需要安装Git工具。</p><p>官网：<br><a href="https://git-scm.com/">https://git-scm.com</a><br>使用最新版安装即可，也可以通过GitHub选择2.37.3版本下载，历史版本下载地址：<br><a href="https://github.com/git-for-windows/git/releases/tag/v2.37.3.windows.1/">v2.37.3.windows.1&#x2F;</a><br>如果GitHub访问速度慢，也可以通过淘宝镜像下载：<br><a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.37.3.windows.1/">v2.37.3.windows.1&#x2F;</a></p><p>如果不太了解Git工具，可以使用默认设置安装。<br>安装结束后，右键选择<code>Git Bash Here</code>进入bash命令行：<br><img src="/@image/001001/001001-083413.jpg" alt="001-bash"><br>输入<code>git --version</code>命令查看Git的安装版本：<br><img src="/@image/001001/001002-085802.jpg" alt="002-版本"></p><p>需要注意的是，默认安装的2.37.3版本在初始化本地Git项目的时候，默认创建的分支还是master分支，可以在安装的时候自定义：<br><img src="/@image/001001/001003-091105.jpg" alt="003-默认分支"></p><h3 id="2-2-安装Node"><a href="#2-2-安装Node" class="headerlink" title="2.2 安装Node"></a>2.2 安装Node</h3><p>Hexo基于Node，搭建过程中还需要使用NPM（Node包管理工具，安装Node时默认安装）。</p><p>官网：<br><a href="https://nodejs.org/en">https://nodejs.org/en</a><br>本文使用的版本不是最新版，是18.14.0版本。下载地址：<br><a href="https://nodejs.org/download/release/v18.14.0/">v18.14.0&#x2F;</a><br>选择<code>node-v18.14.0-x64.msi</code>下载并安装。</p><p>使用默认配置安装结束后，打开cmd命令行，输入<code>npm -v</code>命令和<code>node -v</code>命令查询NPM版本和Node版本：<br><img src="/@image/001001/001004-092632.jpg" alt="004-版本"></p><p>NPM是包管理工具，通过命令将安装包使用的源设置为淘宝镜像，速度会快一些：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><p>使用命令查看安装使用的源：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><h3 id="2-3-安装Hexo"><a href="#2-3-安装Hexo" class="headerlink" title="2.3 安装Hexo"></a>2.3 安装Hexo</h3><p>在cmd命令行中使用NPM安装Hexo：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装结束后，使用<code>hexo -v</code>命令查看Hexo版本：<br><img src="/@image/001001/001005-093156.jpg" alt="005-版本"></p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3 使用"></a>3 使用</h2><h3 id="3-1-初始化博客目录"><a href="#3-1-初始化博客目录" class="headerlink" title="3.1 初始化博客目录"></a>3.1 初始化博客目录</h3><p>在电脑中新建博客目录，右键进入bash命令行，使用命令初始化博客目录：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="/@image/001001/001006-094535.jpg" alt="006-博客目录"></p><h3 id="3-2-博客预览"><a href="#3-2-博客预览" class="headerlink" title="3.2 博客预览"></a>3.2 博客预览</h3><p>使用<code>hexo generate</code>命令生成博客内容。<br>也可以简写为<code>hexo g</code>命令。<br>结果如下：<br><img src="/@image/001001/001007-102153.jpg" alt="007-生成博客"><br>使用<code>hexo server</code>命令启动本地预览。<br>也可以简写为<code>hexo s</code>命令。<br>结果如下：<br><img src="/@image/001001/001008-103527.jpg" alt="008-启动博客"><br>根据提示，在浏览器输入地址访问博客：<br><a href="http://localhost:4000/">http://localhost:4000/</a><br>可以看到博客的默认界面：<br><img src="/@image/001001/001009-104523.jpg" alt="009-本地预览"></p><p>可以使用<code>Ctrl+C</code>命令停止博客。</p><h3 id="3-3-新建文章"><a href="#3-3-新建文章" class="headerlink" title="3.3 新建文章"></a>3.3 新建文章</h3><p>使用命令创建文章：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>执行后创建标题为<code>test</code>的文章，在博客名录下的<code>source</code>目录中的<code>_posts</code>目录中会自动新增对应的Markdown文件：<br><img src="/@image/001001/001010-105512.jpg" alt="010-新建文章"></p><p>可以通过文本编辑器修改文章，保存后在本地预览：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h3 id="3-4-站点设置"><a href="#3-4-站点设置" class="headerlink" title="3.4 站点设置"></a>3.4 站点设置</h3><p>修改博客目录下的<code>_config.yml</code>配置文件，修改的<code>Site</code>配置项，修改站点属性。</p><h2 id="4-分类和标签"><a href="#4-分类和标签" class="headerlink" title="4 分类和标签"></a>4 分类和标签</h2><h3 id="4-1-分类"><a href="#4-1-分类" class="headerlink" title="4.1 分类"></a>4.1 分类</h3><p>进入博客目录，打开bash命令行，添加分类页：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>打开<code>sources/categories/index.md</code>文件，增加分类配置：</p><figure class="highlight txt"><figcaption><span>index.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 所有分类</span><br><span class="line">date: 2024-02-25 21:45:11</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>使用分类：</p><figure class="highlight txt"><figcaption><span>index.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">categories: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="4-2-标签"><a href="#4-2-标签" class="headerlink" title="4.2 标签"></a>4.2 标签</h3><p>进入博客目录，打开bash命令行，添加标签页：</p><figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>打开<code>sources/tags/index.md</code>文件，增加标签配置：</p><figure class="highlight txt"><figcaption><span>index.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 所有标签</span><br><span class="line">date: 2024-02-25 21:53:29</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>使用标签：</p><figure class="highlight txt"><figcaption><span>index.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">tags: []</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文主要介绍如何下载和安装Hexo。&lt;/p&gt;</summary>
    
    
    
    <category term="建站技术" scheme="https://momashanhe.com/categories/%E5%BB%BA%E7%AB%99%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Hexo" scheme="https://momashanhe.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
