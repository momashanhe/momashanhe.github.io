<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>墨码山河</title>
  
  <subtitle>代码改变世界</subtitle>
  <link href="https://momashanhe.com/atom.xml" rel="self"/>
  
  <link href="https://momashanhe.com/"/>
  <updated>2025-06-07T10:28:37.950Z</updated>
  <id>https://momashanhe.com/</id>
  
  <author>
    <name>墨码山河</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>索引详解</title>
    <link href="https://momashanhe.com/posts/20250605/100752/"/>
    <id>https://momashanhe.com/posts/20250605/100752/</id>
    <published>2025-06-05T02:07:52.000Z</published>
    <updated>2025-06-07T10:28:37.950Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了索引的数据结构和相关的概念。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-数据结构"><a href="#1-数据结构" class="headerlink" title="1 数据结构"></a>1 数据结构</h2><h3 id="1-1-分类"><a href="#1-1-分类" class="headerlink" title="1.1 分类"></a>1.1 分类</h3><p>索引是在存储引擎层中实现的，而不是在服务器层实现的。所以每种存储引擎的索引都不一定完全相同，也不是所有的存储引擎都支持所有的索引类型的。</p><p>常见的索引有四种结构类型：</p><ul><li>B树索引：最常见的索引类型，大部分索引都支持该类型的索引。</li><li>Hash索引：基于Hash表实现，只有Memory引擎支持，使用场景简单。</li><li>R树索引（空间索引）：空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少。</li><li>FullText（全文索引）：全文索引也是MyISAM的一个特殊索引类型，主要用于全文检索。InnoDB从5.6版本开始支持全文索引，但并不直接支持中文，需要使用插件辅助。</li></ul><h3 id="1-2-说明"><a href="#1-2-说明" class="headerlink" title="1.2 说明"></a>1.2 说明</h3><h4 id="1-2-1-B树"><a href="#1-2-1-B树" class="headerlink" title="1.2.1 B树"></a>1.2.1 B树</h4><p>B树是为了磁盘或其它存储设备而设计的一种多叉平衡查找树。相对于二叉树，B树每个内结点有多个分支，所以是多叉树。</p><p>一颗m叉的B树特性如下：</p><ul><li>树中每个节点最多有m个孩子节点，如果根节点不是叶子节点，则至少有2个孩子节点。</li><li>除根节点与叶子节点外，每个节点由n个key与n+1个point组成，其中n的取值在ceil(m&#x2F;2)-1和m-1之间，ceil是一个取上限的函数。</li><li>节点的key包含索引的键值和键值所在行的数据，节点的point指向孩子节点，如果是叶子节点，其point指向null节点，并且所有的叶子节点都在同层。</li><li>当孩子节点的数量超过m-1时，中间节点会成为父节点，孩子节点分裂为左右两块孩子节点。</li></ul><p>以一个3叉B树为例，当m为3时，n的取值在1和2之间，当key的个数大于2时，中间节点分裂到父节点，两边节点分裂。</p><p>插入<code>ACGBNMQW</code>的演变过程如下：</p><ol><li>插入AC<br><img src="/@image/302002/003-20250607123907.jpg" alt="20250607123907-演变过程"></li><li>插入G，n&gt;2，中间C向上分裂到新节点<br><img src="/@image/302002/003-20250607124033.jpg" alt="20250607124033-演变过程"></li><li>插入BN，不需要分裂<br><img src="/@image/302002/003-20250607131246.jpg" alt="20250607131246-演变过程"></li><li>插入M，中间M向上分裂到父节点<br><img src="/@image/302002/003-20250607132809.jpg" alt="20250607132809-演变过程"></li><li>插入Q，不需要分裂<br><img src="/@image/302002/003-20250607135926.jpg" alt="20250607135926-演变过程"></li><li>插入W，中间Q向上分裂到父节点，父节点中间M向上分裂到新节点<br><img src="/@image/302002/003-20250607141521.jpg" alt="20250607141521-演变过程"></li></ol><p>和二叉树相比，B树有如下优点：：</p><ul><li>查询效率更高。在相同的数据量情况下，B树查询数据的时间复杂度更低。</li><li>搜索速度更快。B树层级结构小，查询效率更高。</li></ul><h4 id="1-2-2-B-树"><a href="#1-2-2-B-树" class="headerlink" title="1.2.2 B+树"></a>1.2.2 B+树</h4><p>B+树是B树的一个变种，但也同样属于多叉平衡查找树。</p><p>一颗m叉的B+树特性如下：</p><ul><li>树中每个节点最多有m个孩子。</li><li>如果根节点不是叶子节点，则至少有2个孩子。</li><li>除根节点与叶子节点外，每个节点由n个key与n个point组成，其中ceil(m&#x2F;2)&lt;&#x3D;n&lt;&#x3D;m，ceil是一个取上限的函数。</li><li>叶子节点都在同一层，叶子节点没有point，叶子节点的key包含全部索引的键值和键值所在行的数据。</li><li>非叶子节点的point指向孩子节点，非叶子节点的key包含孩子节点中最大（或最小）的key。</li></ul><p>以一个3叉B+树为例，2&lt;&#x3D;n&lt;&#x3D;3，当key的个数大于3时，中间节点分裂到父节点，两边节点分裂。</p><p>插入<code>ACGBNMQW</code>的演变过程如下：</p><ol><li>插入ACG<br><img src="/@image/302002/003-20250607173557.jpg" alt="20250607173557-演变过程"></li><li>插入B，n&gt;3，分裂<br><img src="/@image/302002/003-20250607174730.jpg" alt="20250607174730-演变过程"></li><li>插入N，不需要分裂<br><img src="/@image/302002/003-20250607174905.jpg" alt="20250607174905-演变过程"></li><li>插入M，分裂<br><img src="/@image/302002/003-20250607180243.jpg" alt="20250607180243-演变过程"></li><li>插入Q，不需要分裂<br><img src="/@image/302002/003-20250607180354.jpg" alt="20250607180354-演变过程"></li><li>插入W，分裂<br><img src="/@image/302002/003-20250607181106.jpg" alt="20250607181106-演变过程"></li></ol><p>和B树相比，B+树有如下优点：</p><ul><li>扫表能力更强。B树需要遍历整棵树，B+树只需要遍历所有叶子节点。</li><li>磁盘读写能力更强。在同样大小的情况下，B+树只有叶子节点保存数据，保存的关键字和数据更多。</li><li>查询性能稳定。B+树数据只保存在叶子节点，每次查询数据，查询IO次数一定是稳定的。</li><li>查询效率高。B树在遍历时如果命中直接返回，B+树需要遍历到叶子节点。</li></ul><h2 id="2-相关定义"><a href="#2-相关定义" class="headerlink" title="2 相关定义"></a>2 相关定义</h2><h3 id="2-1-聚簇索引"><a href="#2-1-聚簇索引" class="headerlink" title="2.1 聚簇索引"></a>2.1 聚簇索引</h3><h4 id="2-1-1-定义"><a href="#2-1-1-定义" class="headerlink" title="2.1.1 定义"></a>2.1.1 定义</h4><p>索引中的键值顺序就是表中相应行的物理存储顺序。对于经常要搜索范围值的列特别有效，表中排序经常用到的列可以使用聚簇索引节省成本。</p><p>在聚簇索引中，叶子节点存储的是真实数据，不再有另外单独的数据页。</p><p>优点是查询速度快，一旦具有第一个索引值的数据行被找到，具有连续索引值的数据行也会紧随其后。</p><p>缺点是修改速度慢，为了保证数据行的顺序和索引的顺序一致，需要进行数据重排，不适用于频繁更新的列。</p><h4 id="2-1-2-使用"><a href="#2-1-2-使用" class="headerlink" title="2.1.2 使用"></a>2.1.2 使用</h4><p>如果定义了主键，InnoDB会将这个主键索引作为聚簇索引。</p><p>如果没有定义主键，InnoDB会将第一个非空唯一索引作为聚簇索引。</p><p>如果没有主键索引并且没有非空唯一索引，InnoDB会自动创建一个隐藏的名字为GEN_CLUST_INDEX的聚簇索引。</p><p>因此，每个InnoDB表都有且仅有一个聚簇索引。</p><h3 id="2-2-非聚簇索引"><a href="#2-2-非聚簇索引" class="headerlink" title="2.2 非聚簇索引"></a>2.2 非聚簇索引</h3><h4 id="2-2-1-定义"><a href="#2-2-1-定义" class="headerlink" title="2.2.1 定义"></a>2.2.1 定义</h4><p>索引中的键值顺序与表中相应行的物理存储顺序无关。</p><p>在非聚簇索引中，叶子节点存储的是索引节点，有一个指向对应数据页上的真实数据的指针。</p><h4 id="2-2-2-使用"><a href="#2-2-2-使用" class="headerlink" title="2.2.2 使用"></a>2.2.2 使用</h4><p>所有不是聚簇索引的索引都叫非聚簇索引或者辅助索引。</p><p>在InnDB存储引擎中，非聚簇索引的每条记录会包含对应的主键，InnoDB会使用这个主键来检索聚簇索引。</p><p>因此应该尽可能将主键缩短，否则辅助索引占用空间会更大。</p><h4 id="2-2-3-回表查询"><a href="#2-2-3-回表查询" class="headerlink" title="2.2.3 回表查询"></a>2.2.3 回表查询</h4><p>当要查询的列不属于主索引和辅助索引，并且在查询条件中使用了辅助索引而且没有使用主索引。</p><p>此时，如果要的到查询结果，首先根据查询条件搜索辅助索引，找到符合的叶子节点，因为辅助索引没有索引覆盖查询的列，通过叶子节点上的主键搜索主索引，从而得到查询结果。</p><p>这个过程就是回表查询。</p><h2 id="3-索引下推"><a href="#3-索引下推" class="headerlink" title="3 索引下推"></a>3 索引下推</h2><p>索引下推（Index Condition Pushdown）简称ICP，在MySQL5.6的版本中推出。</p><p>ICP主要用于优化使用非聚簇索引的查询语句，可以减少回表次数。对于使用聚簇索引的查询语句，因为不需要回表，所以ICP并没有起到提示性能的效果。</p><p>使用ICP可以减少存储引擎回表的次数，也可以减少服务器从存储引擎接收数据的次数：</p><p>在不使用ICP的情况下，存储引擎通过索引检索到数据，然后返回给服务器，服务器判断数据是否符合条件 。</p><p>在使用ICP的情况下，存储引擎通过索引判断数据是否符合条件，然后返回给服务器。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了索引的数据结构和相关的概念。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>逻辑架构</title>
    <link href="https://momashanhe.com/posts/20250604/133341/"/>
    <id>https://momashanhe.com/posts/20250604/133341/</id>
    <published>2025-06-04T05:33:41.000Z</published>
    <updated>2025-06-04T14:47:43.269Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文了解了关系型数据库的逻辑架构。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-架构图"><a href="#1-架构图" class="headerlink" title="1 架构图"></a>1 架构图</h2><p>架构图如下：<br><img src="/@image/302002/002-20250604134215.jpg" alt="20250604134215-架构图"></p><h2 id="2-分层"><a href="#2-分层" class="headerlink" title="2 分层"></a>2 分层</h2><h3 id="2-1-连接层"><a href="#2-1-连接层" class="headerlink" title="2.1 连接层"></a>2.1 连接层</h3><p>最上层是与客户端连接相关的服务：</p><ul><li>连接管理：负责接收客户端的连接请求，处理客户端的认证信息，验证用户是否有权限连接到数据库服务器。同时，还负责管理连接的生命周期，包括连接的建立以及最终的断开。</li><li>线程管理：为每个客户端连接创建一个专用线程来处理该连接的所有请求和响应。这些线程负责读取客户端发送的查询请求，将查询请求传递给后续的处理层，并将结果返回给客户端。</li></ul><h3 id="2-2-服务层"><a href="#2-2-服务层" class="headerlink" title="2.2 服务层"></a>2.2 服务层</h3><p>第二层架构主要完成大多数的核心服务功能：</p><ul><li>查询解析与优化：解析器会将SQL语句进行词法和语法解析，检查语句是否符合MySQL的语法规则，并将其转换为内部的解析树结构。预处理器则对解析树进行进一步的处理，包括检查语句的语义是否正确，用户是否有足够的权限等。优化器会根据一些规则和算法，对查询语句进行优化，选择最合适的数据访问路径，以提高查询的执行效率。</li><li>缓存机制：包含查询缓存和结果集缓存。查询缓存会存储之前执行的查询语句及其对应的查询结果，当收到新的查询请求时，会先检查查询缓存中是否有相同的查询语句，如果有且其对应的表数据未发生变化，则直接返回缓存中的结果，从而提高查询效率。结果集缓存则是在存储过程和函数等执行时缓存结果集，以供后续调用时快速返回结果。</li></ul><h3 id="2-3-引擎层"><a href="#2-3-引擎层" class="headerlink" title="2.3 引擎层"></a>2.3 引擎层</h3><p>存储引擎层负责数据的存储和提取：</p><ul><li>事务处理：负责处理事务相关的操作，包括事务的提交和回滚。不同的存储引擎对事务的支持程度不同，例如InnoDB引擎支持事务的完整特性，而MyISAM引擎则不支持事务。</li><li>索引管理：负责创建、维护和使用索引，索引是数据库中用于快速检索数据的结构。不同的存储引擎支持不同类型的索引。</li><li>数据缓存：对频繁访问的数据进行缓存，以减少对磁盘的访问次数。当读取数据时，优先从缓存中获取，如果缓存中不存在，则从磁盘读取数据并将其放入缓存中，同时会根据策略管理缓存空间。</li></ul><h3 id="2-4-存储层"><a href="#2-4-存储层" class="headerlink" title="2.4 存储层"></a>2.4 存储层</h3><p>数据存储层主要将数据存储在文件系统上，并完成与存储引擎的交互：</p><ul><li>数据存储与管理：负责将数据以特定的格式持久化存储在磁盘上，并负责数据的物理读写操作。不同的存储引擎有不同的数据存储格式和结构，例如InnoDB引擎采用聚簇索引的存储方式将数据和索引存储在一起，而MyISAM引擎则将数据和索引分开存储在不同的文件中。</li><li>文件系统交互：与底层的文件系统进行交互，处理数据文件的创建、打开、读写和关闭等操作。还会根据数据库的配置和存储引擎的要求，对文件的大小、增长方式等进行管理。</li></ul><h2 id="3-模块"><a href="#3-模块" class="headerlink" title="3 模块"></a>3 模块</h2><h3 id="3-1-Connectors"><a href="#3-1-Connectors" class="headerlink" title="3.1 Connectors"></a>3.1 Connectors</h3><p>连接器支持多种编程语言与SQL建立连接和交互。</p><h3 id="3-2-Management-Serveices-Utilities"><a href="#3-2-Management-Serveices-Utilities" class="headerlink" title="3.2 Management Serveices &amp; Utilities"></a>3.2 Management Serveices &amp; Utilities</h3><p>管理工具包含多种系统管理和控制工具。</p><h3 id="3-3-Connection-Pool"><a href="#3-3-Connection-Pool" class="headerlink" title="3.3 Connection Pool"></a>3.3 Connection Pool</h3><p>连接池用于接收客户端请求，验证客户端的连接，分配客户端线程，并将处理结果响应客户端，以及使用缓存优化查询性能。</p><h3 id="3-4-SQL-Interface"><a href="#3-4-SQL-Interface" class="headerlink" title="3.4 SQL Interface"></a>3.4 SQL Interface</h3><p>接口可以接收客户端SQL命令，返回客户端查询结果。</p><h3 id="3-5-Parser"><a href="#3-5-Parser" class="headerlink" title="3.5 Parser"></a>3.5 Parser</h3><p>解析器可以验证和解析SQL命令，按照不同的操作类型进行分类，做出针对性的转发到后续步骤。</p><h3 id="3-6-Optimizer"><a href="#3-6-Optimizer" class="headerlink" title="3.6 Optimizer"></a>3.6 Optimizer</h3><p>查询优化器可以对查询SQL进行优化，得出最优的策略，告诉后面的程序如何取得查询语句的结果。</p><h3 id="3-7-Cache-Buffer"><a href="#3-7-Cache-Buffer" class="headerlink" title="3.7 Cache &amp; Buffer"></a>3.7 Cache &amp; Buffer</h3><p>查询缓存可以将结果集缓存到内存中，与查询语句的哈希值对应，以后的查询如果命中缓存则直接返回缓存的结果。</p><h3 id="3-8-Pluggable-Storage-Engines"><a href="#3-8-Pluggable-Storage-Engines" class="headerlink" title="3.8 Pluggable Storage Engines"></a>3.8 Pluggable Storage Engines</h3><p>插件式存储引擎提供了一系列标准的管理和服务支持，每个存储引擎都可以按照其需要开发不同的功能。存储引擎是基于表的，而不是基于数据库的。</p><h3 id="3-9-File-System"><a href="#3-9-File-System" class="headerlink" title="3.9 File System"></a>3.9 File System</h3><p>文件存储系统可以将数据永久保存到本地磁盘。</p><h3 id="3-10-Files-Logs"><a href="#3-10-Files-Logs" class="headerlink" title="3.10 Files &amp; Logs"></a>3.10 Files &amp; Logs</h3><p>文件和日志保存了执行的改动，用于进行数据恢复等操作。</p><h2 id="4-执行流程"><a href="#4-执行流程" class="headerlink" title="4 执行流程"></a>4 执行流程</h2><p>执行图示：<br><img src="/@image/302002/002-20250604144913.jpg" alt="20250604144913-执行图示"></p><h3 id="4-1-缓存"><a href="#4-1-缓存" class="headerlink" title="4.1 缓存"></a>4.1 缓存</h3><p>服务器先检查SQL语句是否命中了查询缓存，如果命中了缓存，立即返回缓存中的数据。如果没有命中缓存，则进入下一阶段。</p><p>注意：</p><ul><li>只有相同的查询操作才会命中查询缓存。</li><li>如果查询请求中包含某些系统函数、用户自定义变量和函数、某些系统表，那这个请求就不会被缓存。</li><li>缓存系统会监测涉及到的每张表，如果该表的结构或者数据被修改，就会导致缓存失效并被删除。对于经常更新的数据库来说，查询缓存的命中率非常低。</li></ul><h3 id="4-2-解析"><a href="#4-2-解析" class="headerlink" title="4.2 解析"></a>4.2 解析</h3><p>在解析阶段，数据库首先会检查SQL语句的语法和语义，然后将SQL语句转换为抽象语法树（AST），为后续的优化和执行做准备。</p><p>解析器对SQL语句进行语法分析和语义分析，并最终构建内部表示：</p><ul><li>语法分析：检查SQL语句的语法是否正确，如果发现语法错误，解析器会立即返回错误信息，停止执行。<ul><li>词法分析：将输入的SQL语句分解成单独的词法单元（Token），例如关键字、标识符、操作符等。</li><li>语法分析：根据词法单元构建抽象语法树（AST），表示SQL语句的结构。</li></ul></li><li>语义分析：进一步检查SQL语句的逻辑正确性。<ul><li>对象验证：确保所有引用的数据库对象（表、列、视图等）存在。</li><li>权限检查：验证用户是否有权限访问或操作这些对象。</li><li>数据类型检查：确保操作符和函数的使用符合数据类型的要求。</li></ul></li><li>构建内部表示：在完成语法和语义分析后，解析器会将SQL语句转换为抽象语法树（AST）用于后续的优化和执行。</li></ul><h3 id="4-3-优化"><a href="#4-3-优化" class="headerlink" title="4.3 优化"></a>4.3 优化</h3><p>优化器对SQL语句进行优化，目标是选择最佳的执行计划，以提高查询性能。</p><p>优化过程可以分为逻辑优化和物理优化：</p><ul><li>逻辑优化：包括重新排列查询操作、消除冗余操作等。<ul><li>谓词下推：将过滤条件尽可能先行应用，以减少处理的数据量。</li><li>连接重排：调整表连接的顺序，以优化查询性能。</li></ul></li><li>物理优化：选择具体的执行策略，优化器会评估多个执行计划，选择代价最低的一个。<ul><li>索引选择：选择最合适的索引，以加速数据检索。</li><li>连接算法选择：选择最优的连接算法（嵌套循环、哈希连接、合并连接等）。</li></ul></li></ul><h3 id="4-4-执行"><a href="#4-4-执行" class="headerlink" title="4.4 执行"></a>4.4 执行</h3><p>执行阶段是数据库实际运行优化后的执行计划的过程，最终生成查询结果。</p><p>可以分为三个阶段：</p><ul><li>生成步骤：根据优化阶段选定的执行计划，数据库会生成具体的执行步骤。这些步骤通常包括扫描表、应用过滤条件、执行连接操作等。</li><li>执行步骤：数据库按照执行计划的步骤，逐步执行查询操作。每个操作都会生成中间结果，最终合并成查询结果返回给用户。</li><li>结果返回：执行完成后，数据库会将查询结果返回给用户。对于查询操作，数据库会以表格形式返回查询的结果集。对于修改操作，数据库会返回受影响的行数。</li></ul><h2 id="5-存储引擎"><a href="#5-存储引擎" class="headerlink" title="5 存储引擎"></a>5 存储引擎</h2><h3 id="5-1-定义"><a href="#5-1-定义" class="headerlink" title="5.1 定义"></a>5.1 定义</h3><p>数据库存储引擎是数据库底层软件组件，不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。</p><h3 id="5-2-查看"><a href="#5-2-查看" class="headerlink" title="5.2 查看"></a>5.2 查看</h3><p>MySQL提供了多个不同的存储引擎，不需要在整个服务器中使用同一种存储引擎，针对具体的要求，可以对每一个表使用不同的存储引擎。</p><p>查看可用的数据库引擎和默认引擎：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engines;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> Engine             <span class="operator">|</span> Support <span class="operator">|</span> Comment <span class="operator">|</span> Transactions <span class="operator">|</span> XA   <span class="operator">|</span> Savepoints <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> InnoDB             <span class="operator">|</span> <span class="keyword">DEFAULT</span> <span class="operator">|</span> ...     <span class="operator">|</span> YES          <span class="operator">|</span> YES  <span class="operator">|</span> YES        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MRG_MYISAM         <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MEMORY             <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLACKHOLE          <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MyISAM             <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CSV                <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ARCHIVE            <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PERFORMANCE_SCHEMA <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FEDERATED          <span class="operator">|</span> <span class="keyword">NO</span>      <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NULL</span>         <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>Support列的值表示引擎是否能使用：</p><ul><li>YES表示可以使用。</li><li>NO表示不能使用。</li><li>DEFAULT表示该引擎为当前默认的存储引擎。</li></ul><h3 id="5-3-种类"><a href="#5-3-种类" class="headerlink" title="5.3 种类"></a>5.3 种类</h3><h4 id="5-3-1-InnoDB存储引擎"><a href="#5-3-1-InnoDB存储引擎" class="headerlink" title="5.3.1 InnoDB存储引擎"></a>5.3.1 InnoDB存储引擎</h4><p>InnoDB是MySQL的默认事务型引擎，它被设计用来处理大量的短期事务。此外，InnoDB还支持行级锁，适合高并发情况。</p><p>除非有非常特别的原因需要使用其他的存储引擎，否则应该优先考虑InnoDB引擎。</p><h4 id="5-3-2-MyISAM存储引擎"><a href="#5-3-2-MyISAM存储引擎" class="headerlink" title="5.3.2 MyISAM存储引擎"></a>5.3.2 MyISAM存储引擎</h4><p>MyISAM提供了大量的特性，包括全文索引、压缩、空间函数等，但不支持事务和行级锁。</p><p>MyISAM拥有较高的插入和查询速度，是在数据仓储和其他应用环境下最常使用的存储引擎之一。</p><h4 id="5-3-3-Memory存储引擎"><a href="#5-3-3-Memory存储引擎" class="headerlink" title="5.3.3 Memory存储引擎"></a>5.3.3 Memory存储引擎</h4><p>Memory将数据存储到内存中，可以快速地访问数据，但不支持修改，并且重启以后数据会丢失。</p><p>Memory至少比MyISAM要快一个数量级，使用专业的内存数据库更快，如Redis数据库。</p><h4 id="5-3-4-Archive存储引擎"><a href="#5-3-4-Archive存储引擎" class="headerlink" title="5.3.4 Archive存储引擎"></a>5.3.4 Archive存储引擎</h4><p>Archive只支持插入和查询操作，在MySQL 5.1之前不支持索引。</p><p>Archive适合低访问量大数据等情况，比如日志和数据采集类应用。</p><h3 id="5-4-选择"><a href="#5-4-选择" class="headerlink" title="5.4 选择"></a>5.4 选择</h3><p>不同的存储引擎都有各自的特点，如表所示：</p><table>  <thead>    <tr>      <th>特点</th>      <th>InnoDB</th>      <th>MyISAM</th>      <th>Memory</th>      <th>Archive</th>    </tr>  </thead>  <tbody>    <tr>      <td>存储机制</td>      <td>64TB</td>      <td>256TB</td>      <td>RAM</td>      <td>None</td>    </tr>    <tr>      <td>锁机制</td>      <td>行锁</td>      <td>表锁</td>      <td>表锁</td>      <td>行锁</td>    </tr>    <tr>      <td>事务安全</td>      <td>支持</td>      <td></td>      <td></td>      <td></td>    </tr>    <tr>      <td>B树索引</td>      <td>支持</td>      <td>支持</td>      <td>支持</td>      <td></td>    </tr>    <tr>      <td>哈希索引</td>      <td>支持</td>      <td></td>      <td>支持</td>      <td></td>    </tr>    <tr>      <td>全文索引</td>      <td></td>      <td>支持</td>      <td></td>      <td></td>    </tr>    <tr>      <td>数据缓存</td>      <td>支持</td>      <td></td>      <td>支持</td>      <td></td>    </tr>    <tr>      <td>支持外键</td>      <td>支持</td>      <td></td>      <td></td>      <td></td>    </tr>    <tr>      <td>数据可压缩</td>      <td></td>      <td>支持</td>      <td></td>      <td>支持</td>    </tr>    <tr>      <td>批量插入速度</td>      <td>低</td>      <td>高</td>      <td>高</td>      <td>非常高</td>    </tr>  </tbody></table><p>可以根据以下的原则来选择MySQL存储引擎：</p><ul><li>如果要提供提交和回滚，以及事务安全（ACID）能力，并要求实现并发控制，可以使用InnoDB引擎。</li><li>如果数据表主要用来插入和查询记录，则MyISAM引擎能提供较高的处理效率。</li><li>如果只是临时存放数据，数据量不大，并且不需要较高的数据安全性，可以选择将数据保存在内存中，使用Memory引擎作为临时表，存放查询的中间结果。</li><li>如果只有插入和查询操作，可以选择Archive引擎，支持高并发的插入操作，但是本身并不是事务安全的。</li></ul><p>使用哪一种引擎要根据需要灵活选择，一个数据库中多个表可以使用不同的引擎以满足各种性能和实际需求，使用合适的存储引擎将会提高整个数据库的性能。</p><h3 id="5-5-对比"><a href="#5-5-对比" class="headerlink" title="5.5 对比"></a>5.5 对比</h3><p>对比InnoDB引擎和MyISAM引擎：</p><table>  <tr>    <th>对比项</th>    <th>MyISAM</th>    <th>InnoDB</th>  </tr>  <tr>    <td>主外键</td>    <td>不支持</td>    <td>支持</td>  </tr>  <tr>    <td>事务</td>    <td>不支持</td>    <td>支持</td>  </tr>  <tr>    <td>行表锁</td>    <td>表锁，操作一条记录也会锁整个表，不适合高并发</td>    <td>行锁，操作时只锁某一行，不对其它行有影响，适合高并发</td>  </tr>  <tr>    <td>缓存</td>    <td>缓存索引，不缓存真实数据</td>    <td>缓存索引和真实数据，内存大小对性能有决定性的影响</td>  </tr>  <tr>    <td>表空间</td>    <td>小</td>    <td>大</td>  </tr>  <tr>    <td>关注点</td>    <td>性能</td>    <td>事务</td>  </tr>  <tr>    <td>默认安装</td>    <td>Y</td>    <td>Y</td>  </tr>  <tr>    <td>存储方式</td>    <td>使用.MYD格式存储数据，使用.MYI格式存储索引</td>    <td>使用.FRM格式存储数据和索引</td>  </tr></table>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文了解了关系型数据库的逻辑架构。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>范式</title>
    <link href="https://momashanhe.com/posts/20250531/074050/"/>
    <id>https://momashanhe.com/posts/20250531/074050/</id>
    <published>2025-05-30T23:40:50.000Z</published>
    <updated>2025-06-04T05:35:51.359Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了关系数据库中涉及范式的相关知识。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-定义"><a href="#1-定义" class="headerlink" title="1 定义"></a>1 定义</h2><p>设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。</p><p>但是有些时候一昧的追求范式减少冗余，反而会降低数据读写的效率，这个时候就要反范式，利用空间来换时间。</p><h2 id="2-名词"><a href="#2-名词" class="headerlink" title="2 名词"></a>2 名词</h2><p>想要正确理解范式的知识，必须先对涉及到的概念名词有一定的了解。</p><p>假设有如下两张表：</p><ul><li>学生表：编号，姓名，身份证号，教师编号</li><li>教师表：编号，姓名</li></ul><p>定义：</p><ul><li>实体：可以理解为表，一张表可以看做是一种实体。</li><li>属性：可以理解为表的字段，一个字段可以看做是一个属性。</li><li>元组：可以理解为表的记录，一条记录可以看做是一个元组。</li><li>超键：能唯一标识元组的属性集。对于学生表来说，超键包括（编号），（编号，姓名），（编号，姓名，身份证号）等等。</li><li>候选键：能唯一标识元组的最小属性集，是超键的精简。对于学生表来说，候选键就是（编号）和（身份证号）。</li><li>主键：从候选键选择一个属性集作为主键。对于学生表来说，主键一般是（编号）。</li><li>外键：在其他实体中作为主键的属性集。对于学生表来说，外键是（教师编号）。对于教师表来说，主键是（编号）。</li><li>主属性：所有候选键中的属性。</li><li>非主属性：不在候选键中的属性。</li></ul><h2 id="3-说明"><a href="#3-说明" class="headerlink" title="3 说明"></a>3 说明</h2><p>目前关系数据库有六种范式：</p><ul><li>第一范式（1NF）</li><li>第二范式（2NF）</li><li>第三范式（3NF）</li><li>巴斯-科德范式（BCNF，又称为修正的第三范式）</li><li>第四范式（4NF）</li><li>第五范式（5NF，又称完美范式）</li></ul><p>满足最低要求的范式是第一范式（1NF），在第一范式的基础上进一步满足更多规范要求的称为第二范式（2NF），其余范式以次类推。</p><p>一般说来，数据库只需满足第三范式（3NF）就行了。</p><h3 id="3-1-第一范式（1NF）"><a href="#3-1-第一范式（1NF）" class="headerlink" title="3.1 第一范式（1NF）"></a>3.1 第一范式（1NF）</h3><p>要求每个属性都是原子数据项，即每个属性只包含一个值，并且不能有重复的属性。</p><p>第一范式确保表中的每个属性都是不可分割的基本数据项。</p><p>违背第一范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>      <th>课程</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>      <td>语文;数学</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>      <td>语文</td>    </tr>  </tbody></table><p>在课程中存在多个值的情况，违背了第一范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>      <th>课程</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>      <td>语文</td>    </tr>    <tr>      <td>201010</td>      <td>张三</td>      <td>数学</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>      <td>语文</td>    </tr>  </tbody></table><h3 id="3-2-第二范式（2NF）"><a href="#3-2-第二范式（2NF）" class="headerlink" title="3.2 第二范式（2NF）"></a>3.2 第二范式（2NF）</h3><p>要求在满足第一范式的基础上，非主属性完全依赖候选键，不能部分依赖候选键。</p><p>第二范式确保在候选键为属性组的情况下，表中没有部分依赖问题。</p><p>违背第二范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>      <th>课程</th>      <th>成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>      <td>语文</td>      <td>97</td>    </tr>    <tr>      <td>201010</td>      <td>张三</td>      <td>数学</td>      <td>99</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>      <td>语文</td>      <td>94</td>    </tr>  </tbody></table><p>将编号和课程作为候选键，共同决定成绩，但姓名只依赖编号，存在部分依赖的情况，违背了第二范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>      <th>成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>      <td>97</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>      <td>99</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>      <td>94</td>    </tr>  </tbody></table><p>将编号和姓名单独拆分出来：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>    </tr>  </tbody></table><h3 id="3-3-第三范式（3NF）"><a href="#3-3-第三范式（3NF）" class="headerlink" title="3.3 第三范式（3NF）"></a>3.3 第三范式（3NF）</h3><p>要求在满足第二范式的基础上，非主属性只能依赖主属性，不能依赖其他非主属性。</p><p>第三范式确保表中没有传递依赖问题。</p><p>违背第三范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>      <th>目标</th>      <th>省市</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>      <td>山东大学</td>      <td>山东省</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>      <td>北京大学</td>      <td>北京市</td>    </tr>  </tbody></table><p>将编号作为主键，编号决定报考的目标，报考的目标决定所在的省市，存在传递依赖的情况，违背了第三范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>姓名</th>      <th>目标</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>张三</td>      <td>山东大学</td>    </tr>    <tr>      <td>201011</td>      <td>李四</td>      <td>北京大学</td>    </tr>  </tbody></table><p>将目标和省市单独拆分出来：</p><table>  <thead>    <tr>      <th>目标</th>      <th>省市</th>    </tr>  </thead>  <tbody>    <tr>      <td>山东大学</td>      <td>山东省</td>    </tr>    <tr>      <td>北京大学</td>      <td>北京市</td>    </tr>  </tbody></table><h3 id="3-4-巴斯-科德范式（BCNF）"><a href="#3-4-巴斯-科德范式（BCNF）" class="headerlink" title="3.4 巴斯-科德范式（BCNF）"></a>3.4 巴斯-科德范式（BCNF）</h3><p>要求在满足第三范式的基础上，主属性完全依赖候选键，不能部分依赖候选键。</p><p>巴斯-科德范式确保在候选键为属性组的情况下，表中没有部分依赖和传递依赖问题。</p><p>违背巴斯-科德范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>      <th>教师</th>      <th>成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>      <td>语文老师</td>      <td>93</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>      <td>数学老师</td>      <td>96</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>      <td>语文老师</td>      <td>91</td>    </tr>  </tbody></table><p>将编号和课程作为主键，同时编号和教师作为候选键，都能决定成绩，但是课程也能决定教师，存在主属性部分依赖候选键的情况，违背了巴斯-科德范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>      <th>成绩</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>      <td>93</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>      <td>96</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>      <td>91</td>    </tr>  </tbody></table><p>将课程和教师单独拆分出来：</p><table>  <thead>    <tr>      <th>课程</th>      <th>教师</th>    </tr>  </thead>  <tbody>    <tr>      <td>语文</td>      <td>语文老师</td>    </tr>    <tr>      <td>数学</td>      <td>数学老师</td>    </tr>  </tbody></table><h3 id="3-5-第四范式（4NF）"><a href="#3-5-第四范式（4NF）" class="headerlink" title="3.5 第四范式（4NF）"></a>3.5 第四范式（4NF）</h3><p>要求在满足巴斯-科德范式的基础上，当某个属性的值确定时，只能有一条记录与之对应。</p><p>第四范式确保表中没有多值依赖问题。</p><p>违背第四范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>      <th>爱好</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>      <td>跑步</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>      <td>游泳</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>      <td>游泳</td>    </tr>  </tbody></table><p>将编号作为主键，同时对应多个课程和多个爱好，并且课程和爱好之间没有关联，存在多值依赖的情况，违背了第四范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>    </tr>  </tbody></table><p>将编号和爱好单独拆分出来：</p><table>  <thead>    <tr>      <th>编号</th>      <th>爱好</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>跑步</td>    </tr>    <tr>      <td>201010</td>      <td>游泳</td>    </tr>    <tr>      <td>201011</td>      <td>游泳</td>    </tr>  </tbody></table><h3 id="3-6-第五范式（5NF）"><a href="#3-6-第五范式（5NF）" class="headerlink" title="3.6 第五范式（5NF）"></a>3.6 第五范式（5NF）</h3><p>又称为完美范式，要求在满足第四范式的基础上，不存在任何通过连接操作生成的冗余数据，即不存在多对多关系。</p><p>第五范式确保表中没有连接依赖问题。</p><p>违背第五范式的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>      <th>考试</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>      <td>期中</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>      <td>期末</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>      <td>期末</td>    </tr>  </tbody></table><p>将编号作为主键，同时对应多个课程和多种考试，并且课程和考试之间存在多对多的关系，存在连接依赖的情况，违背了第五范式。</p><p>修改后的数据：</p><table>  <thead>    <tr>      <th>编号</th>      <th>课程</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>语文</td>    </tr>    <tr>      <td>201010</td>      <td>数学</td>    </tr>    <tr>      <td>201011</td>      <td>语文</td>    </tr>  </tbody></table><p>将编号和考试单独拆分出来：</p><table>  <thead>    <tr>      <th>编号</th>      <th>考试</th>    </tr>  </thead>  <tbody>    <tr>      <td>201010</td>      <td>期中</td>    </tr>    <tr>      <td>201010</td>      <td>期末</td>    </tr>    <tr>      <td>201011</td>      <td>期末</td>    </tr>  </tbody></table><h2 id="4-反范式化"><a href="#4-反范式化" class="headerlink" title="4 反范式化"></a>4 反范式化</h2><p>在某些业务场景下，为了更方便快速的查询数据，往往会打破范式的规范。</p><p>反范式化最常见的场景是字段冗余，通过冗余字段可以避免多表联查，大幅提高查询效率。</p><p>冗余字段的特点：</p><ul><li>通常很少修改。</li><li>经常需要查询。</li></ul><h2 id="5-设计原则"><a href="#5-设计原则" class="headerlink" title="5 设计原则"></a>5 设计原则</h2><p>创建数据库的建议：</p><ul><li>库的名称必须控制在32个字符以内，只能使用英文字母、数字和下划线，建议以英文字母开头。</li><li>库名中英文一律小写，不同单词采用下划线分割。须见名知意。</li><li>创建数据库时必须指定字符集，并且字符集只能是utf8或者utf8mb4。</li><li>对于程序连接数据库账号，遵循权限最小原则。使用数据库账号只能在一个DB下使用，不准跨库。</li><li>临时库以<code>tmp_</code>为前缀，并以日期为后缀。备份库以<code>bak_</code>为前缀，并以日期为后缀。</li></ul><p>创建表的建议：</p><ul><li>表和列的名称必须控制在32个字符以内，表名只能使用英文字母、数字和下划线，建议以英文字母开头。</li><li>表名、列名一律小写，不同单词采用下划线分割。须见名知意。</li><li>表名要求有模块名强相关，同一模块的表名尽量使用统一前缀。</li><li>创建表时必须指定字符集，并且字符集只能是utf8或者utf8mb4。</li><li>创建表时必须指定表存储引擎类型。如无特殊需求，一律为InnoDB。</li><li>创建表时必须说明表的comment内容，说明表的作用。</li><li>字段命名应尽可能使用表达实际含义的英文单词或缩写。</li><li>字段为布尔值类型时，命名建议为<code>is_描述</code>格式。</li><li>字段禁止存储图片和文件等大型二进制数据。建议将文件储存在服务器上，数据库只存储文件地址信息。</li><li>表中必须有主键，强制要求主键为id，并设置为int或bigint类型，并且auto_increment自增。</li><li>表中必须有行数据的创建时间字段和最后更新时间字段，便于查问题，特别是核心业务相关的表。</li><li>表中字段尽量都是NOT NULL属性，业务可以根据需要定义DEFAULT值。因为使用NULL值会占用额外存储空间，会导致数据迁移出错和聚合函数计算结果偏差等问题。</li><li>表中存储相同数据的列名和列类型必须一致。相同的字段一般作为关联列，如果查询时关联列类型不一致会自动进行数据类型隐式转换，会造成列上的索引失效，导致查询效率降低。</li><li>临时表用于保留临时结果集，名称以<code>tmp_</code>开头。备份表用于备份或抓取源表快照，名称以<code>bak_</code>开头。临时表和备份表定期清理。</li></ul><p>创建索引的建议：</p><ul><li>主键的名称以<code>pk_</code>开头，唯一键以<code>uni_</code>或<code>uk_</code>开头，普通索引以<code>idx_</code>开头，一律使用小写格式，以字段的名称或缩写作为后缀。</li><li>单个表上的索引个数不能超过6个。</li><li>多考虑建立联合索引，并把区分度最高的字段放在最前面。</li><li>表里不能存在冗余索引。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了关系数据库中涉及范式的相关知识。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理事务</title>
    <link href="https://momashanhe.com/posts/20250525/093123/"/>
    <id>https://momashanhe.com/posts/20250525/093123/</id>
    <published>2025-05-25T01:31:23.000Z</published>
    <updated>2025-05-30T23:28:26.751Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DCL语句管理事务。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>事务是一组逻辑处理单位，可以是执行一条SQL语句，也可以是执行几个SQL语句。</p><p>事务用来保证数据由一种存储情况变为另一种存储情况，组成事务的各个单元要么都执行成功，要么都执行失败。</p><h3 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h3><p>如果只是简单的一条SQL语句的执行，那么是不需要事务的，但在一些复杂的情况下，一个操作会涉及到多条SQL语句的执行，这种情况下就有必要保证所有的操作全部成功或者全部失败。</p><p>比如小明给小红转账的操作，就会涉及到从小明账户扣钱和给小红账户充钱的两个操作：</p><ul><li>只有两个操作都成功执行了整个操作才算成功，这时就可以提交整个事务，状态由转账前变为转账后。</li><li>如果任何一个操作执行失败的话整个操作都要算做失败，这时就需要恢复事务，保证两个账户上的金额和转账前是一样的，状态恢复到转账前。</li></ul><p>事务保证了一组操作的完整性和安全性。</p><h3 id="1-3-存储引擎"><a href="#1-3-存储引擎" class="headerlink" title="1.3 存储引擎"></a>1.3 存储引擎</h3><p>默认使用InnoDB引擎，支持事务。</p><p>使用命令查看数据库支持的存储引擎，以及存储引擎是否支持事务：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engines;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> Engine             <span class="operator">|</span> Support <span class="operator">|</span> Comment <span class="operator">|</span> Transactions <span class="operator">|</span> XA   <span class="operator">|</span> Savepoints <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="operator">|</span> InnoDB             <span class="operator">|</span> <span class="keyword">DEFAULT</span> <span class="operator">|</span> ...     <span class="operator">|</span> YES          <span class="operator">|</span> YES  <span class="operator">|</span> YES        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MRG_MYISAM         <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MEMORY             <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> BLACKHOLE          <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MyISAM             <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CSV                <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ARCHIVE            <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> PERFORMANCE_SCHEMA <span class="operator">|</span> YES     <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> <span class="keyword">NO</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> FEDERATED          <span class="operator">|</span> <span class="keyword">NO</span>      <span class="operator">|</span> ...     <span class="operator">|</span> <span class="keyword">NULL</span>         <span class="operator">|</span> <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------+---------+--------------+------+------------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>Transactions</code>列中显示<code>YES</code>表示支持事务。</p><h3 id="1-4-基本术语"><a href="#1-4-基本术语" class="headerlink" title="1.4 基本术语"></a>1.4 基本术语</h3><p>保存点（Savepoint）指在事务执行前或者事务执行后，数据在数据库里的存储情况，有时也称为状态。</p><p>回退（Rollback）指撤销事务的操作，事务期间执行的操作都将失效，事务恢复到上个状态。</p><p>提交（Commit）指提交事务的操作，事务期间执行的操作全部生效，事务进入新的状态。</p><h3 id="1-5-事务特性"><a href="#1-5-事务特性" class="headerlink" title="1.5 事务特性"></a>1.5 事务特性</h3><p>原子性（Atomicity）指事务包含的所有操作要么全部成功提交，要么全部失败回滚。</p><p>一致性（Consistency）指事务必须使数据库的数据和资源从一个一致性状态变换到另一个一致性状态。</p><p>隔离性（Isolation）指当多个用户并发访问数据库并且操作同一张表时，数据库为每一个用户开启事务，不会被其他事务的操作干扰，多个并发事务之间相互隔离。</p><p>持久性（Durability）指一个事务一旦被提交了，对数据的改变就是永久性的，哪怕数据库遇到故障也不会丢失提交的改动。</p><h3 id="1-6-并发问题"><a href="#1-6-并发问题" class="headerlink" title="1.6 并发问题"></a>1.6 并发问题</h3><p>对事务的操作分为两类：一种是读取事务（查），另一种是修改事务（增删改）。</p><p>单个事务的情况下，不会产生并发问题。如果多个事务在同一时刻操作同一数据可能会影响最终期望的结果，产生并发问题。</p><p>常见的并发问题：</p><ul><li>脏写：更新时更新。事务一更新数据未提交，事务二更新相同数据并提交，事务一回滚，事务二提交的更新数据无效。</li><li>脏读：更新时读取。事务一更新数据未提交，事务二读取数据，事务一回滚，事务二读取的数据无效。</li><li>不可重复读：读取时更新或者删除。事务一读取数据，事务二修改数据或者删除数据，在事务二提交，事务一读取到不同的数据。</li><li>幻读：读取时插入。事务一读取数据，事务二插入数据，在事务二提交，事务一读取到插入的数据。</li></ul><p>更新丢失：</p><ul><li>第一类更新丢失：更新时更新。事务一更新数据并提交，事务二更新相同数据并回滚，事务一提交的更新数据无效。</li><li>第二类更新丢失：更新时更新。事务一更新数据并提交，事务二更新相同数据并提交，事务一提交的更新数据无效。</li></ul><p>数据库不允许第一类更新丢失问题，第二类更新丢失问题无法通过隔离级别解决，一般使用锁解决。</p><h3 id="1-7-隔离级别"><a href="#1-7-隔离级别" class="headerlink" title="1.7 隔离级别"></a>1.7 隔离级别</h3><p>为了解决不同程度的并发问题，SQL标准定义了隔离级别，每个级别都有各自的具体规则。</p><p>主要的隔离级别有四种：</p><ul><li>读未提交（RU，Read Uncommitted）：最低的隔离级别，可以看到未提交事务的执行结果，同时更新相同数据会阻塞。可避免脏写。</li><li>读已提交（RU，Read Committed）：大多数系统的默认隔离级别，但不是MySQL默认隔离级别，只能看到已提交事务的执行结果。可避免脏写、脏读。</li><li>可重复读（RR，Repeatable Read）：MySQL默认隔离级别，在事务执行期间，读取的都是相同的数据。可避免脏写、脏读、不可重复读。</li><li>串行化（S，Serializable）：最高的隔离级别，通过强制事务排序解决并发问题。在每个读操作的数据行增加共享锁，可能导致大量超时和竞争。可避免脏写、脏读、不可重复读、幻读。</li></ul><p>MySQL的默认隔离级别是RR级别，InnoDB存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了幻读的问题。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-自动提交"><a href="#2-1-自动提交" class="headerlink" title="2.1 自动提交"></a>2.1 自动提交</h3><p>查询事务自动提交：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@autocommit</span>;</span><br></pre></td></tr></table></figure><p>开启自动提交：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>关闭自动提交：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="2-2-开启事务"><a href="#2-2-开启事务" class="headerlink" title="2.2 开启事务"></a>2.2 开启事务</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> transaction;</span><br></pre></td></tr></table></figure><p>也可以使用<code>begin;</code>或者<code>begin work;</code>开启事务。</p><h3 id="2-3-提交事务"><a href="#2-3-提交事务" class="headerlink" title="2.3 提交事务"></a>2.3 提交事务</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><p>也可以使用<code>commit work;</code>提交事务。</p><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> student <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">904</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">commit</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-回滚事务"><a href="#2-4-回滚事务" class="headerlink" title="2.4 回滚事务"></a>2.4 回滚事务</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><p>也可以使用<code>rollback work;</code>回滚事务。</p><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">begin</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> student <span class="keyword">set</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">904</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">rollback</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-设置还原点"><a href="#2-5-设置还原点" class="headerlink" title="2.5 设置还原点"></a>2.5 设置还原点</h3><p>还原点必须要在事务内才能使用，否则会产生错误。</p><p>创建还原点：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">savepoint</span> 名称;</span><br></pre></td></tr></table></figure><p>回滚还原点：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> 名称;</span><br></pre></td></tr></table></figure><p>删除还原点：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">release</span> <span class="keyword">savepoint</span> 名称;</span><br></pre></td></tr></table></figure><h3 id="2-6-设置隔离级别"><a href="#2-6-设置隔离级别" class="headerlink" title="2.6 设置隔离级别"></a>2.6 设置隔离级别</h3><p>查看当前事务的隔离级别：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@tx_isolation</span>;</span><br></pre></td></tr></table></figure><p>设置隔离级别：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> tx_isolation <span class="operator">=</span> &quot;隔离级别名称&quot;;</span><br></pre></td></tr></table></figure><p>隔离级别名称：</p><ul><li>Read-Uncommitted：读未提交。</li><li>Read-Committed：读已提交。</li><li>Repeatable-Read：可重复读。</li><li>Serializable：串行化。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DCL语句管理事务。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理用户权限</title>
    <link href="https://momashanhe.com/posts/20250524/212305/"/>
    <id>https://momashanhe.com/posts/20250524/212305/</id>
    <published>2025-05-24T13:23:05.000Z</published>
    <updated>2025-05-29T01:17:33.713Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DCL语句管理用户权限。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-用户"><a href="#1-1-用户" class="headerlink" title="1.1 用户"></a>1.1 用户</h3><p>用户指的是操作和使用数据库的人，使用数据库需要用户先通过用户名和密码进行连接，然后才能进行操作，不同的用户可以设置不同的权限。</p><p>在MySQL数据库中，所有的用户信息都保存在user表中。</p><h3 id="1-2-权限"><a href="#1-2-权限" class="headerlink" title="1.2 权限"></a>1.2 权限</h3><p>权限用来控制用户对数据库的操作，可以限制用户只能访问特定的数据，或者只能执行特定的操作。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-查看用户"><a href="#2-1-查看用户" class="headerlink" title="2.1 查看用户"></a>2.1 查看用户</h3><p>查看user表的结构：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type     <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Host  <span class="operator">|</span> <span class="type">char</span>(<span class="number">60</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span>         <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">User</span>  <span class="operator">|</span> <span class="type">char</span>(<span class="number">32</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span>         <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ...   <span class="operator">|</span> ...      <span class="operator">|</span> ...  <span class="operator">|</span> ... <span class="operator">|</span>         <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">45</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)                  </span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在MySQL数据库中，对用户的管理是通过对应的Host和User共同组成的主键来区分的。</p><p>其中，User代表用户的用户名，Host代表允许访问的客户端地址（IP地址或者是主机地址），使用<code>*</code>表示所有的客户端都可以访问。</p><p>查询user表数据：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> host, <span class="keyword">user</span>, password <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+</span></span><br><span class="line"><span class="operator">|</span> host      <span class="operator">|</span> <span class="keyword">user</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+</span></span><br><span class="line"><span class="operator">|</span> localhost <span class="operator">|</span> root <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ...       <span class="operator">|</span> ...  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在安装MySQL数据库的时候，如果没有创建匿名用户，那么在user表里只有一个root用户。</p><p>在创建新用户或更改密码后需要使用<code>flush privileges;</code>命令刷新权限相关表，否则会出现拒绝访问。也可以重新启动数据库使新设置生效。</p><h3 id="2-2-创建用户"><a href="#2-2-创建用户" class="headerlink" title="2.2 创建用户"></a>2.2 创建用户</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> 用户名@主机地址 identified <span class="keyword">by</span> 明文密码;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>省略<code>@主机地址</code>表示任何IP地址都可以使用这个用户。</li><li>省略<code>identified by 明文密码</code>表示不需要密码就可以登录。</li></ul><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-删除用户"><a href="#2-3-删除用户" class="headerlink" title="2.3 删除用户"></a>2.3 删除用户</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> 用户名@主机地址;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-修改密码"><a href="#2-4-修改密码" class="headerlink" title="2.4 修改密码"></a>2.4 修改密码</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> 用户名@主机地址 identified <span class="keyword">by</span> 明文密码;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-用户授权"><a href="#2-5-用户授权" class="headerlink" title="2.5 用户授权"></a>2.5 用户授权</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 库名.表名 <span class="keyword">to</span> 用户名@主机地址 indentified <span class="keyword">by</span> 明文密码 [<span class="keyword">with</span> <span class="keyword">grant</span> option] [<span class="keyword">with</span> admin option]</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>使用<code>with grant option</code>授权，在取消时会撤销连带的权限。</li><li>使用<code>with admin option</code>授权，在取消时会保留连带的权限。</li></ul><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> (id, name) <span class="keyword">on</span> demo.test <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="2-6-取消授权"><a href="#2-6-取消授权" class="headerlink" title="2.6 取消授权"></a>2.6 取消授权</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 库名.表名 <span class="keyword">from</span> 用户名@主机地址</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">revoke</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">from</span> <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DCL语句管理用户权限。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理触发器</title>
    <link href="https://momashanhe.com/posts/20250524/162541/"/>
    <id>https://momashanhe.com/posts/20250524/162541/</id>
    <published>2025-05-24T08:25:41.000Z</published>
    <updated>2025-05-29T09:27:39.146Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理触发器。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>触发器与存储过程和函数一样，都是由SQL语句和过程式语句组成的代码片段。</p><p>触发器需要由某个事件触发某个操作，这些事件包括增删改的DML操作。当数据库执行这些语句时候，就相当于事件发生了，就会自动激发触发器执行相应的操作。</p><h3 id="1-2-比较"><a href="#1-2-比较" class="headerlink" title="1.2 比较"></a>1.2 比较</h3><p>与存储过程和函数相比，触发器有以下几个特点：</p><ul><li>触发器不需要显示调用，当事件触发时会自动调用。</li><li>触发器没有返回值，其执行结果是直接对表中的数据进行修改或对触发事件进行处理。</li><li>触发器主要用于维护数据的一致性和完整性。</li></ul><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建"><a href="#2-1-创建" class="headerlink" title="2.1 创建"></a>2.1 创建</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> 触发器名称 </span><br><span class="line">触发时间 触发事件 <span class="keyword">on</span> 表名 </span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span> </span><br><span class="line">触发器主体;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>触发器名称：指定触发器的名称。</li><li>触发时间：before表示在事件之前触发，after表示在事件之后触发。</li><li>触发事件：insert表示插入记录时触发，update表示更新记录时触发，delete表示删除记录时触发。</li><li>表名：表示触发器监控的对象。</li><li>触发器主体：触发器的主体部分，可以是单条SQL语句，也可以是被<code>begin</code>和<code>end</code>包裹的复合语句块。</li></ul><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> scoreBeforeInsert</span><br><span class="line">before <span class="keyword">insert</span> <span class="keyword">on</span> score</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score_log (action) <span class="keyword">values</span> (<span class="string">&#x27;insert&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-2-查看"><a href="#2-2-查看" class="headerlink" title="2.2 查看"></a>2.2 查看</h3><p>查看所有触发器：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> triggers;</span><br></pre></td></tr></table></figure><p>查看触发器的创建：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">trigger</span> 触发器名称;</span><br></pre></td></tr></table></figure><h3 id="2-3-修改"><a href="#2-3-修改" class="headerlink" title="2.3 修改"></a>2.3 修改</h3><p>可以通过先删除触发器，然后重新创建触发器的方法实现修改的操作。</p><h3 id="2-4-删除"><a href="#2-4-删除" class="headerlink" title="2.4 删除"></a>2.4 删除</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> 触发器名称;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">trigger</span> scoreBeforeInsert;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理触发器。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理函数</title>
    <link href="https://momashanhe.com/posts/20250523/100841/"/>
    <id>https://momashanhe.com/posts/20250523/100841/</id>
    <published>2025-05-23T02:08:41.000Z</published>
    <updated>2025-05-30T05:24:49.085Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理函数。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>函数是一种与存储过程十分相似的过程式数据库对象。它与存储过程一样，都是由SQL语句和过程式语句组成的代码片段，但函数可以在SQL语句中直接调用。</p><h3 id="1-2-函数与存储过程的区别"><a href="#1-2-函数与存储过程的区别" class="headerlink" title="1.2 函数与存储过程的区别"></a>1.2 函数与存储过程的区别</h3><p>函数不能拥有输出参数，因为函数自身就是输出参数，存储过程可以拥有输出参数。</p><p>函数中必须有返回值，存储过程没有返回值。</p><p>可以直接对函数进行调用而不需要使用call语句，对存储过程的调用需要使用call语句。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建"><a href="#2-1-创建" class="headerlink" title="2.1 创建"></a>2.1 创建</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> 函数名称([参数])</span><br><span class="line"><span class="keyword">returns</span> 类型</span><br><span class="line">函数主体</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>函数名称：指定函数的名称。注意，函数不能与存储过程具有相同的名称。</li><li>参数：指定函数的参数。这里的参数只有名称和类型，不能指定参数类型。</li><li>类型：声明函数返回值的数据类型。</li><li>函数主体：函数的主体部分，和存储主体类似，函数主体还必须包含返回值。在返回值中包含select语句时，只能是一行且只能有一列值。</li></ul><p>创建不带参数的函数：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> showMaxGrade()</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">select</span> <span class="built_in">max</span>(grade) <span class="keyword">from</span> score);</span><br></pre></td></tr></table></figure><p>创建带有参数的函数：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> showStuGrade(stu <span class="type">varchar</span>(<span class="number">45</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">select</span> grade <span class="keyword">from</span> score <span class="keyword">where</span> student <span class="operator">=</span> stu);</span><br></pre></td></tr></table></figure><p>创建带有多个语句的函数：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> showRandGrade()</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span>(<span class="number">5</span>)  </span><br><span class="line"><span class="keyword">begin</span>   </span><br><span class="line">  <span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;  </span><br><span class="line">  <span class="keyword">set</span> i <span class="operator">=</span> <span class="built_in">floor</span>(rand() <span class="operator">*</span> <span class="number">10</span>);  </span><br><span class="line">  <span class="keyword">return</span> i;  </span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h3 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 函数名称([参数]);</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> showMaxGrade();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> showMaxGrade() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span>             <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-查看"><a href="#2-3-查看" class="headerlink" title="2.3 查看"></a>2.3 查看</h3><p>查看所有函数：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">function</span> status;</span><br></pre></td></tr></table></figure><p>查看函数的创建：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">function</span> 函数名称;</span><br></pre></td></tr></table></figure><h3 id="2-4-修改"><a href="#2-4-修改" class="headerlink" title="2.4 修改"></a>2.4 修改</h3><p>可以通过先删除函数，然后重新创建函数的方法实现修改的操作。</p><h3 id="2-5-删除"><a href="#2-5-删除" class="headerlink" title="2.5 删除"></a>2.5 删除</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">function</span> 函数名称;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">function</span> showMaxGrade;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-单行函数"><a href="#3-单行函数" class="headerlink" title="3 单行函数"></a>3 单行函数</h2><p>处理字符串：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>LENGTH(s)</td>      <td>返回字符串s的字节数，和字符集有关</td>    </tr>    <tr>      <td>CONCAT(s1,s2,...,sn)</td>      <td>连接s1,s2,...,sn为一个字符串</td>    </tr>    <tr>      <td>SUBSTR(s,index,len)</td>      <td>返回字符串s从index位置开始的len个字符，位置index从1开始</td>    </tr>    <tr>      <td>LOCATE(substr,s)</td>      <td>返回字符串substr在字符串s中首次出现的位置，位置从1开始，未找到返回0</td>    </tr>  </tbody></table><p>获取日期时间：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>CURDATE() / CURRENT_DATE()</td>      <td>返回当前日期，只包含年月日</td>    </tr>    <tr>      <td>CURTIME() / CURRENT_TIME()</td>      <td>返回当前时间，只包含时分秒</td>    </tr>    <tr>      <td>NOW() / LOCALTIME() / LOCALTIMESTAMP()</td>      <td>返回当前系统日期和时间</td>    </tr>    <tr>      <td>YEAR(date) / MONTH(date) / DAY(date)</td>      <td>返回指定日期的年月日</td>    </tr>    <tr>      <td>HOUR(time) / MINUTE(time) / SECOND(time)</td>      <td>返回指定时间的时分秒</td>    </tr>    <tr>      <td>MONTHNAME(date)</td>      <td>返回指定日期对应的月份</td>    </tr>    <tr>      <td>DAYNAME(date)</td>      <td>返回指定日期对应的星期</td>    </tr>    <tr>      <td>WEEKOFYEAR(date)</td>      <td>返回指定日期是一年中的第几周</td>    </tr>    <tr>      <td>DAYOFYEAR(date)</td>      <td>返回指定日期是一年中的第几天</td>    </tr>    <tr>      <td>DAYOFMONTH(date)</td>      <td>返回指定日期是一月中的第几天</td>    </tr>    <tr>      <td>DAYOFWEEK(date)</td>      <td>返回指定日期是一周中的第几天，1表示周日，2表示周一，以此类推，7表示周六</td>    </tr>  </tbody></table><p>处理日期和时间：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>DATE_FORMAT(date, fmt)</td>      <td>按照fmt格式将日期date转为字符串</td>    </tr>    <tr>      <td>TIME_FORMAT(time, fmt)</td>      <td>按照fmt格式将时间time转为字符串</td>    </tr>    <tr>      <td>STR_TO_DATE(str, fmt)</td>      <td>按照fmt格式将字符串str转为日期时间</td>    </tr>  </tbody></table><p>格式符：</p><table>  <thead>    <tr>      <th>字符</th>      <th>说明</th>    </tr>  </thead>  <tbody>    <tr>      <td>%Y</td>      <td>四位数字表示年份</td>    </tr>    <tr>      <td>%m</td>      <td>两位数字表示月份</td>    </tr>    <tr>      <td>%d</td>      <td>两位数字表示月中的天数</td>    </tr>    <tr>      <td>%H</td>      <td>两位数字表示24小时制的小时数</td>    </tr>    <tr>      <td>%i</td>      <td>两位数字表示分钟数</td>    </tr>    <tr>      <td>%s</td>      <td>两位数字表示秒数</td>    </tr>  </tbody></table><p>流程控制：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>IF(value,value1,value2)</td>      <td>如果value为TRUE，则返回value1，否则返回value2</td>    </tr>    <tr>      <td>IFNULL(value1, value2)</td>      <td>如果value1不为NULL，则返回value1，否则返回value2</td>    </tr>    <tr>      <td>NULLIF(value1,value2)</td>      <td>比较两个字符串，如果value1与value2相等，则返回NULL，否则返回value1</td>    </tr>    <tr>      <td>CASE WHEN 条件1 THEN 值1 ... [ELSE 值1] END</td>      <td>依次判断条件并返回对应的值，相当于IF-ELSE判断语句</td>    </tr>    <tr>      <td>CASE 表达式 WHEN 条件1 THEN 值1 ... [ELSE 值n] END</td>      <td>依次判断表达式和条件是否相等并返回对应的值，相当于SWITCH-CASE判断语句</td>    </tr>  </tbody></table><p>加密和解密：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>PASSWORD(str)</td>      <td>返回字符串str的加密版本，加密结果不可逆，常用于密码加密</td>    </tr>    <tr>      <td>MD5(str)</td>      <td>返回字符串str经过MD5加密后的值，若参数为NULL，则会返回NULL</td>    </tr>    <tr>      <td>SHA(str)</td>      <td>返回字符串str经过SHA加密后的值，若参数为NULL，则会返回NULL，比MD5更加安全</td>    </tr>  </tbody></table><p>获取信息：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>VERSION()</td>      <td>返回当前的版本号</td>    </tr>    <tr>      <td>CONNECTION_ID()</td>      <td>返回当前的连接数</td>    </tr>    <tr>      <td>DATABASE() / SCHEMA()</td>      <td>返回当前连接的数据库</td>    </tr>    <tr>      <td>USER() / CURRENT_USER()</td>      <td>返回当前连接的用户名</td>    </tr>  </tbody></table><h2 id="4-聚合函数"><a href="#4-聚合函数" class="headerlink" title="4 聚合函数"></a>4 聚合函数</h2><p>聚合函数常用于分组后的处理：</p><table>  <thead>    <tr>      <th>函数</th>      <th>用法</th>    </tr>  </thead>  <tbody>    <tr>      <td>AVG(column)</td>      <td>对数值型数据求平均值</td>    </tr>    <tr>      <td>SUM(column)</td>      <td>对数值型数据求和</td>    </tr>    <tr>      <td>MIN(column)</td>      <td>对任意类型的数据求最小值</td>    </tr>    <tr>      <td>MAX(column)</td>      <td>对任意类型的数据求最大值</td>    </tr>    <tr>      <td>COUNT(column)</td>      <td>统计任意类型的数据记录总数</td>    </tr>  </tbody></table><p>比较COUNT(*)&#x2F;COUNT(1)&#x2F;COUNT(column)区别：</p><ul><li>对于MyISAM引擎的表没有区别，对于Innodb引擎的表有些区别。</li><li>对于Innodb引擎的表，使用COUNT(*)和COUNT(1)的时间复杂度是O(n)，优于使用COUNT(column)的时间复杂度。</li><li>使用COUNT(*)和COUNT(1)会统计值为NULL的行，使用COUNT(column)不会统计值为NULL的行。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理函数。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理存储过程</title>
    <link href="https://momashanhe.com/posts/20250522/160327/"/>
    <id>https://momashanhe.com/posts/20250522/160327/</id>
    <published>2025-05-22T08:03:27.000Z</published>
    <updated>2025-05-29T09:21:47.517Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理存储过程。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>存储过程是一组为了完成特定功能的SQL语句集合。</p><p>将常用或复杂的工作预先用SQL语句写好，将这些SQL存储起来，这个过程经过编译和优化后存储在数据库服务器中，因此称为存储过程。</p><h3 id="1-2-优点"><a href="#1-2-优点" class="headerlink" title="1.2 优点"></a>1.2 优点</h3><p>性能方面：</p><ul><li>减少网络通信：把多条SQL语句封装成存储过程，客户端调用时只需发送一个调用命令，避免逐条发送SQL语句产生的大量网络通信，减少网络延迟和带宽占用。</li><li>预编译和缓存：存储过程首次调用时被预编译并缓存，后续调用直接使用缓存的编译结果，无需重复编译，提高执行效率。</li></ul><p>安全方面：</p><ul><li>权限控制：可对存储过程设置权限，用户获得执行特定存储过程的权限后，无需拥有对底层表的直接访问权限，限制用户对数据库的访问范围，降低数据被错误修改或泄露风险。</li><li>封装敏感操作：将复杂、敏感的数据操作逻辑（如涉及多个表更新的事务、核心商业机密计算等）封装在存储过程内部，其代码在服务器端执行，不易被篡改或被恶意用户获取敏感信息。</li></ul><p>维护方面：</p><ul><li>代码重用：存储过程可被多个应用程序或用户调用，避免在每个应用程序中重复编写相同的SQL代码，提高代码可维护性。</li><li>集中管理：数据库逻辑集中在服务器端，修改业务逻辑时，只需在服务器端修改存储过程，所有依赖该存储过程的应用程序都能自动使用新的逻辑，减少维护成本。</li></ul><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建"><a href="#2-1-创建" class="headerlink" title="2.1 创建"></a>2.1 创建</h3><h4 id="2-1-1-基础"><a href="#2-1-1-基础" class="headerlink" title="2.1.1 基础"></a>2.1.1 基础</h4><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> 存储过程名称([参数])</span><br><span class="line">存储过程主体</span><br></pre></td></tr></table></figure><p>如果开启了二进制日志会导致执行失败，有两种解决办法：</p><ul><li><p>使用命令：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_bin_trust_function_creators <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件：</p><figure class="highlight ini"><figcaption><span>my.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log_bin_trust_function_creators</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><p>说明：</p><ul><li>存储过程名称：存储过程的名称，默认在当前数据库中创建，可以通过<code>数据库名.存储过程名</code>指定数据库创建存储过程。</li><li>参数：存储过程的参数列表。</li><li>存储过程主体：存储过程的主体部分，包含在过程调用的时候必须执行的SQL语句。可以是单条SQL语句，也可以是被<code>begin</code>和<code>end</code>包裹的复合语句块。</li></ul><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> showScore()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h4 id="2-1-2-参数"><a href="#2-1-2-参数" class="headerlink" title="2.1.2 参数"></a>2.1.2 参数</h4><p>参数的格式如下：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">in</span><span class="operator">|</span><span class="keyword">out</span><span class="operator">|</span><span class="keyword">inout</span>] 参数名 参数类型</span><br></pre></td></tr></table></figure><p>支持三种类型的参数：</p><ul><li>输入参数：用in关键字标识，可以传递存储过程。</li><li>输出参数：用out关键字标识，用于存储过程需要返回操作结果的情形。</li><li>输入&#x2F;输出参数：用inout关键字标识，既可以充当输入参数也可以充当输出参数。</li></ul><p>需要注意的是，参数的取名不要与数据表的列名相同，多个参数时需要用逗号分隔，没有参数时需要保留括号。</p><h4 id="2-1-3-关键字"><a href="#2-1-3-关键字" class="headerlink" title="2.1.3 关键字"></a>2.1.3 关键字</h4><p>常用关键字：</p><ul><li>delimiter：修改语句结束字符。不建议使用<code>;</code>符号，因为这是默认结束字符，该符号后面的存储过程不会执行。也不建议使用<code>\</code>符号，该符号是转义字符。</li><li>begin：存储过程开始符号。</li><li>end：存储过程结束符号。</li><li>set：变量赋值。</li><li>declare：变量定义。</li></ul><h4 id="2-1-4-流程控制"><a href="#2-1-4-流程控制" class="headerlink" title="2.1.4 流程控制"></a>2.1.4 流程控制</h4><h5 id="2-1-4-1-判断语句"><a href="#2-1-4-1-判断语句" class="headerlink" title="2.1.4.1 判断语句"></a>2.1.4.1 判断语句</h5><p>if语句：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if 条件 <span class="keyword">then</span> 命令</span><br><span class="line">[elseif 条件 <span class="keyword">then</span> 命令]</span><br><span class="line">[<span class="keyword">else</span> 命令]</span><br><span class="line"><span class="keyword">end</span> if;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> fixSex(<span class="keyword">in</span> id <span class="type">int</span>, <span class="keyword">in</span> sex <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  if sex <span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  elseif sex <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;未知&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  <span class="keyword">end</span> if;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>case语句：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 变量</span><br><span class="line"><span class="keyword">when</span> 条件 <span class="keyword">then</span> 命令</span><br><span class="line">[...]</span><br><span class="line"><span class="keyword">else</span> 命令</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">case</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> fixSex(<span class="keyword">in</span> id <span class="type">int</span>, <span class="keyword">in</span> sex <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">case</span> sex</span><br><span class="line">  <span class="keyword">when</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  <span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">update</span> student s <span class="keyword">set</span> s.sex <span class="operator">=</span> <span class="string">&#x27;未知&#x27;</span> <span class="keyword">where</span> s.id <span class="operator">=</span> id;</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h5 id="2-1-4-2-循环语句"><a href="#2-1-4-2-循环语句" class="headerlink" title="2.1.4.2 循环语句"></a>2.1.4.2 循环语句</h5><p>while语句，当条件成立时执行循环：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while 条件 do</span><br><span class="line">命令</span><br><span class="line"><span class="keyword">end</span> while;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> addStudent(<span class="keyword">in</span> <span class="keyword">start</span> <span class="type">int</span>, <span class="keyword">in</span> num <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">  while i <span class="operator">&lt;</span> num do</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(id) <span class="keyword">values</span> (<span class="keyword">start</span> <span class="operator">+</span> i);</span><br><span class="line">    <span class="keyword">set</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">end</span> while;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>repeat语句，当条件成立时结束循环：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">repeat</span><br><span class="line">命令</span><br><span class="line">until 条件</span><br><span class="line"><span class="keyword">end</span> repeat;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> addStudent(<span class="keyword">in</span> <span class="keyword">start</span> <span class="type">int</span>, <span class="keyword">in</span> num <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">  repeat</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(id) <span class="keyword">values</span> (<span class="keyword">start</span> <span class="operator">+</span> i);</span><br><span class="line">    <span class="keyword">set</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    until i <span class="operator">&gt;=</span> num</span><br><span class="line">  <span class="keyword">end</span> repeat;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><p>loop语句，可以在循环里判断，可以使用leave跳出循环，也可以使用iterate结束循环：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">循环名称: loop</span><br><span class="line">命令</span><br><span class="line">if 条件 <span class="keyword">then</span></span><br><span class="line">leave 循环名称;</span><br><span class="line">iterate 循环名称;</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"><span class="keyword">end</span> loop 循环名称;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> addStudent(<span class="keyword">in</span> <span class="keyword">start</span> <span class="type">int</span>, <span class="keyword">in</span> num <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">declare</span> i <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">  ADD_STUDENT: loop</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(id) <span class="keyword">values</span> (<span class="keyword">start</span> <span class="operator">+</span> i);</span><br><span class="line">    <span class="keyword">set</span> i <span class="operator">=</span> i <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    if i <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">      iterate ADD_STUDENT;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    if i <span class="operator">&gt;=</span> num <span class="keyword">then</span></span><br><span class="line">      leave ADD_STUDENT;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">  <span class="keyword">end</span> loop ADD_STUDENT;</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h3 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> 存储过程名称([参数]);</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">call</span> showScore();</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> 孙七    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">94</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-查看"><a href="#2-3-查看" class="headerlink" title="2.3 查看"></a>2.3 查看</h3><p>查看所有存储过程：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">procedure</span> status;</span><br></pre></td></tr></table></figure><p>查看存储过程的创建：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">procedure</span> 存储过程名称;</span><br></pre></td></tr></table></figure><h3 id="2-4-修改"><a href="#2-4-修改" class="headerlink" title="2.4 修改"></a>2.4 修改</h3><p>可以通过先删除存储过程，然后重新创建存储过程的方法实现修改的操作。</p><h3 id="2-5-删除"><a href="#2-5-删除" class="headerlink" title="2.5 删除"></a>2.5 删除</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> 存储过程名称;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">procedure</span> showScore;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理存储过程。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理视图</title>
    <link href="https://momashanhe.com/posts/20250522/113208/"/>
    <id>https://momashanhe.com/posts/20250522/113208/</id>
    <published>2025-05-22T03:32:08.000Z</published>
    <updated>2025-05-22T05:37:35.269Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理视图。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>视图是从表或者视图中导出的虚拟表，包含一系列带有名称的数据列和若干条数据行。</p><h3 id="1-2-特点"><a href="#1-2-特点" class="headerlink" title="1.2 特点"></a>1.2 特点</h3><p>视图不是数据库中真实的表，而是一张虚拟表，其结构和数据是建立在对数据中真实表的查询基础上的。</p><p>视图是查看数据表的一种方法，可以查询数据表中某些列构成的数据，只是一些SQL语句的集合。从安全的角度来看，视图的数据安全性更高，使用视图的用户不接触数据表，不知道表结构。</p><p>视图的建立和删除只影响视图本身，不影响对应的基本表。</p><h3 id="1-3-注意"><a href="#1-3-注意" class="headerlink" title="1.3 注意"></a>1.3 注意</h3><p>视图不包含数据，所以每次使用视图时，都必须执行查询操作。</p><p>如果用多个连接和过滤条件创建了复杂的视图，可能会发现系统运行性能下降得十分严重。在部署大量视图应用时，应该进行系统测试。</p><p>修改视图数据的语句实际上是通过修改表的数据实现的，对于可修改的视图，视图中的行和基本表的行之间必须具有一对一的关系。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建"><a href="#2-1-创建" class="headerlink" title="2.1 创建"></a>2.1 创建</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 (列<span class="number">1</span>, 列<span class="number">2</span>, ..., 列n) <span class="keyword">as</span> 查询语句;</span><br></pre></td></tr></table></figure><p>列名可以任意取名，但数量必须和查询的列名相等，如果不指明视图的列名，默认使用查询语句的列名。</p><p>创建一个简单的视图：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">view</span> score_view <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>创建视图并指定列：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">view</span> score_view (编号, 学生, 科目, 成绩) <span class="keyword">as</span> <span class="keyword">select</span> id, student, course, grade <span class="keyword">from</span> score;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-查看"><a href="#2-2-查看" class="headerlink" title="2.2 查看"></a>2.2 查看</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> 视图名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> score_view;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field  <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> 编号   <span class="operator">|</span> <span class="type">int</span>(<span class="number">10</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 学生   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 科目   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 成绩   <span class="operator">|</span> <span class="type">int</span>(<span class="number">10</span>)     <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>Field：列名。</li><li>Type：类型。</li><li>Null：表示该列是否可以存储NULL值。</li><li>Key：表示该列是否已编制索引。PRI表示该列是主键的一部分，UNI表示该列是UNIQUE索引的一部分，MUL表示在列中某个给定值允许出现多次。</li><li>Default：表示该列是否有默认值，如果有，值是多少。</li><li>Extra：表示可以获取的与给定列有关的附加信息，如：AUTO_INCREMENT等。</li></ul><h3 id="2-3-修改"><a href="#2-3-修改" class="headerlink" title="2.3 修改"></a>2.3 修改</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> 视图名 (列<span class="number">1</span>, 列<span class="number">2</span>, ..., 列n) <span class="keyword">as</span> 查询语句;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">view</span> score_view (学生, 课程, 成绩) <span class="keyword">as</span> <span class="keyword">select</span> student, course, grade <span class="keyword">from</span> score;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-删除"><a href="#2-4-删除" class="headerlink" title="2.4 删除"></a>2.4 删除</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">view</span> score_view;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理视图。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>查询数据</title>
    <link href="https://momashanhe.com/posts/20250521/151347/"/>
    <id>https://momashanhe.com/posts/20250521/151347/</id>
    <published>2025-05-21T07:13:47.000Z</published>
    <updated>2025-05-30T05:25:00.864Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DQL语句查询数据。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-查询"><a href="#1-查询" class="headerlink" title="1 查询"></a>1 查询</h2><p>查询数据：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">distinct</span>] 列<span class="number">1</span> [<span class="keyword">as</span> <span class="string">&#x27;别名1&#x27;</span>], ..., 列n [<span class="keyword">as</span> <span class="string">&#x27;别名n&#x27;</span>]</span><br><span class="line"><span class="keyword">from</span> 表名</span><br><span class="line">[<span class="keyword">where</span> 表达式]</span><br><span class="line">[<span class="keyword">group</span> <span class="keyword">by</span> 表达式]</span><br><span class="line">[<span class="keyword">having</span> 表达式]</span><br><span class="line">[<span class="keyword">order</span> <span class="keyword">by</span> 表达式]</span><br><span class="line">[limit 起始编号, 查询条数];</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>select：指定查询的字段，多个字段用<code>,</code>分隔，全部字段使用<code>*</code>号代替，使用<code>distinct</code>关键字对结果去重，使用<code>as</code>关键字设置结果显示的别名，可以省略<code>as</code>关键字。</li><li>from：指定查询的表，可以是单个或多个，多个表名用<code>,</code>分隔。</li><li>where：可选，指定查询的条件。</li><li>group by：可选，指定对结果按哪些字段分组。</li><li>having：可选，指定分组后查询的条件，用于使用聚合函数的查询条件。</li><li>order by：可选，指定排序的方式，使用<code>asc</code>按升序排列，使用<code>desc</code>按降序排列，默认按升序排列。</li><li>limit：可选，指定查询的起始编号和查询条数，起始编号可以省略，默认从0开始查询。</li></ul><p>查询虚拟表，虚拟表可以省略：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span> <span class="operator">+</span> <span class="number">1</span> <span class="keyword">as</span> sum <span class="keyword">from</span> dual;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+</span></span><br><span class="line"><span class="operator">|</span> sum <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询所有字段：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> 孙七    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">94</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询指定字段：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> student, course, grade <span class="keyword">from</span> score;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙七    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">94</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 周八    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 周八    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 吴九    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 吴九    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+--------+-------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询课程并去重：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">distinct</span> course <span class="keyword">from</span> score;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> course <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> 计算机 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 英语   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 中文   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询指定字段并设置显示别名：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> student <span class="string">&#x27;姓名&#x27;</span>, course <span class="string">&#x27;课程&#x27;</span>, grade <span class="string">&#x27;成绩&#x27;</span> <span class="keyword">from</span> score;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+------+</span></span><br><span class="line"><span class="operator">|</span> 姓名 <span class="operator">|</span> 课程   <span class="operator">|</span> 成绩 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+------+</span></span><br><span class="line"><span class="operator">|</span> 张三 <span class="operator">|</span> 计算机 <span class="operator">|</span>   <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 张三 <span class="operator">|</span> 英语   <span class="operator">|</span>   <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李四 <span class="operator">|</span> 计算机 <span class="operator">|</span>   <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李四 <span class="operator">|</span> 中文   <span class="operator">|</span>   <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 王五 <span class="operator">|</span> 中文   <span class="operator">|</span>   <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六 <span class="operator">|</span> 计算机 <span class="operator">|</span>   <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六 <span class="operator">|</span> 英语   <span class="operator">|</span>   <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 赵六 <span class="operator">|</span> 中文   <span class="operator">|</span>   <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙七 <span class="operator">|</span> 英语   <span class="operator">|</span>   <span class="number">94</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 周八 <span class="operator">|</span> 计算机 <span class="operator">|</span>   <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 周八 <span class="operator">|</span> 英语   <span class="operator">|</span>   <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 吴九 <span class="operator">|</span> 计算机 <span class="operator">|</span>   <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 吴九 <span class="operator">|</span> 中文   <span class="operator">|</span>   <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+--------+------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询指定条数的数据：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score limit <span class="number">5</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询课程的成绩并从高到低排序：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score <span class="keyword">where</span> course <span class="operator">=</span> <span class="string">&#x27;中文&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> grade <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询成绩并按课程分组，最后计算每个课程的平均分：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> course, <span class="built_in">avg</span>(grade) <span class="keyword">from</span> score <span class="keyword">group</span> <span class="keyword">by</span> course;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> course <span class="operator">|</span> <span class="built_in">avg</span>(grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> 中文   <span class="operator">|</span> <span class="number">65.2500</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 英语   <span class="operator">|</span> <span class="number">81.0000</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 计算机 <span class="operator">|</span> <span class="number">79.2000</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询成绩并按课程分组，最后计算每个课程的平均分，只显示平均分大于70的结果：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> course, <span class="built_in">avg</span>(grade) <span class="keyword">from</span> score <span class="keyword">group</span> <span class="keyword">by</span> course <span class="keyword">having</span> <span class="built_in">avg</span>(grade) <span class="operator">&gt;</span> <span class="number">70</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> course <span class="operator">|</span> <span class="built_in">avg</span>(grade) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="operator">|</span> 英语   <span class="operator">|</span> <span class="number">81.0000</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 计算机 <span class="operator">|</span> <span class="number">79.2000</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询计算机课程的成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score <span class="keyword">where</span> course <span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-连接查询"><a href="#2-连接查询" class="headerlink" title="2 连接查询"></a>2 连接查询</h2><h3 id="2-1-内连接查询"><a href="#2-1-内连接查询" class="headerlink" title="2.1 内连接查询"></a>2.1 内连接查询</h3><p>内连接查询返回的是同时满足两个结果集的记录。</p><p>使用<code>inner join</code>内连接两个表，可以省略<code>inner</code>关键字。</p><p>查询学生信息以及计算机课程的成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> stu.<span class="operator">*</span>, sco.course, sco.grade</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> student stu</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">join</span> score sco <span class="keyword">on</span> stu.name <span class="operator">=</span> sco.student <span class="keyword">and</span> sco.course <span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> name <span class="operator">|</span> sex <span class="operator">|</span> birth <span class="operator">|</span> department <span class="operator">|</span> address      <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> 张三 <span class="operator">|</span> 女  <span class="operator">|</span>  <span class="number">1990</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 湖南省永州市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> 李四 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1990</span> <span class="operator">|</span> 英语系     <span class="operator">|</span> 辽宁省阜新市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span> <span class="operator">|</span> 周八 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1986</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 北京市昌平区 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span> <span class="operator">|</span> 吴九 <span class="operator">|</span> 女  <span class="operator">|</span>  <span class="number">1996</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 湖北省武汉市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>结果仅显示有计算机课程成绩的记录，没有成绩的不显示。</p><h3 id="2-2-外连接查询"><a href="#2-2-外连接查询" class="headerlink" title="2.2 外连接查询"></a>2.2 外连接查询</h3><p>外连接分为左外连接和右外连接，分别以左表和右表作为主表匹配，保留主表中存在的数据。</p><p>使用<code>left join</code>建立左外连接，使用<code>right join</code>建立右外连接。</p><p>查询学生信息以及计算机课程的成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> stu.<span class="operator">*</span>, sco.course, sco.grade</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">from</span> student stu</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">left</span> <span class="keyword">join</span> score sco <span class="keyword">on</span> stu.name <span class="operator">=</span> sco.student <span class="keyword">and</span> sco.course <span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> name <span class="operator">|</span> sex <span class="operator">|</span> birth <span class="operator">|</span> department <span class="operator">|</span> address      <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> 张三 <span class="operator">|</span> 女  <span class="operator">|</span>  <span class="number">1990</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 湖南省永州市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> 李四 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1990</span> <span class="operator">|</span> 英语系     <span class="operator">|</span> 辽宁省阜新市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">106</span> <span class="operator">|</span> 周八 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1986</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 北京市昌平区 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">107</span> <span class="operator">|</span> 吴九 <span class="operator">|</span> 女  <span class="operator">|</span>  <span class="number">1996</span> <span class="operator">|</span> 中文系     <span class="operator">|</span> 湖北省武汉市 <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span> <span class="operator">|</span> 王五 <span class="operator">|</span> 女  <span class="operator">|</span>  <span class="number">1991</span> <span class="operator">|</span> 英语系     <span class="operator">|</span> 福建省厦门市 <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">104</span> <span class="operator">|</span> 王六 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1988</span> <span class="operator">|</span> 计算机系   <span class="operator">|</span> 湖南省衡阳市 <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">105</span> <span class="operator">|</span> 孙七 <span class="operator">|</span> 男  <span class="operator">|</span>  <span class="number">1985</span> <span class="operator">|</span> 计算机系   <span class="operator">|</span> 北京市海淀区 <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+------+-----+-------+------------+--------------+--------+-------+</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>结果仅显示有计算机课程成绩的记录，没有成绩的数据使用Null表示。</p><h2 id="3-子查询"><a href="#3-子查询" class="headerlink" title="3 子查询"></a>3 子查询</h2><p>子查询指一个查询语句嵌套在另一个查询语句内部的查询，子查询结果作为外层另一个查询的过滤条件，查询可以基于一个表或者多个表。</p><h3 id="3-1-in子查询"><a href="#3-1-in子查询" class="headerlink" title="3.1 in子查询"></a>3.1 in子查询</h3><p>in子查询主要用于判断指定字段的值是否存在于子查询的结果集中。</p><p>如果子查询的记录较少，主查询的记录较多时使用in，因为这时用到了主表上的索引。</p><p>查询所有英语系的学生成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score <span class="keyword">where</span> student <span class="keyword">in</span> (<span class="keyword">select</span> name <span class="keyword">from</span> student <span class="keyword">where</span> department <span class="operator">=</span> <span class="string">&#x27;英语系&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-exists子查询"><a href="#3-2-exists子查询" class="headerlink" title="3.2 exists子查询"></a>3.2 exists子查询</h3><p>exists子查询主要用于判断子查询的结果集是否为空。</p><p>如果子查询的记录较多，主查询的记录较少时使用exists，因为这时用到了子表上的索引。</p><p>查询是否存在数学系的学生成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> id <span class="keyword">from</span> student <span class="keyword">where</span> department <span class="operator">=</span> <span class="string">&#x27;数学系&#x27;</span>);</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询是否存在英语系的学生成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score sco <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> stu.id <span class="keyword">from</span> student stu <span class="keyword">where</span> stu.department <span class="operator">=</span> <span class="string">&#x27;英语系&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">92</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> 赵六    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">73</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> 孙七    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">94</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span> <span class="operator">|</span> 周八    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">85</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">90</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span> <span class="operator">|</span> 吴九    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">13</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>查询所有英语系的学生成绩：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score sco <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> stu.id <span class="keyword">from</span> student stu <span class="keyword">where</span> sco.student <span class="operator">=</span> stu.name <span class="keyword">and</span> stu.department <span class="operator">=</span> <span class="string">&#x27;英语系&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">48</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 李四    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 王五    <span class="operator">|</span> 中文   <span class="operator">|</span>    <span class="number">95</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-比较运算符子查询"><a href="#3-3-比较运算符子查询" class="headerlink" title="3.3 比较运算符子查询"></a>3.3 比较运算符子查询</h3><p>使用比较运算符判断子查询是否满足：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> score sco <span class="keyword">where</span> sco.student <span class="operator">=</span> (<span class="keyword">select</span> stu.name <span class="keyword">from</span> student stu <span class="keyword">where</span> stu.id <span class="operator">=</span> <span class="number">101</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> student <span class="operator">|</span> course <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 计算机 <span class="operator">|</span>    <span class="number">98</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 张三    <span class="operator">|</span> 英语   <span class="operator">|</span>    <span class="number">53</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------+--------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DQL语句查询数据。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理数据</title>
    <link href="https://momashanhe.com/posts/20250520/130426/"/>
    <id>https://momashanhe.com/posts/20250520/130426/</id>
    <published>2025-05-20T05:04:26.000Z</published>
    <updated>2025-05-26T02:41:57.102Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DML语句管理数据。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-插入"><a href="#1-插入" class="headerlink" title="1 插入"></a>1 插入</h2><p>通过传入数据插入：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 [(列名<span class="number">1</span>, ..., 列名n)]</span><br><span class="line"><span class="keyword">values</span> (值<span class="number">1</span>, ..., 值n);</span><br></pre></td></tr></table></figure><p>通过查询数据插入：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 [(列<span class="number">1</span>, ..., 列n)]</span><br><span class="line"><span class="keyword">select</span> 列<span class="number">1</span>, ..., 列n <span class="keyword">from</span> 目标表;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> score <span class="keyword">values</span> (<span class="keyword">null</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;计算机&#x27;</span>, <span class="number">98</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-更新"><a href="#2-更新" class="headerlink" title="2 更新"></a>2 更新</h2><p>更新数据：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名</span><br><span class="line"><span class="keyword">set</span> 字段<span class="number">1</span> <span class="operator">=</span> 值<span class="number">1</span>, ..., 字段n <span class="operator">=</span> 值n</span><br><span class="line">[<span class="keyword">where</span> 表达式];</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> score <span class="keyword">set</span> grade <span class="operator">=</span> <span class="number">99</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span> Changed: <span class="number">1</span> Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-删除"><a href="#3-删除" class="headerlink" title="3 删除"></a>3 删除</h2><p>删除数据：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名</span><br><span class="line">[<span class="keyword">where</span> 表达式];</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> score <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DML语句管理数据。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>使用索引</title>
    <link href="https://momashanhe.com/posts/20250519/203501/"/>
    <id>https://momashanhe.com/posts/20250519/203501/</id>
    <published>2025-05-19T12:35:01.000Z</published>
    <updated>2025-05-21T06:58:22.482Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句使用索引。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>索引是一个排序的列表，存储着索引的值和包含这个值的数据所在行的物理地址。</p><p>在数据十分庞大的时候，使用索引可以大大加快查询速度。这是因为使用索引后不需要扫描全表定位数据，而是通过索引表找到数据对应的物理地址然后访问数据。</p><h3 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h3><p>索引的主要功能是排序和筛选。</p><h3 id="1-3-优缺点"><a href="#1-3-优缺点" class="headerlink" title="1.3 优缺点"></a>1.3 优缺点</h3><p>优点：</p><ul><li>可以快速检索，减少I&#x2F;O次数，加快检索速度。</li><li>在分组和排序的时候如果使用索引，可以加快分组和排序。</li></ul><p>缺点：</p><ul><li>索引本身也是表，因此会占用存储空间，一般来说，索引表占用的空间的数据表的1.5倍。</li><li>索引表的维护和创建需要时间成本，这个成本随着数据量增大而增大。</li><li>构建索引会降低数据表的修改操作（删除，添加，修改）的效率，因为在修改数据表的同时还需要修改索引表。</li></ul><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-主键索引"><a href="#2-1-主键索引" class="headerlink" title="2.1 主键索引"></a>2.1 主键索引</h3><h4 id="2-1-1-定义"><a href="#2-1-1-定义" class="headerlink" title="2.1.1 定义"></a>2.1.1 定义</h4><p>根据主键约束自动生成的索引，不允许重复值，不允许空值。</p><h4 id="2-1-2-使用"><a href="#2-1-2-使用" class="headerlink" title="2.1.2 使用"></a>2.1.2 使用</h4><p>创建主键索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">primary</span> key(字段名);</span><br></pre></td></tr></table></figure><p>删除主键索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br></pre></td></tr></table></figure><h3 id="2-2-唯一索引"><a href="#2-2-唯一索引" class="headerlink" title="2.2 唯一索引"></a>2.2 唯一索引</h3><h4 id="2-2-1-定义"><a href="#2-2-1-定义" class="headerlink" title="2.2.1 定义"></a>2.2.1 定义</h4><p>根据唯一约束自动生成的索引，不允许重复值。</p><h4 id="2-2-2-使用"><a href="#2-2-2-使用" class="headerlink" title="2.2.2 使用"></a>2.2.2 使用</h4><p>创建唯一索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">unique</span> 索引名(字段名);</span><br></pre></td></tr></table></figure><p>删除唯一索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> index 索引名;</span><br></pre></td></tr></table></figure><h3 id="2-3-普通索引"><a href="#2-3-普通索引" class="headerlink" title="2.3 普通索引"></a>2.3 普通索引</h3><h4 id="2-3-1-定义"><a href="#2-3-1-定义" class="headerlink" title="2.3.1 定义"></a>2.3.1 定义</h4><p>使用表中普通的列构建索引。</p><h4 id="2-3-2-使用"><a href="#2-3-2-使用" class="headerlink" title="2.3.2 使用"></a>2.3.2 使用</h4><p>创建普通索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> index 索引名(字段名);</span><br></pre></td></tr></table></figure><p>删除普通索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> index 索引名;</span><br></pre></td></tr></table></figure><h3 id="2-4-组合索引"><a href="#2-4-组合索引" class="headerlink" title="2.4 组合索引"></a>2.4 组合索引</h3><h4 id="2-4-1-定义"><a href="#2-4-1-定义" class="headerlink" title="2.4.1 定义"></a>2.4.1 定义</h4><p>用多个列组合构建的索引，这多个列中的值不允许有空值。</p><h4 id="2-4-2-使用"><a href="#2-4-2-使用" class="headerlink" title="2.4.2 使用"></a>2.4.2 使用</h4><p>创建组合索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> index 索引名(字段名<span class="number">1</span>, 字段名<span class="number">2</span>, ... 字段名n);</span><br></pre></td></tr></table></figure><p>删除组合索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> index 索引名;</span><br></pre></td></tr></table></figure><h3 id="2-5-全文索引"><a href="#2-5-全文索引" class="headerlink" title="2.5 全文索引"></a>2.5 全文索引</h3><h4 id="2-5-1-定义"><a href="#2-5-1-定义" class="headerlink" title="2.5.1 定义"></a>2.5.1 定义</h4><p>用大文本对象的列构建的索引。</p><h4 id="2-5-2-使用"><a href="#2-5-2-使用" class="headerlink" title="2.5.2 使用"></a>2.5.2 使用</h4><p>创建全文索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> fulltext index 索引名(字段名);</span><br></pre></td></tr></table></figure><p>删除全文索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> fulltext index 索引名;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句使用索引。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>使用约束</title>
    <link href="https://momashanhe.com/posts/20250519/152824/"/>
    <id>https://momashanhe.com/posts/20250519/152824/</id>
    <published>2025-05-19T07:28:24.000Z</published>
    <updated>2025-05-22T03:28:19.712Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句使用约束。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>约束是在创建表时，为某些列添加特定的规则，保证数据满足用户的要求。</p><h3 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h3><p>约束添加后，在向表中添加和更新数据时，必须要满足约束，否则不能执行操作。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-主键约束"><a href="#2-1-主键约束" class="headerlink" title="2.1 主键约束"></a>2.1 主键约束</h3><h4 id="2-1-1-定义"><a href="#2-1-1-定义" class="headerlink" title="2.1.1 定义"></a>2.1.1 定义</h4><p>主键约束是一个列或者多个列，其值能唯一地标识表中的每一行，这样的一列或多列称为表的主键。</p><p>主键约束相当于唯一约束和非空约束的组合，主键约束列不允许重复，也不允许出现空值。</p><p>当创建主键约束时，系统默认会建立对应的唯一索引。</p><h4 id="2-1-2-自增"><a href="#2-1-2-自增" class="headerlink" title="2.1.2 自增"></a>2.1.2 自增</h4><p>数据库提供了一个自增的数字，专门用来自动生成主键值，不需要用户维护，自增数从1开始，以1递增。</p><h4 id="2-1-3-使用"><a href="#2-1-3-使用" class="headerlink" title="2.1.3 使用"></a>2.1.3 使用</h4><p>使用<code>primary key</code>添加主键约束，使用<code>auto_increment</code>设置主键自增。</p><p>在创建表时添加单列主键约束，主键自增：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在创建表时添加联合主键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">primary</span> key(id, name)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时添加主键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">primary</span> key(id);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时删除主键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-外键约束"><a href="#2-2-外键约束" class="headerlink" title="2.2 外键约束"></a>2.2 外键约束</h3><h4 id="2-2-1-定义"><a href="#2-2-1-定义" class="headerlink" title="2.2.1 定义"></a>2.2.1 定义</h4><p>外键约束用来在两个表的数据之间建立链接，它可以是一列或者多列，一个表可以有一个或多个外键。</p><p>外键可以为空值，若不为空值，则每一个外键的值必须等于另一个表中主键的某个值。</p><p>主表和子表：</p><ul><li>主表：对于两个具有关联关系的表而言，存储主要信息的表就是主表。</li><li>子表：对于两个具有关联关系的表而言，存储详细信息的表就是子表。</li></ul><p>比如一个订单主表对应多个订单子表，以及一个信息主表对应一个信息详情表。</p><h4 id="2-2-2-使用"><a href="#2-2-2-使用" class="headerlink" title="2.2.2 使用"></a>2.2.2 使用</h4><p>使用<code>foreign key</code>添加外键约束。</p><p>创建主表并定义主键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> man (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;主表&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在创建子表时添加外键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> child (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> m_id <span class="type">int</span>(<span class="number">11</span>) comment <span class="string">&#x27;主表编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">constraint</span> fk_m_id <span class="keyword">foreign</span> key(m_id) <span class="keyword">references</span> man(id)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;子表&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改子表时添加外键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> child <span class="keyword">add</span> <span class="keyword">constraint</span> fk_m_id <span class="keyword">foreign</span> key(m_id) <span class="keyword">references</span> man(id);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改子表时删除外键约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> child <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_m_id;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-唯一约束"><a href="#2-3-唯一约束" class="headerlink" title="2.3 唯一约束"></a>2.3 唯一约束</h3><h4 id="2-3-1-定义"><a href="#2-3-1-定义" class="headerlink" title="2.3.1 定义"></a>2.3.1 定义</h4><p>唯一约束要求该列唯一，允许为空，但只能出现一个空值。</p><p>唯一约束可以确保一列或者几列不出现重复值。</p><h4 id="2-3-2-使用"><a href="#2-3-2-使用" class="headerlink" title="2.3.2 使用"></a>2.3.2 使用</h4><p>使用<code>unique</code>添加唯一约束。</p><p>在创建表时添加单列唯一约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">unique</span> comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在创建表时添加联合唯一约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">constraint</span> uk_id_name <span class="keyword">unique</span>(id, name)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时添加唯一约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">unique</span> uk_name(name);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时删除唯一约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> index uk_name;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-非空约束"><a href="#2-4-非空约束" class="headerlink" title="2.4 非空约束"></a>2.4 非空约束</h3><h4 id="2-4-1-定义"><a href="#2-4-1-定义" class="headerlink" title="2.4.1 定义"></a>2.4.1 定义</h4><p>非空约束可以用来约束该列的取值不能为空，对于使用了非空约束的字段，如果用户在添加数据时没有指定值，数据库系统就会报错。</p><h4 id="2-4-2-使用"><a href="#2-4-2-使用" class="headerlink" title="2.4.2 使用"></a>2.4.2 使用</h4><p>使用<code>not null</code>添加非空约束。</p><p>在创建表时添加非空约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时添加非空约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> name name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时删除非空约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> name name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-默认值约束"><a href="#2-5-默认值约束" class="headerlink" title="2.5 默认值约束"></a>2.5 默认值约束</h3><h4 id="2-5-1-定义"><a href="#2-5-1-定义" class="headerlink" title="2.5.1 定义"></a>2.5.1 定义</h4><p>默认值约束用来指定某列的默认值。</p><h4 id="2-5-2-使用"><a href="#2-5-2-使用" class="headerlink" title="2.5.2 使用"></a>2.5.2 使用</h4><p>使用<code>default</code>添加默认值约束。</p><p>在创建表时添加默认值约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">&#x27;none&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时添加默认值约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> name name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">1</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>在修改表时删除默认值约束：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> name name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">1</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句使用约束。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理表</title>
    <link href="https://momashanhe.com/posts/20250518/112838/"/>
    <id>https://momashanhe.com/posts/20250518/112838/</id>
    <published>2025-05-18T03:28:38.000Z</published>
    <updated>2025-05-29T09:26:38.512Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理表。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>表是数据库中存储数据的具体结构，它由行和列组成。</p><p>表中的每一行代表一条记录，包含了按列组织的数据。</p><p>表中的每一列代表一种数据，定义了该列可以存储的数据种类。</p><h3 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h3><p>表是数据库中实际存储数据的载体，能够将数据以一种结构化的方式组织起来，便于数据的管理。</p><p>表与表之间可以通过特定的字段建立关联，从而实现复杂的数据关系。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建"><a href="#2-1-创建" class="headerlink" title="2.1 创建"></a>2.1 创建</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 [表定义选项] [表选项];</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>表定义选项：用来创建定义表的结构，由列名（col_name）、列的定义（column_definition）以及可能的空值说明、完整性约束或表索引组成。</li></ul><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test (</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ) engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4 comment<span class="operator">=</span><span class="string">&#x27;测试&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-查看"><a href="#2-2-查看" class="headerlink" title="2.2 查看"></a>2.2 查看</h3><p>查看所有表：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><p>查看表的创建：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><p>查看表的状态：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status [<span class="keyword">like</span> <span class="string">&#x27;模糊查询表名&#x27;</span>] <span class="keyword">from</span> 数据库 \G</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>使用<code>\G</code>符号可以垂直显示内容，并且使用<code>\G</code>后不需要使用<code>;</code>结束。</li></ul><p>使用describe命令查看表的结构，可以使用desc简写：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span> 表名;</span><br><span class="line"><span class="keyword">desc</span> 表名;</span><br></pre></td></tr></table></figure><p>使用desc命令示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> test;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>Field：列名。</li><li>Type：类型。</li><li>Null：表示该列是否可以存储NULL值。</li><li>Key：表示该列是否已编制索引。PRI表示该列是主键的一部分，UNI表示该列是UNIQUE索引的一部分，MUL表示在列中某个给定值允许出现多次。</li><li>Default：表示该列是否有默认值，如果有，值是多少。</li><li>Extra：表示可以获取的与给定列有关的附加信息，比如AUTO_INCREMENT等。</li></ul><p>使用show命令查看表的字段：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> columns <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p>使用show命令查看表的索引：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><h3 id="2-3-复制"><a href="#2-3-复制" class="headerlink" title="2.3 复制"></a>2.3 复制</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表名 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 旧表名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> test_bak <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span> Duplicates: <span class="number">0</span> Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-修改"><a href="#2-4-修改" class="headerlink" title="2.4 修改"></a>2.4 修改</h3><p>添加列：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">column</span> 新列名 [数据类型] [约束条件] [<span class="keyword">first</span> <span class="operator">|</span> after 已存在的列名];</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">column</span> age <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">null</span> comment <span class="string">&#x27;年龄&#x27;</span> after name;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span> Duplicates: <span class="number">0</span> Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>修改列：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 change <span class="keyword">column</span> 旧列名 新列名 [新数据类型];</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> name name <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span> <span class="string">&#x27;none&#x27;</span> comment <span class="string">&#x27;姓名&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span> Duplicates: <span class="number">0</span> Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>删除列：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> age;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">0</span> Duplicates: <span class="number">0</span> Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-删除"><a href="#2-5-删除" class="headerlink" title="2.5 删除"></a>2.5 删除</h3><p>删除表会删除表结构，再次使用需要重新创建。</p><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [if <span class="keyword">exists</span>] 表名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> test;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-6-清空"><a href="#2-6-清空" class="headerlink" title="2.6 清空"></a>2.6 清空</h3><p>清空表不会删除表结构，但是会释放表空间，重置自增序列从1开始记录。</p><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">truncate</span> <span class="keyword">table</span> test;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理表。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>管理数据库</title>
    <link href="https://momashanhe.com/posts/20250517/130915/"/>
    <id>https://momashanhe.com/posts/20250517/130915/</id>
    <published>2025-05-17T05:09:15.000Z</published>
    <updated>2025-05-26T02:42:51.202Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何使用DDL语句管理数据库。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>数据库是最高层次的存储结构，它可以包含多个表、视图、存储过程、触发器等数据库对象。</p><p>一个数据库对应一个独立的命名空间，不同的数据库中可以存在同名的表。</p><h3 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h3><p>数据库用于逻辑上组织和管理相关的数据表和其他对象。</p><h2 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h2><h3 id="2-1-创建数据库"><a href="#2-1-创建数据库" class="headerlink" title="2.1 创建数据库"></a>2.1 创建数据库</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database [if <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名</span><br><span class="line">[<span class="keyword">default</span>] <span class="type">character</span> <span class="keyword">set</span> 字符集名</span><br><span class="line">[<span class="keyword">default</span>] <span class="keyword">collate</span> 校对规则名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> demo</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">default</span> <span class="keyword">collate</span> utf8_general_ci;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-查看数据库创建"><a href="#2-2-查看数据库创建" class="headerlink" title="2.2 查看数据库创建"></a>2.2 查看数据库创建</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database demo;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> database demo;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Database <span class="operator">|</span> <span class="keyword">Create</span> Database                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> demo     <span class="operator">|</span> <span class="keyword">CREATE</span> DATABASE `demo` <span class="comment">/*!40100 DEFAULT CHARACTER SET gb2312 */</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-查询所有数据库"><a href="#2-3-查询所有数据库" class="headerlink" title="2.3 查询所有数据库"></a>2.3 查询所有数据库</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> demo               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4-修改数据库"><a href="#2-4-修改数据库" class="headerlink" title="2.4 修改数据库"></a>2.4 修改数据库</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> database 数据库名</span><br><span class="line">[<span class="keyword">default</span>] <span class="type">character</span> <span class="keyword">set</span> 字符集名</span><br><span class="line">[<span class="keyword">default</span>] <span class="keyword">collate</span> 校对规则名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> database demo</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="type">character</span> <span class="keyword">set</span> gb2312</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">collate</span> gb2312_chinese_ci;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-5-删除数据库"><a href="#2-5-删除数据库" class="headerlink" title="2.5 删除数据库"></a>2.5 删除数据库</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database [if <span class="keyword">exists</span>] 数据库名;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> database demo;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">2</span> warnings (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-6-选择数据库"><a href="#2-6-选择数据库" class="headerlink" title="2.6 选择数据库"></a>2.6 选择数据库</h3><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use demo;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use demo;</span><br><span class="line">Database changed</span><br><span class="line">mysql<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何使用DDL语句管理数据库。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>在控制台发送HTTP请求</title>
    <link href="https://momashanhe.com/posts/20250514/152151/"/>
    <id>https://momashanhe.com/posts/20250514/152151/</id>
    <published>2025-05-14T07:21:51.000Z</published>
    <updated>2025-05-15T01:19:40.779Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：。</p><span id="more"></span><h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1 说明"></a>1 说明</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：。&lt;/p&gt;</summary>
    
    
    
    <category term="大前端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JS" scheme="https://momashanhe.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>通用语法</title>
    <link href="https://momashanhe.com/posts/20250513/094614/"/>
    <id>https://momashanhe.com/posts/20250513/094614/</id>
    <published>2025-05-13T01:46:14.000Z</published>
    <updated>2025-05-30T01:16:21.119Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了SQL语言中的通用语法。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-基本规范"><a href="#1-基本规范" class="headerlink" title="1 基本规范"></a>1 基本规范</h2><ol><li>支持单行和多行书写，以分号结尾。</li><li>可以使用空格和缩进来增强语句的可读性。  </li><li>不区分大小写，建议关键字使用大写。</li></ol><h2 id="2-注释"><a href="#2-注释" class="headerlink" title="2 注释"></a>2 注释</h2><p>支持单行注释和多行注释：</p><ul><li>单行注释：使用<code>--</code>符号或者<code>#</code>符号会注释之后到行末尾之间的单行内容。</li><li>多行注释：使用<code>/*</code>符号和<code>*/</code>符号注释之间的多行内容。</li></ul><h2 id="3-着重号"><a href="#3-着重号" class="headerlink" title="3 着重号"></a>3 着重号</h2><p>如果在定义表或者字段等其他实体时命名与保留字和关键字有冲突，在不想更改命名的情况下可以使用<code>``</code>着重号将名称包裹起来，这样就不会被识别为关键字和保留字。</p><h2 id="4-语句分类"><a href="#4-语句分类" class="headerlink" title="4 语句分类"></a>4 语句分类</h2><p>根据SQL语句的功能，主要分为四类：</p><ul><li>DDL（Data Definition Language）：数据定义语言，用来定义数据库对象，比如数据库，以及表和字段。</li><li>DML（Data Manipulation Language）：数据操作语言，用来对数据库表中的数据进行增删改。</li><li>DQL（Data Query Language）：数据查询语言，用来查询数据库中表的记录。</li><li>DCL（Data Control Language）：数据控制语言，用来创建数据库用户以及控制用户对数据库的访问权限。</li></ul><h2 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5 数据类型"></a>5 数据类型</h2><h3 id="5-1-整数类型"><a href="#5-1-整数类型" class="headerlink" title="5.1 整数类型"></a>5.1 整数类型</h3><p>整数类型的属性字段可以添加auto_increment自增约束条件。</p><p>整数类型：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>存储需求</th>    </tr>  </thead>  <tbody>    <tr>      <td>tinyint</td>      <td>1字节</td>    </tr>    <tr>      <td>smallint</td>      <td>2字节</td>    </tr>    <tr>      <td>mediumint</td>      <td>3字节</td>    </tr>    <tr>      <td>int</td>      <td>4字节</td>    </tr>    <tr>      <td>bigint</td>      <td>8字节</td>    </tr>  </tbody></table><p>定义整型的写法是<code>int(N)</code>，这种写法只需要记住两点：</p><ol><li>无论N等于多少，int永远占4个字节。</li><li>N表示的是显示宽度，不足的用0补足，超过的无视长度而直接显示整个数字，但这要整型设置了<code>unsigned zerofill</code>才有效。</li></ol><h3 id="5-2-浮点类型"><a href="#5-2-浮点类型" class="headerlink" title="5.2 浮点类型"></a>5.2 浮点类型</h3><p>浮点类型有两种，分别是单精度浮点数（float）和双精度浮点数（double）。</p><p>浮点类型：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>存储需求</th>    </tr>  </thead>  <body>    <tr>      <td>float</td>      <td>4字节</td>    </tr>    <tr>      <td>double</td>      <td>8字节</td>    </tr>  </body></table><p>定义浮点类型可以用<code>(M,D)</code>来表示，其中M称为精度，表示总共的位数，D称为标度，表示小数的位数。</p><h3 id="5-3-定点类型"><a href="#5-3-定点类型" class="headerlink" title="5.3 定点类型"></a>5.3 定点类型</h3><p>浮点型的float和double存在精度丢失问题，即写入数据库的数据未必是插入数据库的数据。</p><p>由此引入了decimal类型，无论写入数据中的数据是多少，都不会存在精度丢失问题。</p><p>定点类型：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>存储需求</th>    </tr>  </thead>  <body>    <tr>      <td>decimal</td>      <td>总位数M+2字节</td>    </tr>  </body></table><p>常见于银行系统和互联网金融系统等对小数点后的数字比较敏感的系统中。</p><p>定义定点类型可以用<code>(M,D)</code>来表示，和定义浮点类型相同，但区别在浮点类型没有指定参数时默认按照实际精度来处理，而定点类型在没有指定参数时默认使用<code>(10,0)</code>作为参数。</p><h3 id="5-4-日期和时间类型"><a href="#5-4-日期和时间类型" class="headerlink" title="5.4 日期和时间类型"></a>5.4 日期和时间类型</h3><p>支持五种形式的日期类型：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>日期格式</th>      <th>日期范围</th>      <th>存储需求</th>    </tr>  </thead>  <tbody>    <tr>      <td>year</td>      <td>YYYY</td>      <td>1901 ~ 2155</td>      <td>1字节</td>    </tr>    <tr>      <td>time</td>      <td>HH:MM:SS</td>      <td>-838:59:59 ~ 838:59:59</td>      <td>3字节</td>    </tr>    <tr>      <td>date</td>      <td>YYYY-MM-DD</td>      <td>1000-01-01 ~ 9999-12-03</td>      <td>3字节</td>    </tr>    <tr>      <td>datetime</td>      <td>YYYY-MM-DD HH:MM:SS</td>      <td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>      <td>8字节</td>    </tr>    <tr>      <td>timestamp</td>      <td>YYYY-MM-DD HH:MM:SS</td>      <td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td>      <td>4字节</td>    </tr>  </tbody></table><p>其中datetime与timestamp两种类型的区别：</p><ul><li>datetime占8个字节，timestamp占4个字节。</li><li>由于大小的区别，datetime与timestamp能存储的时间范围也不同。</li><li>datetime默认值为空，当插入的值为null时，该列的值就是null。timestamp默认值不为空，当插入的值为null时，该列的值取当前时间。</li><li>datetime存储的时间与时区无关，timestamp存储的时间及显示的时间都依赖于当前时区。</li></ul><p>在实际工作中，一张表往往会有两个默认字段，一个记录创建时间而另一个记录最新一次的更新时间，这种时候可以使用timestamp类型来实现。</p><h3 id="5-5-字符串类型"><a href="#5-5-字符串类型" class="headerlink" title="5.5 字符串类型"></a>5.5 字符串类型</h3><p>字符串类型用来存储字符串数据，还可以存储图片和声音的二进制数据，支持使用正则表达式进行匹配查找。</p><p>字符串类型众多，括号中的M表示可以为其指定长度：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>存储需求</th>    </tr>  </thead>  <tbody>    <tr>      <td>char(M)</td>      <td>M字节，1<=M<=255</td>    </tr>    <tr>      <td>varchar(M)</td>      <td>L+1字节，L<=M并且1<=M<=65535</td>    </tr>    <tr>      <td>tinytext</td>      <td>L+1字节，L<2^8</td>    </tr>    <tr>      <td>text</td>      <td>L+2字节，L<2^16</td>    </tr>    <tr>      <td>mediumtext</td>      <td>L+3字节，L<2^24</td>    </tr>    <tr>      <td>longtext</td>      <td>L+4字节，L<2^32</td>    </tr>    <tr>      <td>enum</td>      <td>1字节或2字节，取决于枚举值的数目，最大值65535</td>    </tr>    <tr>      <td>set</td>      <td>最大8字节，取决于集合成员数量，最多64个成员</td>    </tr>  </tbody></table><h4 id="5-5-1-char"><a href="#5-5-1-char" class="headerlink" title="5.5.1 char"></a>5.5.1 char</h4><p>使用<code>char(M)</code>表示固定长度的字符串，存储时在右侧填充空格以达到指定的长度，查询时会删除尾部的空格。</p><h4 id="5-5-2-varchar"><a href="#5-5-2-varchar" class="headerlink" title="5.5.2 varchar"></a>5.5.2 varchar</h4><p>使用<code>varchar(M)</code>表示可变长度的字符串，存储的是字符串的实际内容。</p><h4 id="5-5-3-text"><a href="#5-5-3-text" class="headerlink" title="5.5.3 text"></a>5.5.3 text</h4><p>使用<code>text</code>表示可变长度的字符串，保存非二进制字符串，如文章内容和评论等。</p><p>支持四种类型：</p><ul><li>tinytext</li><li>text</li><li>mediumtext</li><li>longtext</li></ul><h4 id="5-5-4-enum"><a href="#5-5-4-enum" class="headerlink" title="5.5.4 enum"></a>5.5.4 enum</h4><p>使用<code>enum</code>表示字符串对象，值为表创建时设定的枚举值，最多可以有65535个元素。</p><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段名 enum(<span class="string">&#x27;值1&#x27;</span>, <span class="string">&#x27;值1&#x27;</span>, ..., <span class="string">&#x27;值n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>字段名是将要定义的字段，值n指枚举列表中第n个值。</p><p>enum类型的字段在取值时，能在指定的枚举列表中获取，而且一次只能取一个。如果创建的成员中有空格，尾部的空格将自动被删除。</p><p>enum值依照列索引顺序排列，并且空字符串排在非空字符串前，null值排在其他所有枚举值前。</p><p>enum列总有一个默认值。如果将enum列声明为null，null值则为该列的一个有效值，并且默认值为null。如果enum列被声明为not null，其默认值为允许的值列表的第1个元素。</p><h4 id="5-5-5-set"><a href="#5-5-5-set" class="headerlink" title="5.5.5 set"></a>5.5.5 set</h4><p>使用<code>set</code>表示字符串的对象，值为表创建时规定的一列值，最多可以有64个成员。</p><p>语法：</p><figure class="highlight sql"><figcaption><span>sql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段名 <span class="keyword">set</span>(<span class="string">&#x27;值1&#x27;</span>, <span class="string">&#x27;值2&#x27;</span>, ..., <span class="string">&#x27;值n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>与enum类型相同，set值在内部用整数表示，列表中每个值都有一个索引编号。当创建表时，尾部空格将自动删除。</p><p>与enum类型不同的是，enum类型的字段只能从定义的列值中选择一个值插入，而set类型的列可从定义的列值中选择多个字符的联合。</p><p>如果插入set字段中的列值有重复，则自动删除重复的值。并且插入set字段的值的顺序并不重要，在存入数据库时，按照定义的顺序显示。如果插入了不正确的值，默认情况下，会忽视这些值并警告。</p><h3 id="5-6-二进制类型"><a href="#5-6-二进制类型" class="headerlink" title="5.6 二进制类型"></a>5.6 二进制类型</h3><p>用于存储二进制形式的值，支持多种类型，括号中的M表示长度：</p><table>  <thead>    <tr>      <th>类型名称</th>      <th>存储需求</th>    </tr>  </thead>  <tbody>    <tr>      <td>bit(M)</td>      <td>大约(M+7)/8字节</td>    </tr>    <tr>      <td>binary(M)</td>      <td>M字节</td>    </tr>    <tr>      <td>varbinary(M)</td>      <td>M+1字节</td>    </tr>    <tr>      <td>tinyblob</td>      <td>L+1字节，L<2^8</td>    </tr>    <tr>      <td>blob</td>      <td>L+2字节，L<2^16</td>    </tr>    <tr>      <td>mediumblob</td>      <td>L+3字节，L<2^24</td>    </tr>    <tr>      <td>longblob</td>      <td>L+4字节，L<2^32</td>    </tr>  </tbody></table><h4 id="5-6-1-数字"><a href="#5-6-1-数字" class="headerlink" title="5.6.1 数字"></a>5.6.1 数字</h4><p>使用<code>bit(M)</code>表示二进制位数为M的数字，范围为1~64，默认值为1。如果长度小于M位，在值的左边使用<code>0</code>填充。</p><p>例如保存的值为3，二进制形式为<code>0101</code>，在这里需要M至少为4，大于二进制形式<code>1111</code>的数据不能插入。</p><h4 id="5-6-2-字符串"><a href="#5-6-2-字符串" class="headerlink" title="5.6.2 字符串"></a>5.6.2 字符串</h4><p>使用<code>binary(M)</code>表示固定长度的二进制字符串。如果长度小于M位，在值的右边使用<code>\0</code>填充。</p><p>使用<code>varbinary(M)</code>表示可变长度的二进制字符串。</p><h4 id="5-6-3-大对象"><a href="#5-6-3-大对象" class="headerlink" title="5.6.3 大对象"></a>5.6.3 大对象</h4><p>用于存储可变数量的二进制大对象，比如音频和视频等，根据可容纳值的最大长度分为四种：</p><ul><li>tinyblob</li><li>blob</li><li>mediumblob</li><li>longblob</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了SQL语言中的通用语法。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>安装</title>
    <link href="https://momashanhe.com/posts/20250512/215937/"/>
    <id>https://momashanhe.com/posts/20250512/215937/</id>
    <published>2025-05-12T13:59:37.000Z</published>
    <updated>2025-05-12T15:45:00.999Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了如何在Windows中安装MySQL。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-检查"><a href="#1-检查" class="headerlink" title="1 检查"></a>1 检查</h2><p>在cmd窗口中输入<code>services.msc</code>命令打开服务，如果能找到MySQL服务，说明已经安装了MySQL数据库。</p><h2 id="2-下载"><a href="#2-下载" class="headerlink" title="2 下载"></a>2 下载</h2><p>官方下载地址：</p><ul><li><a href="https://dev.mysql.com/downloads/mysql/">最新版本</a></li><li><a href="https://downloads.mysql.com/archives/community/">历史版本</a></li></ul><p>根据系统运行环境和操作系统位数选择下载相应的软件。</p><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3 安装"></a>3 安装</h2><p>将下载得到的压缩包放在软件安装目录，直接解压即可安装完成。</p><h2 id="4-配置"><a href="#4-配置" class="headerlink" title="4 配置"></a>4 配置</h2><h3 id="4-1-配置环境变量"><a href="#4-1-配置环境变量" class="headerlink" title="4.1 配置环境变量"></a>4.1 配置环境变量</h3><h4 id="4-1-1-MYSQL-HOME"><a href="#4-1-1-MYSQL-HOME" class="headerlink" title="4.1.1 MYSQL_HOME"></a>4.1.1 MYSQL_HOME</h4><p>将解压后的目录作为安装目录，添加到环境变量。</p><p>打开环境变量窗口，新建环境变量，变量名为<code>MYSQL_HOME</code>，变量值为安装目录地址。</p><h4 id="4-1-2-Path"><a href="#4-1-2-Path" class="headerlink" title="4.1.2 Path"></a>4.1.2 Path</h4><p>需要把安装目录下的<code>bin</code>目录增加到现有的<code>PATH</code>变量中，<code>bin</code>目录中包含经常要用到的可执行文件，设置后可以在任何目录下执行命令。</p><p>打开环境变量窗口，在下方的系统环境变量里找到<code>Path</code>环境变量并编辑，新建变量<code>%MYSQL_HOME%\bin</code>并保存。</p><h3 id="4-2-配置系统文件"><a href="#4-2-配置系统文件" class="headerlink" title="4.2 配置系统文件"></a>4.2 配置系统文件</h3><p>从5.7.18版本开始，不在压缩包中提供<code>my-default.ini</code>文件，在安装目录下创建<code>my.ini</code>文件：</p><figure class="highlight ini"><figcaption><span>my.ini</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=D:\Work\MySQL\mysql-<span class="number">5.7</span>.<span class="number">40</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=D:\Work\MySQL\mysql-<span class="number">5.7</span>.<span class="number">40</span>\data</span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">1024</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端默认字符集</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 设置导入导出文件夹</span></span><br><span class="line"><span class="attr">secure-file-priv</span>=D:\Work\MySQL\file</span><br><span class="line"><span class="comment"># default_authentication_plugin</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="comment"># sql_mode</span></span><br><span class="line"><span class="attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line"><span class="comment"># explicit_defaults_for_timestamp</span></span><br><span class="line"><span class="attr">explicit_defaults_for_timestamp</span>=<span class="literal">true</span></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 客户端连接服务端时默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure><h3 id="4-3-配置服务"><a href="#4-3-配置服务" class="headerlink" title="4.3 配置服务"></a>4.3 配置服务</h3><p>使用超级管理员的权限打开cmd窗口，进入安装目录的bin文件夹里。</p><p>初始化数据库，设置root密码为空：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>使用initialize设置root密码为随机数。</li><li>使用initialize-insecure设置root密码为空。</li></ul><p>安装服务，默认自动启动：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>使用install安装服务，默认自动启动。</li><li>使用install-manual安装服务，设置手动启动。</li><li>使用remove删除服务。</li></ul><p>启动服务：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>使用start启动服务。</li><li>使用stop停止服务。</li></ul><h2 id="5-登录测试"><a href="#5-登录测试" class="headerlink" title="5 登录测试"></a>5 登录测试</h2><h3 id="5-1-登录"><a href="#5-1-登录" class="headerlink" title="5.1 登录"></a>5.1 登录</h3><p>打开cmd窗口，输入<code>mysql -u root -p</code>使用root用户登录，回车后提示输入密码，因为之前配置的时候设置了root用户的密码为空，所以直接回车即可登录成功了：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">2</span></span><br><span class="line">Server version: <span class="number">5</span>.<span class="number">7</span>.<span class="number">40</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2022</span>, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line"><span class="built_in">Type</span> &#x27;<span class="built_in">help</span>;&#x27; or &#x27;\h&#x27; <span class="keyword">for</span> <span class="built_in">help</span>. <span class="built_in">Type</span> &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h3 id="5-2-修改密码"><a href="#5-2-修改密码" class="headerlink" title="5.2 修改密码"></a>5.2 修改密码</h3><p>将root用户的密码改为123456：</p><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(&#x27;<span class="number">123456</span>&#x27;);</span><br></pre></td></tr></table></figure><p>使用<code>exit</code>命令退出登录，以后登录就需要输入刚刚设置的密码了。</p><h2 id="6-使用工具"><a href="#6-使用工具" class="headerlink" title="6 使用工具"></a>6 使用工具</h2><p>建议使用Navicat工具连接数据库。</p><p>打开Navicat并新建连接：<br><img src="/@image/302001/002-20250512234303.jpg" alt="20250512234303-新建连接"></p><p>点击测试连接提示连接成功，点击确定保存连接。</p><p>双击新建的连接，并点击新建查询，即可编写语句并执行。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了如何在Windows中安装MySQL。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>入门</title>
    <link href="https://momashanhe.com/posts/20250512/155558/"/>
    <id>https://momashanhe.com/posts/20250512/155558/</id>
    <published>2025-05-12T07:55:58.000Z</published>
    <updated>2025-05-30T23:54:05.951Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文了解了MySQL关系型数据库和SQL语言的基本知识。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>MySQL 5.7.40</p>              </div>            </details><h2 id="1-MySQL数据库"><a href="#1-MySQL数据库" class="headerlink" title="1 MySQL数据库"></a>1 MySQL数据库</h2><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。</p><p>MySQL使用的SQL语言是用于访问数据库的最常用的标准化语言。</p><p>特性：</p><ul><li>使用C和C++编写，并使用多种编译器进行测试，保证源代码的可移植性。</li><li>支持AIX、Linux、MacOS、Solaris、Windows等多种操作系统。</li><li>为多种编程语言提供了API，包括C、C++、Python、Java、Perl、PHP和Ruby等。</li><li>提供TCP&#x2F;IP、ODBC和JDBC等多种数据库连接途径。</li><li>支持多线程，充分利用CPU资源。</li><li>优化的SQL查询算法，有效地提高查询速度。</li><li>既能够作为一个单独的应用程序应用在客户端服务器网络环境中，也能够作为一个库而嵌入其他的软件中。</li><li>提供多语言支持，常见的编码如中文的GB2312、BIG5，日文的Shift_JIS等都可以用作数据表名和数据列名。</li><li>提供用于管理、检查、优化数据库操作的管理工具。</li><li>支持大型的数据库，可以处理拥有上千万条记录的大型数据库。</li><li>支持多种存储引擎。</li></ul><p>概念：</p><ul><li>数据库（Database）：是按照一定结构组织存储在一起的相关数据的集合，这些数据可以被多个用户和应用程序共享。</li><li>表（Table）：是数据库中存储数据的基本单位，由行和列组成，对应记录和字段。例如，一个学生表可以包含学号和姓名等字段，每一行代表一条学生记录。</li><li>字段（Field）：是表中的一列，具有特定的数据类型。例如，姓名字段的数据类型可能是字符串。</li><li>记录（Record）：是表中的一行，包含字段的具体值。一个学生记录包含该学生的学号和姓名等实际信息。</li></ul><h2 id="2-SQL语言"><a href="#2-SQL语言" class="headerlink" title="2 SQL语言"></a>2 SQL语言</h2><p>SQL（Structured Query Language，结构化查询语言）是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。</p><p>与其他程序设计语言（如C、Java等）不同的是，SQL由很少的关键字组成，每个SQL语句通过一个或多个关键字构成。</p><p>优点：</p><ul><li>一体化：SQL集数据定义、数据操作和数据控制于一体，可以完成数据库中的全部工作。</li><li>使用方式灵活：SQL具有两种使用方式，可以直接以命令方式交互使用，也可以嵌入使用，嵌入C、C++、Fortran、COBOL、Java等语言中使用。</li><li>非过程化：只提操作要求，不必描述操作步骤，也不需要导航。使用时只需要告诉计算机做什么，而不需要告诉它怎么做。</li><li>语言简洁、语法简单、好学好用：在ANSI标准中，只包含94个英文单词，核心功能只用6个动词，语法接近英语口语。</li></ul><p>注意：</p><ul><li>SQL语句不区分大小写，许多SQL开发人员习惯对关键字进行大写，而对表或者列的名称使用小写，这样可以提高代码的可阅读性和可维护性。</li><li>大多数数据库都支持通用的SQL语句，同时不同的数据库具有各自特有的SQL语言特性。</li><li>某些数据库系统要求在每条SQL命令的末端使用分号。分号是在数据库系统中分隔每条SQL语句的标准方法，这样就可以在对服务器的相同请求中执行一条以上的语句。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文了解了MySQL关系型数据库和SQL语言的基本知识。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="https://momashanhe.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="MySQL" scheme="https://momashanhe.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>流式处理</title>
    <link href="https://momashanhe.com/posts/20250508/103413/"/>
    <id>https://momashanhe.com/posts/20250508/103413/</id>
    <published>2025-05-08T02:34:13.000Z</published>
    <updated>2025-05-12T06:39:05.816Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本文学习了流式处理，使用新增方法操作集合，以及通过Optional类判断空值。</p><span id="more"></span><details ><summary> 环境 </summary>              <div class='content'>              <p>Windows 10 企业版 LTSC 21H2<br>Java 1.8</p>              </div>            </details><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><p>从JDK1.8开始，新增了一系列Stream相关的API用于流式处理，这些API都在<code>java.util.stream</code>包下，通过Stream可以编写函数式编程风格的代码，使代码更加高效简洁。</p><h3 id="1-2-操作方式"><a href="#1-2-操作方式" class="headerlink" title="1.2 操作方式"></a>1.2 操作方式</h3><p>流式处理可以分为三个部分：</p><ul><li>转换成流：将原始数据转换成流对象，以便进行后续操作。</li><li>中间操作：将原始的Stream经过逻辑处理，生成新的Stream用于继续处理。</li><li>终止操作：产生结果或者执行其他操作。</li></ul><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2 使用"></a>2 使用</h2><h3 id="2-1-转换成流"><a href="#2-1-转换成流" class="headerlink" title="2.1 转换成流"></a>2.1 转换成流</h3><p>创建空的Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Stream</span> <span class="variable">stream</span> <span class="operator">=</span> Stream.empty();</span><br></pre></td></tr></table></figure><p>通过集合类中的<code>stream()</code>方法或者<code>parallelStream()</code>方法创建Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>);</span><br><span class="line"><span class="type">Stream</span> <span class="variable">stream</span> <span class="operator">=</span> list.stream();<span class="comment">// 获取串行的Stream对象</span></span><br><span class="line"><span class="type">Stream</span> <span class="variable">parallelStream</span> <span class="operator">=</span> list.parallelStream();<span class="comment">// 获取并行的Stream对象</span></span><br></pre></td></tr></table></figure><p>通过数组工具类Arrays类的<code>stream()</code>方法创建Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] arr = &#123;<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>&#125;;</span><br><span class="line">Stream&lt;String&gt; stream = Arrays.stream(arr);</span><br></pre></td></tr></table></figure><p>通过Stream类中的<code>of()</code>方法创建Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Stream</span> <span class="variable">stream</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="type">Stream</span> <span class="variable">stream</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br></pre></td></tr></table></figure><p>通过Stream类中的<code>iterate()</code>方法创建有序的Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Stream&lt;T&gt; <span class="title function_">iterate</span><span class="params">(<span class="keyword">final</span> T seed, <span class="keyword">final</span> UnaryOperator&lt;T&gt; f)</span>;</span><br></pre></td></tr></table></figure><p>通过Stream类中的<code>generate()</code>方法创建无序的Stream对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Stream&lt;T&gt; <span class="title function_">generate</span><span class="params">(Supplier&lt;T&gt; s)</span>;</span><br></pre></td></tr></table></figure><h3 id="2-2-中间操作"><a href="#2-2-中间操作" class="headerlink" title="2.2 中间操作"></a>2.2 中间操作</h3><p>多个中间操作可以连接起来形成流水线，在终止操作时进行处理并返回结果，称为<code>惰性求值</code>，是函数式编程中的一种策略。</p><h4 id="2-2-1-过滤"><a href="#2-2-1-过滤" class="headerlink" title="2.2.1 过滤"></a>2.2.1 过滤</h4><p>对Stream对象按指定的Predicate进行筛选，将符合条件的元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;T&gt; <span class="title function_">filter</span><span class="params">(Predicate&lt;? <span class="built_in">super</span> T&gt; predicate)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).filter(i -&gt; i &gt; <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 为了看到效果，使用终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-截取"><a href="#2-2-2-截取" class="headerlink" title="2.2.2 截取"></a>2.2.2 截取</h4><p>获取指定的前几个元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;T&gt; <span class="title function_">limit</span><span class="params">(<span class="type">long</span> maxSize)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).limit(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 为了看到效果，使用终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-跳过"><a href="#2-2-3-跳过" class="headerlink" title="2.2.3 跳过"></a>2.2.3 跳过</h4><p>跳过指定的前几个元素，将剩下的元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;T&gt; <span class="title function_">skip</span><span class="params">(<span class="type">long</span> n)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).skip(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 为了看到效果，使用终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="2-2-4-去重"><a href="#2-2-4-去重" class="headerlink" title="2.2.4 去重"></a>2.2.4 去重</h4><p>调用元素的<code>equals()</code>方法进行比较，将去重后的元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;T&gt; <span class="title function_">distinct</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).distinct();</span><br><span class="line"><span class="comment">// 为了看到效果，使用终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="2-2-5-排序"><a href="#2-2-5-排序" class="headerlink" title="2.2.5 排序"></a>2.2.5 排序</h4><p>调用传入比较器进行比较，将排序后的元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;T&gt; <span class="title function_">sorted</span><span class="params">(Comparator&lt;? <span class="built_in">super</span> T&gt; comparator)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).sorted((m, n) -&gt; m - n);</span><br><span class="line"><span class="comment">// 为了看到效果，使用终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="2-2-6-映射"><a href="#2-2-6-映射" class="headerlink" title="2.2.6 映射"></a>2.2.6 映射</h4><p>将Stream中的元素转换成其他元素或者提取信息，调用传入的函数处理每个元素，将处理后的元素组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;R&gt; Stream&lt;R&gt; <span class="title function_">map</span><span class="params">(Function&lt;? <span class="built_in">super</span> T, ? extends R&gt; mapper)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).map(i -&gt; i + <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 为了看到效果，使用了终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h4 id="2-2-7-扁平映射"><a href="#2-2-7-扁平映射" class="headerlink" title="2.2.7 扁平映射"></a>2.2.7 扁平映射</h4><p>将Stream中的元素转换成Stream对象，调用传入的函数处理每个Steam对象，将处理后的Stream对象组成新的Stream对象返回。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;R&gt; Stream&lt;R&gt; <span class="title function_">flatMap</span><span class="params">(Function&lt;? <span class="built_in">super</span> T, ? extends Stream&lt;? extends R&gt;&gt; mapper)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.of(<span class="string">&quot;1 8&quot;</span>, <span class="string">&quot;5 8&quot;</span>).flatMap(s -&gt; Stream.of(s.split(<span class="string">&quot; &quot;</span>)));</span><br><span class="line"><span class="comment">// 为了看到效果，使用了终止操作forEach()方法进行打印</span></span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="2-3-终止操作"><a href="#2-3-终止操作" class="headerlink" title="2.3 终止操作"></a>2.3 终止操作</h3><p>终端操作会使用流水线生成结果，一旦执行终端操作，流就被使用使用了，无法再被使用。</p><h4 id="2-3-1-遍历元素"><a href="#2-3-1-遍历元素" class="headerlink" title="2.3.1 遍历元素"></a>2.3.1 遍历元素</h4><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">forEach</span><span class="params">(Consumer&lt;? <span class="built_in">super</span> T&gt; action)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; stream = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">stream.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="2-3-2-检查是否所有元素匹配"><a href="#2-3-2-检查是否所有元素匹配" class="headerlink" title="2.3.2 检查是否所有元素匹配"></a>2.3.2 检查是否所有元素匹配</h4><p>如果所有元素都满足条件，那么返回true，否则返回false。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">allMatch</span><span class="params">(Predicate&lt;? <span class="built_in">super</span> T&gt; predicate)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">match</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).allMatch(e -&gt; e.contains(<span class="string">&quot;11&quot;</span>));</span><br><span class="line">System.out.println(match);<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="2-3-3-检查是否任意元素匹配"><a href="#2-3-3-检查是否任意元素匹配" class="headerlink" title="2.3.3 检查是否任意元素匹配"></a>2.3.3 检查是否任意元素匹配</h4><p>如果任意元素满足条件，就返回true，否则返回false。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">anyMatch</span><span class="params">(Predicate&lt;? <span class="built_in">super</span> T&gt; predicate)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">match</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).anyMatch(e -&gt; e.contains(<span class="string">&quot;aa&quot;</span>));</span><br><span class="line">System.out.println(match);<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="2-3-4-检查是否没有元素匹配"><a href="#2-3-4-检查是否没有元素匹配" class="headerlink" title="2.3.4 检查是否没有元素匹配"></a>2.3.4 检查是否没有元素匹配</h4><p>如果没有元素满足条件，返回true，否则返回false。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">noneMatch</span><span class="params">(Predicate&lt;? <span class="built_in">super</span> T&gt; predicate)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">match</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).noneMatch(e -&gt; e.contains(<span class="string">&quot;cc&quot;</span>));</span><br><span class="line">System.out.println(match);<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="2-3-5-返回首个元素"><a href="#2-3-5-返回首个元素" class="headerlink" title="2.3.5 返回首个元素"></a>2.3.5 返回首个元素</h4><p>返回首个元素，使用Optional对象封装。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;T&gt; <span class="title function_">findFirst</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; find = Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).findFirst();</span><br><span class="line">System.out.println(find);<span class="comment">// Optional[aa11]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-6-返回任意元素"><a href="#2-3-6-返回任意元素" class="headerlink" title="2.3.6 返回任意元素"></a>2.3.6 返回任意元素</h4><p>返回任意元素，通常是处理最快的那个元素，使用Optional对象封装。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;T&gt; <span class="title function_">findAny</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; find = Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).findAny();</span><br><span class="line">System.out.println(find);<span class="comment">// Optional[aa11]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-7-返回元素个数"><a href="#2-3-7-返回元素个数" class="headerlink" title="2.3.7 返回元素个数"></a>2.3.7 返回元素个数</h4><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="title function_">count</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> Stream.of(<span class="string">&quot;aa11&quot;</span>, <span class="string">&quot;bb11&quot;</span>).count();</span><br><span class="line">System.out.println(count);<span class="comment">// 2</span></span><br></pre></td></tr></table></figure><h4 id="2-3-8-返回元素最大值"><a href="#2-3-8-返回元素最大值" class="headerlink" title="2.3.8 返回元素最大值"></a>2.3.8 返回元素最大值</h4><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;T&gt; <span class="title function_">max</span><span class="params">(Comparator&lt;? <span class="built_in">super</span> T&gt; comparator)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Integer&gt; max = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).max((m, n) -&gt; m - n);</span><br><span class="line">System.out.println(max);<span class="comment">// Optional[8]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-9-返回元素最小值"><a href="#2-3-9-返回元素最小值" class="headerlink" title="2.3.9 返回元素最小值"></a>2.3.9 返回元素最小值</h4><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;T&gt; <span class="title function_">min</span><span class="params">(Comparator&lt;? <span class="built_in">super</span> T&gt; comparator)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Integer&gt; min = Stream.of(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>).min((m, n) -&gt; m - n);</span><br><span class="line">System.out.println(min);<span class="comment">// Optional[1]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-10-收集元素"><a href="#2-3-10-收集元素" class="headerlink" title="2.3.10 收集元素"></a>2.3.10 收集元素</h4><p>将流中的元素进行汇总，使用集合收集元素。</p><p>可以使用Collectors类提供的静态方法，将流中的元素通过集合收集。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;R, A&gt; R <span class="title function_">collect</span><span class="params">(Collector&lt;? <span class="built_in">super</span> T, A, R&gt; collector)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">Set&lt;Integer&gt; set = list.stream().collect(Collectors.toSet());</span><br><span class="line">System.out.println(set);<span class="comment">// [1, 5, 8]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-11-规约元素"><a href="#2-3-11-规约元素" class="headerlink" title="2.3.11 规约元素"></a>2.3.11 规约元素</h4><p>将流中的元素反复结合，最终生成单一的结果。</p><p>语法：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">T <span class="title function_">reduce</span><span class="params">(T identity, BinaryOperator&lt;T&gt; accumulator)</span>;</span><br><span class="line">Optional&lt;T&gt; <span class="title function_">reduce</span><span class="params">(BinaryOperator&lt;T&gt; accumulator)</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(<span class="number">1</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">8</span>);</span><br><span class="line">Optional&lt;Integer&gt; sum = list.stream().reduce((x, y) -&gt; x + y);</span><br><span class="line">System.out.println(sum);<span class="comment">// Optional[22]</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">sumWith0</span> <span class="operator">=</span> list.stream().reduce(<span class="number">0</span>, (x, y) -&gt; x + y);</span><br><span class="line">System.out.println(sumWith0);<span class="comment">// 22</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">sumWith5</span> <span class="operator">=</span> list.stream().reduce(<span class="number">5</span>, (x, y) -&gt; x + y);</span><br><span class="line">System.out.println(sumWith5);<span class="comment">// 27</span></span><br></pre></td></tr></table></figure><h2 id="3-Optional类"><a href="#3-Optional类" class="headerlink" title="3 Optional类"></a>3 Optional类</h2><p>为了避免产生NullPointException异常，通常的做法是进行if条件判断，但如果代码里面充满了大量的null判断会让程序变的不再优雅。</p><p>从JDK1.8开始，可以使用Optional类处理可能为null的变量，在减少NullPointException的同时，也提升了代码的美观度。</p><h3 id="3-1-获取"><a href="#3-1-获取" class="headerlink" title="3.1 获取"></a>3.1 获取</h3><p>创建空的Optional对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.empty();</span><br></pre></td></tr></table></figure><p>包装不为null的对象，如果对象为null，则抛出NullPointException异常：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.of(str);</span><br></pre></td></tr></table></figure><p>包装可以为null的对象，如果对象为null，则创建空的Optional对象：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(str);</span><br></pre></td></tr></table></figure><h3 id="3-2-常用方法"><a href="#3-2-常用方法" class="headerlink" title="3.2 常用方法"></a>3.2 常用方法</h3><h4 id="3-2-1-判断是否为空"><a href="#3-2-1-判断是否为空" class="headerlink" title="3.2.1 判断是否为空"></a>3.2.1 判断是否为空</h4><p>使用<code>isPresent()</code>方法判断Optional对象是否为空，如果为空则返回true，如果不为空则返回false。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="literal">null</span>);</span><br><span class="line">System.out.println(name.isPresent());<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-安全执行方法"><a href="#3-2-2-安全执行方法" class="headerlink" title="3.2.2 安全执行方法"></a>3.2.2 安全执行方法</h4><p>使用<code>ifPresent()</code>方法安全的执行传入的方法，如果不为空则执行方法，如果为空则什么也不做。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">name.ifPresent(System.out::println);<span class="comment">// name</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-获取值"><a href="#3-2-3-获取值" class="headerlink" title="3.2.3 获取值"></a>3.2.3 获取值</h4><p>使用<code>get()</code>方法获取Optional对象的值，如果不为空则返回值，如果为空则抛出NoSuchElementException异常。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">System.out.println(name.get());<span class="comment">// name</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-获取值或默认值"><a href="#3-2-4-获取值或默认值" class="headerlink" title="3.2.4 获取值或默认值"></a>3.2.4 获取值或默认值</h4><p>使用<code>orElse()</code>方法获取Optional对象的值，如果不为空则返回值，如果为空则返回指定的值。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="literal">null</span>);</span><br><span class="line">System.out.println(name.orElse(<span class="string">&quot;null&quot;</span>));<span class="comment">// null</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-获取值或执行方法"><a href="#3-2-5-获取值或执行方法" class="headerlink" title="3.2.5 获取值或执行方法"></a>3.2.5 获取值或执行方法</h4><p>使用<code>orElseGet()</code>方法获取Optional对象的值，如果不为空则返回值，如果为空则返回执行方法得到的值。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="literal">null</span>);</span><br><span class="line">System.out.println(name.orElseGet(() -&gt; <span class="string">&quot;null&quot;</span>));<span class="comment">// null</span></span><br></pre></td></tr></table></figure><h4 id="3-2-6-获取值或抛出异常"><a href="#3-2-6-获取值或抛出异常" class="headerlink" title="3.2.6 获取值或抛出异常"></a>3.2.6 获取值或抛出异常</h4><p>使用<code>orElseThrow()</code>方法获取Optional对象的值，如果不为空则返回值，如果为空则抛出指定的异常，默认抛出NoSuchElementException异常。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="literal">null</span>);</span><br><span class="line">System.out.println(name.orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">NullPointerException</span>()));<span class="comment">// java.lang.NullPointerException</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-过滤"><a href="#3-2-7-过滤" class="headerlink" title="3.2.7 过滤"></a>3.2.7 过滤</h4><p>使用<code>filter()</code>方法过滤Optional对象的值，判断是否满足传入的条件，如果满足则返回原来的Optional对象，如果不满足则创建空的Optional对象返回。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;String&gt; name = Optional.ofNullable(<span class="string">&quot;name&quot;</span>).filter(e -&gt; e != <span class="literal">null</span>);</span><br><span class="line">System.out.println(name);<span class="comment">// Optional[name]</span></span><br></pre></td></tr></table></figure><h4 id="3-2-8-映射"><a href="#3-2-8-映射" class="headerlink" title="3.2.8 映射"></a>3.2.8 映射</h4><p>使用<code>map()</code>方法处理Optional对象的值，如果不为空则使用传入的方法处理并将返回值封装为Optional对象返回，如果为空则创建空的Optional对象返回。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Integer&gt; length = Optional.ofNullable(<span class="string">&quot;name&quot;</span>).map(e -&gt; e.length());</span><br><span class="line">System.out.println(length);<span class="comment">// Optional[4]</span></span><br></pre></td></tr></table></figure><h4 id="3-2-9-扁平映射"><a href="#3-2-9-扁平映射" class="headerlink" title="3.2.9 扁平映射"></a>3.2.9 扁平映射</h4><p>使用<code>flatMap()</code>方法处理Optional对象的值，如果不为空则使用传入的方法处理并将Optional对象返回，如果为空则创建空的Optional对象返回。</p><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Integer&gt; length = Optional.ofNullable(<span class="string">&quot;name&quot;</span>).flatMap(e -&gt; Optional.ofNullable(e.length()));</span><br><span class="line">System.out.println(length);<span class="comment">// Optional[4]</span></span><br></pre></td></tr></table></figure><h3 id="3-3-注意事项"><a href="#3-3-注意事项" class="headerlink" title="3.3 注意事项"></a>3.3 注意事项</h3><p>比较orElse()方法和orElseGet()方法：</p><ul><li>当Optional对象不为空时，返回的都是原对象。当Optional对象为空时，orElse()方法返回指定的值，orElseGet()方法返回的是接口调用的返回值。</li><li>并且当Optional对象不为空时，orElse()方法也会执行，orElseGet()方法不会执行。如果两个方法都返回新对象，orElse()方法会执行初始化，orElseGet()方法不会执行初始化。</li></ul><p>比较map()方法和flatMap()方法：</p><ul><li>如果Optional对象为空，都会创建空对象返回。</li><li>如果Optional对象不为空，map()方法会将执行方法得到的返回值包装为Optional对象，flatMap()方法会直接返回执行方法得到的Optional对象。</li></ul><h2 id="4-集合增强"><a href="#4-集合增强" class="headerlink" title="4 集合增强"></a>4 集合增强</h2><h3 id="4-1-工具类"><a href="#4-1-工具类" class="headerlink" title="4.1 工具类"></a>4.1 工具类</h3><h4 id="4-1-1-Collector"><a href="#4-1-1-Collector" class="headerlink" title="4.1.1 Collector"></a>4.1.1 Collector</h4><p>可以将Collector接口看做是用来处理流的工具，在Collectors类里面封装了很多Collector工具。</p><h4 id="4-1-2-Collectors"><a href="#4-1-2-Collectors" class="headerlink" title="4.1.2 Collectors"></a>4.1.2 Collectors</h4><p>Collectors类是一个提供了多种Collector接口的工具类。</p><h5 id="4-1-2-1-集合"><a href="#4-1-2-1-集合" class="headerlink" title="4.1.2.1 集合"></a>4.1.2.1 集合</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用toCollection()方法收集到Collection返回</span></span><br><span class="line">LinkedList&lt;String&gt; newCollection = list.stream().collect(Collectors.toCollection(LinkedList::<span class="keyword">new</span>));</span><br><span class="line">System.out.println(newCollection);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用toList()方法收集到List返回，默认为ArrayList</span></span><br><span class="line">List&lt;String&gt; newList = list.stream().collect(Collectors.toList());</span><br><span class="line">System.out.println(newList);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用toSet()方法收集到Set返回，默认为HashSet</span></span><br><span class="line">Set&lt;String&gt; newSet = list.stream().collect(Collectors.toSet());</span><br><span class="line">System.out.println(newSet);<span class="comment">// [100, 123, 521, 345, 228, 838, 250]</span></span><br><span class="line"><span class="comment">// 使用toMap()方法收集到Map返回，主键冲突时默认抛出异常，默认为HashMap</span></span><br><span class="line">Map&lt;String, String&gt; newMap = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// 传入主键冲突时的处理方法，保留先插入的值，默认对主键由小到大排序</span></span><br><span class="line">newMap = list.stream().collect(Collectors.toMap(e -&gt; e.substring(<span class="number">0</span>, <span class="number">1</span>), e -&gt; e, (m, n) -&gt; m));</span><br><span class="line">System.out.println(newMap);<span class="comment">// &#123;1=123, 2=228, 3=345, 5=521, 8=838&#125;</span></span><br><span class="line"><span class="comment">// 传入主键冲突时的处理方法，保留后插入的值，设置对主键按照插入顺序排序</span></span><br><span class="line">newMap = list.stream().collect(Collectors.toMap(e -&gt; e.substring(<span class="number">0</span>, <span class="number">1</span>), e -&gt; e, (m, n) -&gt; n, LinkedHashMap::<span class="keyword">new</span>));</span><br><span class="line">System.out.println(newMap);<span class="comment">// &#123;1=100, 5=521, 2=250, 8=838, 3=345&#125;</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-2-拼接"><a href="#4-1-2-2-拼接" class="headerlink" title="4.1.2.2 拼接"></a>4.1.2.2 拼接</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用joining()方法将流中的元素拼接为字符串，可以指定连接符，也可以指定前后缀</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">str = list.stream().collect(Collectors.joining());</span><br><span class="line">System.out.println(str);<span class="comment">// 123521100228838250345</span></span><br><span class="line">str = list.stream().collect(Collectors.joining(<span class="string">&quot;-&quot;</span>));</span><br><span class="line">System.out.println(str);<span class="comment">// 123-521-100-228-838-250-345</span></span><br><span class="line">str = list.stream().collect(Collectors.joining(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&gt;&quot;</span>));</span><br><span class="line">System.out.println(str);<span class="comment">// &lt;123-521-100-228-838-250-345&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-3-数学"><a href="#4-1-2-3-数学" class="headerlink" title="4.1.2.3 数学"></a>4.1.2.3 数学</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用counting()方法统计流中元素的个数</span></span><br><span class="line"><span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> list.stream().collect(Collectors.counting());</span><br><span class="line">System.out.println(count);<span class="comment">// 7</span></span><br><span class="line"><span class="comment">// 使用maxBy()方法获取流中元素的最大值</span></span><br><span class="line">Optional&lt;String&gt; max = list.stream().collect(Collectors.maxBy((m, n) -&gt; Integer.valueOf(m) - Integer.valueOf(n)));</span><br><span class="line">System.out.println(max);<span class="comment">// Optional[838]</span></span><br><span class="line"><span class="comment">// 使用minBy()方法获取流中元素的最小值</span></span><br><span class="line">Optional&lt;String&gt; min = list.stream().collect(Collectors.minBy((m, n) -&gt; Integer.valueOf(m) - Integer.valueOf(n)));</span><br><span class="line">System.out.println(min);<span class="comment">// Optional[100]</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-4-映射"><a href="#4-1-2-4-映射" class="headerlink" title="4.1.2.4 映射"></a>4.1.2.4 映射</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Score&gt; scoreList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Score&gt;();</span><br><span class="line">scoreList.add(<span class="keyword">new</span> <span class="title class_">Score</span>(<span class="string">&quot;201010&quot;</span>, <span class="string">&quot;张三&quot;</span>));</span><br><span class="line">scoreList.add(<span class="keyword">new</span> <span class="title class_">Score</span>(<span class="string">&quot;201011&quot;</span>, <span class="string">&quot;李四&quot;</span>));</span><br><span class="line">scoreList.add(<span class="keyword">new</span> <span class="title class_">Score</span>(<span class="string">&quot;201012&quot;</span>, <span class="string">&quot;王五&quot;</span>));</span><br><span class="line"><span class="comment">// 使用mapping()方法将流中的元素进行处理，按照指定格式返回结果</span></span><br><span class="line">List&lt;String&gt; names = scoreList.stream().collect(Collectors.mapping(Score::getName, Collectors.toList()));</span><br><span class="line">System.out.println(names);<span class="comment">// [张三, 李四, 王五]</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-5-收集处理"><a href="#4-1-2-5-收集处理" class="headerlink" title="4.1.2.5 收集处理"></a>4.1.2.5 收集处理</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用collectingAndThen()方法对收集后的结构进行进一步处理</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">size</span> <span class="operator">=</span> list.stream().collect(Collectors.collectingAndThen(Collectors.toList(), List::size));</span><br><span class="line">System.out.println(size);<span class="comment">// 7</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-6-统计归纳"><a href="#4-1-2-6-统计归纳" class="headerlink" title="4.1.2.6 统计归纳"></a>4.1.2.6 统计归纳</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用reducing()方法对流中的元素做统计归纳，有三个重载方法，和Stream里的三个方法对应，二者作用完全一致</span></span><br><span class="line">Optional&lt;Integer&gt; sum = list.stream().map(String::length).collect(Collectors.reducing(Integer::sum));</span><br><span class="line">System.out.println(sum);<span class="comment">// Optional[21]</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">sumWith0</span> <span class="operator">=</span> list.stream().map(String::length).collect(Collectors.reducing(<span class="number">0</span>, Integer::sum));</span><br><span class="line">System.out.println(sumWith0);<span class="comment">// 21</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">sumWith5</span> <span class="operator">=</span> list.stream().collect(Collectors.reducing(<span class="number">0</span>, String::length, Integer::sum));</span><br><span class="line">System.out.println(sumWith5);<span class="comment">// 26</span></span><br></pre></td></tr></table></figure><h5 id="4-2-1-7-分组"><a href="#4-2-1-7-分组" class="headerlink" title="4.2.1.7 分组"></a>4.2.1.7 分组</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用groupingBy()方法按照规则将流中的数据分为多个组，有三个重载方法</span></span><br><span class="line">Map&lt;String, List&lt;String&gt;&gt; groupByFirst = list.stream().collect(Collectors.groupingBy(e -&gt; e.substring(<span class="number">0</span>, <span class="number">1</span>)));</span><br><span class="line">System.out.println(groupByFirst);<span class="comment">// &#123;1=[123, 100], 2=[228, 250], 3=[345], 5=[521], 8=[838]&#125;</span></span><br><span class="line">Map&lt;String, Set&lt;String&gt;&gt; groupByLast = list.stream().collect(Collectors.groupingBy(e -&gt; e.substring(e.length() - <span class="number">1</span>), Collectors.toSet()));</span><br><span class="line">System.out.println(groupByLast);<span class="comment">// &#123;0=[100, 250], 1=[521], 3=[123], 5=[345], 8=[228, 838]&#125;</span></span><br><span class="line">HashMap&lt;Integer, Set&lt;String&gt;&gt; groupByLength = list.stream().collect(Collectors.groupingBy(String::length, HashMap::<span class="keyword">new</span>, Collectors.toSet()));</span><br><span class="line">System.out.println(groupByLength);<span class="comment">// &#123;3=[100, 123, 521, 345, 228, 838, 250]&#125;</span></span><br></pre></td></tr></table></figure><h5 id="4-1-2-8-分区"><a href="#4-1-2-8-分区" class="headerlink" title="4.1.2.8 分区"></a>4.1.2.8 分区</h5><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;521&quot;</span>, <span class="string">&quot;100&quot;</span>, <span class="string">&quot;228&quot;</span>, <span class="string">&quot;838&quot;</span>, <span class="string">&quot;250&quot;</span>, <span class="string">&quot;345&quot;</span>);</span><br><span class="line">System.out.println(list);<span class="comment">// [123, 521, 100, 228, 838, 250, 345]</span></span><br><span class="line"><span class="comment">// 使用partitioningBy()方法按照规则将流中的数据分为两个区，有两个重载方法</span></span><br><span class="line">Map&lt;Boolean, List&lt;String&gt;&gt; moreThan = list.stream().collect(Collectors.partitioningBy(e -&gt; Integer.parseInt(e) &gt; <span class="number">300</span>));</span><br><span class="line">System.out.println(moreThan);<span class="comment">// &#123;false=[123, 100, 228, 250], true=[521, 838, 345]&#125;</span></span><br><span class="line">Map&lt;Boolean, Set&lt;String&gt;&gt; lessThan = list.stream().collect(Collectors.partitioningBy(e -&gt; Integer.parseInt(e) &lt; <span class="number">300</span>, Collectors.toSet()));</span><br><span class="line">System.out.println(lessThan);<span class="comment">// &#123;false=[521, 345, 838], true=[100, 123, 228, 250]&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4-1-遍历集合"><a href="#4-1-遍历集合" class="headerlink" title="4.1 遍历集合"></a>4.1 遍历集合</h3><h4 id="4-1-1-遍历List"><a href="#4-1-1-遍历List" class="headerlink" title="4.1.1 遍历List"></a>4.1.1 遍历List</h4><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">list.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">list.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><h4 id="4-1-2-遍历Set"><a href="#4-1-2-遍历Set" class="headerlink" title="4.1.2 遍历Set"></a>4.1.2 遍历Set</h4><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();</span><br><span class="line">set.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">set.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">set.add(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">set.add(<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">set.forEach(e -&gt; System.out.println(e));</span><br></pre></td></tr></table></figure><h4 id="4-1-3-遍历Map"><a href="#4-1-3-遍历Map" class="headerlink" title="4.1.3 遍历Map"></a>4.1.3 遍历Map</h4><p>示例：</p><figure class="highlight java"><figcaption><span>java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Integer, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line">map.put(<span class="number">101</span>, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">map.put(<span class="number">102</span>, <span class="string">&quot;李四&quot;</span>);</span><br><span class="line">map.put(<span class="number">103</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">map.put(<span class="number">104</span>, <span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">map.forEach((key, value) -&gt; System.out.println(key+<span class="string">&quot;-&gt;&quot;</span>+value));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：本文学习了流式处理，使用新增方法操作集合，以及通过Optional类判断空值。&lt;/p&gt;</summary>
    
    
    
    <category term="大后端" scheme="https://momashanhe.com/categories/%E5%A4%A7%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://momashanhe.com/tags/Java/"/>
    
  </entry>
  
</feed>
